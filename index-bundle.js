/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/index.js":
/*!*************************!*\
  !*** ./assets/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("function component() {\r\n  const element = document.createElement('div');\r\n  element.innerHTML = 'Hello  ttt webpack';\r\n  return element;\r\n}\r\ndocument.body.appendChild(component());\r\n\r\n\r\n\r\narrow = __webpack_require__(/*! apache-arrow */ \"./node_modules/apache-arrow/Arrow.dom.js\")\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://assets/./assets/index.js?");

/***/ }),

/***/ "./node_modules/flatbuffers/mjs/builder.js":
/*!*************************************************!*\
  !*** ./node_modules/flatbuffers/mjs/builder.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Builder\": () => (/* binding */ Builder)\n/* harmony export */ });\n/* harmony import */ var _byte_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-buffer */ \"./node_modules/flatbuffers/mjs/byte-buffer.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./node_modules/flatbuffers/mjs/constants.js\");\n/* harmony import */ var _long__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./long */ \"./node_modules/flatbuffers/mjs/long.js\");\n\r\n\r\n\r\nclass Builder {\r\n    /**\r\n     * Create a FlatBufferBuilder.\r\n     */\r\n    constructor(opt_initial_size) {\r\n        /** Minimum alignment encountered so far. */\r\n        this.minalign = 1;\r\n        /** The vtable for the current table. */\r\n        this.vtable = null;\r\n        /** The amount of fields we're actually using. */\r\n        this.vtable_in_use = 0;\r\n        /** Whether we are currently serializing a table. */\r\n        this.isNested = false;\r\n        /** Starting offset of the current struct/table. */\r\n        this.object_start = 0;\r\n        /** List of offsets of all vtables. */\r\n        this.vtables = [];\r\n        /** For the current vector being built. */\r\n        this.vector_num_elems = 0;\r\n        /** False omits default values from the serialized data */\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n        let initial_size;\r\n        if (!opt_initial_size) {\r\n            initial_size = 1024;\r\n        }\r\n        else {\r\n            initial_size = opt_initial_size;\r\n        }\r\n        /**\r\n         * @type {ByteBuffer}\r\n         * @private\r\n         */\r\n        this.bb = _byte_buffer__WEBPACK_IMPORTED_MODULE_0__.ByteBuffer.allocate(initial_size);\r\n        this.space = initial_size;\r\n    }\r\n    clear() {\r\n        this.bb.clear();\r\n        this.space = this.bb.capacity();\r\n        this.minalign = 1;\r\n        this.vtable = null;\r\n        this.vtable_in_use = 0;\r\n        this.isNested = false;\r\n        this.object_start = 0;\r\n        this.vtables = [];\r\n        this.vector_num_elems = 0;\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n    }\r\n    /**\r\n     * In order to save space, fields that are set to their default value\r\n     * don't get serialized into the buffer. Forcing defaults provides a\r\n     * way to manually disable this optimization.\r\n     *\r\n     * @param forceDefaults true always serializes default values\r\n     */\r\n    forceDefaults(forceDefaults) {\r\n        this.force_defaults = forceDefaults;\r\n    }\r\n    /**\r\n     * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\r\n     * called finish(). The actual data starts at the ByteBuffer's current position,\r\n     * not necessarily at 0.\r\n     */\r\n    dataBuffer() {\r\n        return this.bb;\r\n    }\r\n    /**\r\n     * Get the bytes representing the FlatBuffer. Only call this after you've\r\n     * called finish().\r\n     */\r\n    asUint8Array() {\r\n        return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\r\n    }\r\n    /**\r\n     * Prepare to write an element of `size` after `additional_bytes` have been\r\n     * written, e.g. if you write a string, you need to align such the int length\r\n     * field is aligned to 4 bytes, and the string data follows it directly. If all\r\n     * you need to do is alignment, `additional_bytes` will be 0.\r\n     *\r\n     * @param size This is the of the new element to write\r\n     * @param additional_bytes The padding size\r\n     */\r\n    prep(size, additional_bytes) {\r\n        // Track the biggest thing we've ever aligned to.\r\n        if (size > this.minalign) {\r\n            this.minalign = size;\r\n        }\r\n        // Find the amount of alignment needed such that `size` is properly\r\n        // aligned after `additional_bytes`\r\n        const align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\r\n        // Reallocate the buffer if needed.\r\n        while (this.space < align_size + size + additional_bytes) {\r\n            const old_buf_size = this.bb.capacity();\r\n            this.bb = Builder.growByteBuffer(this.bb);\r\n            this.space += this.bb.capacity() - old_buf_size;\r\n        }\r\n        this.pad(align_size);\r\n    }\r\n    pad(byte_size) {\r\n        for (let i = 0; i < byte_size; i++) {\r\n            this.bb.writeInt8(--this.space, 0);\r\n        }\r\n    }\r\n    writeInt8(value) {\r\n        this.bb.writeInt8(this.space -= 1, value);\r\n    }\r\n    writeInt16(value) {\r\n        this.bb.writeInt16(this.space -= 2, value);\r\n    }\r\n    writeInt32(value) {\r\n        this.bb.writeInt32(this.space -= 4, value);\r\n    }\r\n    writeInt64(value) {\r\n        this.bb.writeInt64(this.space -= 8, value);\r\n    }\r\n    writeFloat32(value) {\r\n        this.bb.writeFloat32(this.space -= 4, value);\r\n    }\r\n    writeFloat64(value) {\r\n        this.bb.writeFloat64(this.space -= 8, value);\r\n    }\r\n    /**\r\n     * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int8` to add the the buffer.\r\n     */\r\n    addInt8(value) {\r\n        this.prep(1, 0);\r\n        this.writeInt8(value);\r\n    }\r\n    /**\r\n     * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int16` to add the the buffer.\r\n     */\r\n    addInt16(value) {\r\n        this.prep(2, 0);\r\n        this.writeInt16(value);\r\n    }\r\n    /**\r\n     * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int32` to add the the buffer.\r\n     */\r\n    addInt32(value) {\r\n        this.prep(4, 0);\r\n        this.writeInt32(value);\r\n    }\r\n    /**\r\n     * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int64` to add the the buffer.\r\n     */\r\n    addInt64(value) {\r\n        this.prep(8, 0);\r\n        this.writeInt64(value);\r\n    }\r\n    /**\r\n     * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float32` to add the the buffer.\r\n     */\r\n    addFloat32(value) {\r\n        this.prep(4, 0);\r\n        this.writeFloat32(value);\r\n    }\r\n    /**\r\n     * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float64` to add the the buffer.\r\n     */\r\n    addFloat64(value) {\r\n        this.prep(8, 0);\r\n        this.writeFloat64(value);\r\n    }\r\n    addFieldInt8(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt8(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt16(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt16(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || !value.equals(defaultValue)) {\r\n            this.addInt64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldOffset(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addOffset(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structs are stored inline, so nothing additional is being added. `d` is always 0.\r\n     */\r\n    addFieldStruct(voffset, value, defaultValue) {\r\n        if (value != defaultValue) {\r\n            this.nested(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structures are always stored inline, they need to be created right\r\n     * where they're used.  You'll get this assertion failure if you\r\n     * created it elsewhere.\r\n     */\r\n    nested(obj) {\r\n        if (obj != this.offset()) {\r\n            throw new Error('FlatBuffers: struct must be serialized inline.');\r\n        }\r\n    }\r\n    /**\r\n     * Should not be creating any other object, string or vector\r\n     * while an object is being constructed\r\n     */\r\n    notNested() {\r\n        if (this.isNested) {\r\n            throw new Error('FlatBuffers: object serialization must not be nested.');\r\n        }\r\n    }\r\n    /**\r\n     * Set the current vtable at `voffset` to the current location in the buffer.\r\n     */\r\n    slot(voffset) {\r\n        if (this.vtable !== null)\r\n            this.vtable[voffset] = this.offset();\r\n    }\r\n    /**\r\n     * @returns Offset relative to the end of the buffer.\r\n     */\r\n    offset() {\r\n        return this.bb.capacity() - this.space;\r\n    }\r\n    /**\r\n     * Doubles the size of the backing ByteBuffer and copies the old data towards\r\n     * the end of the new buffer (since we build the buffer backwards).\r\n     *\r\n     * @param bb The current buffer with the existing data\r\n     * @returns A new byte buffer with the old data copied\r\n     * to it. The data is located at the end of the buffer.\r\n     *\r\n     * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\r\n     * it a uint8Array we need to suppress the type check:\r\n     * @suppress {checkTypes}\r\n     */\r\n    static growByteBuffer(bb) {\r\n        const old_buf_size = bb.capacity();\r\n        // Ensure we don't grow beyond what fits in an int.\r\n        if (old_buf_size & 0xC0000000) {\r\n            throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\r\n        }\r\n        const new_buf_size = old_buf_size << 1;\r\n        const nbb = _byte_buffer__WEBPACK_IMPORTED_MODULE_0__.ByteBuffer.allocate(new_buf_size);\r\n        nbb.setPosition(new_buf_size - old_buf_size);\r\n        nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\r\n        return nbb;\r\n    }\r\n    /**\r\n     * Adds on offset, relative to where it will be written.\r\n     *\r\n     * @param offset The offset to add.\r\n     */\r\n    addOffset(offset) {\r\n        this.prep(_constants__WEBPACK_IMPORTED_MODULE_1__.SIZEOF_INT, 0); // Ensure alignment is already done.\r\n        this.writeInt32(this.offset() - offset + _constants__WEBPACK_IMPORTED_MODULE_1__.SIZEOF_INT);\r\n    }\r\n    /**\r\n     * Start encoding a new object in the buffer.  Users will not usually need to\r\n     * call this directly. The FlatBuffers compiler will generate helper methods\r\n     * that call this method internally.\r\n     */\r\n    startObject(numfields) {\r\n        this.notNested();\r\n        if (this.vtable == null) {\r\n            this.vtable = [];\r\n        }\r\n        this.vtable_in_use = numfields;\r\n        for (let i = 0; i < numfields; i++) {\r\n            this.vtable[i] = 0; // This will push additional elements as needed\r\n        }\r\n        this.isNested = true;\r\n        this.object_start = this.offset();\r\n    }\r\n    /**\r\n     * Finish off writing the object that is under construction.\r\n     *\r\n     * @returns The offset to the object inside `dataBuffer`\r\n     */\r\n    endObject() {\r\n        if (this.vtable == null || !this.isNested) {\r\n            throw new Error('FlatBuffers: endObject called without startObject');\r\n        }\r\n        this.addInt32(0);\r\n        const vtableloc = this.offset();\r\n        // Trim trailing zeroes.\r\n        let i = this.vtable_in_use - 1;\r\n        // eslint-disable-next-line no-empty\r\n        for (; i >= 0 && this.vtable[i] == 0; i--) { }\r\n        const trimmed_size = i + 1;\r\n        // Write out the current vtable.\r\n        for (; i >= 0; i--) {\r\n            // Offset relative to the start of the table.\r\n            this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\r\n        }\r\n        const standard_fields = 2; // The fields below:\r\n        this.addInt16(vtableloc - this.object_start);\r\n        const len = (trimmed_size + standard_fields) * _constants__WEBPACK_IMPORTED_MODULE_1__.SIZEOF_SHORT;\r\n        this.addInt16(len);\r\n        // Search for an existing vtable that matches the current one.\r\n        let existing_vtable = 0;\r\n        const vt1 = this.space;\r\n        outer_loop: for (i = 0; i < this.vtables.length; i++) {\r\n            const vt2 = this.bb.capacity() - this.vtables[i];\r\n            if (len == this.bb.readInt16(vt2)) {\r\n                for (let j = _constants__WEBPACK_IMPORTED_MODULE_1__.SIZEOF_SHORT; j < len; j += _constants__WEBPACK_IMPORTED_MODULE_1__.SIZEOF_SHORT) {\r\n                    if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\r\n                        continue outer_loop;\r\n                    }\r\n                }\r\n                existing_vtable = this.vtables[i];\r\n                break;\r\n            }\r\n        }\r\n        if (existing_vtable) {\r\n            // Found a match:\r\n            // Remove the current vtable.\r\n            this.space = this.bb.capacity() - vtableloc;\r\n            // Point table to existing vtable.\r\n            this.bb.writeInt32(this.space, existing_vtable - vtableloc);\r\n        }\r\n        else {\r\n            // No match:\r\n            // Add the location of the current vtable to the list of vtables.\r\n            this.vtables.push(this.offset());\r\n            // Point table to current vtable.\r\n            this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\r\n        }\r\n        this.isNested = false;\r\n        return vtableloc;\r\n    }\r\n    /**\r\n     * Finalize a buffer, poiting to the given `root_table`.\r\n     */\r\n    finish(root_table, opt_file_identifier, opt_size_prefix) {\r\n        const size_prefix = opt_size_prefix ? _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE_PREFIX_LENGTH : 0;\r\n        if (opt_file_identifier) {\r\n            const file_identifier = opt_file_identifier;\r\n            this.prep(this.minalign, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZEOF_INT +\r\n                _constants__WEBPACK_IMPORTED_MODULE_1__.FILE_IDENTIFIER_LENGTH + size_prefix);\r\n            if (file_identifier.length != _constants__WEBPACK_IMPORTED_MODULE_1__.FILE_IDENTIFIER_LENGTH) {\r\n                throw new Error('FlatBuffers: file identifier must be length ' +\r\n                    _constants__WEBPACK_IMPORTED_MODULE_1__.FILE_IDENTIFIER_LENGTH);\r\n            }\r\n            for (let i = _constants__WEBPACK_IMPORTED_MODULE_1__.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\r\n                this.writeInt8(file_identifier.charCodeAt(i));\r\n            }\r\n        }\r\n        this.prep(this.minalign, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZEOF_INT + size_prefix);\r\n        this.addOffset(root_table);\r\n        if (size_prefix) {\r\n            this.addInt32(this.bb.capacity() - this.space);\r\n        }\r\n        this.bb.setPosition(this.space);\r\n    }\r\n    /**\r\n     * Finalize a size prefixed buffer, pointing to the given `root_table`.\r\n     */\r\n    finishSizePrefixed(root_table, opt_file_identifier) {\r\n        this.finish(root_table, opt_file_identifier, true);\r\n    }\r\n    /**\r\n     * This checks a required field has been set in a given table that has\r\n     * just been constructed.\r\n     */\r\n    requiredField(table, field) {\r\n        const table_start = this.bb.capacity() - table;\r\n        const vtable_start = table_start - this.bb.readInt32(table_start);\r\n        const ok = this.bb.readInt16(vtable_start + field) != 0;\r\n        // If this fails, the caller will show what field needs to be set.\r\n        if (!ok) {\r\n            throw new Error('FlatBuffers: field ' + field + ' must be set');\r\n        }\r\n    }\r\n    /**\r\n     * Start a new array/vector of objects.  Users usually will not call\r\n     * this directly. The FlatBuffers compiler will create a start/end\r\n     * method for vector types in generated code.\r\n     *\r\n     * @param elem_size The size of each element in the array\r\n     * @param num_elems The number of elements in the array\r\n     * @param alignment The alignment of the array\r\n     */\r\n    startVector(elem_size, num_elems, alignment) {\r\n        this.notNested();\r\n        this.vector_num_elems = num_elems;\r\n        this.prep(_constants__WEBPACK_IMPORTED_MODULE_1__.SIZEOF_INT, elem_size * num_elems);\r\n        this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\r\n    }\r\n    /**\r\n     * Finish off the creation of an array and all its elements. The array must be\r\n     * created with `startVector`.\r\n     *\r\n     * @returns The offset at which the newly created array\r\n     * starts.\r\n     */\r\n    endVector() {\r\n        this.writeInt32(this.vector_num_elems);\r\n        return this.offset();\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If the string passed has\r\n     * already been seen, we return the offset of the already written string\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createSharedString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        if (!this.string_maps) {\r\n            this.string_maps = new Map();\r\n        }\r\n        if (this.string_maps.has(s)) {\r\n            return this.string_maps.get(s);\r\n        }\r\n        const offset = this.createString(s);\r\n        this.string_maps.set(s, offset);\r\n        return offset;\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\r\n     * instead of a string, it is assumed to contain valid UTF-8 encoded data.\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        let utf8;\r\n        if (s instanceof Uint8Array) {\r\n            utf8 = s;\r\n        }\r\n        else {\r\n            utf8 = [];\r\n            let i = 0;\r\n            while (i < s.length) {\r\n                let codePoint;\r\n                // Decode UTF-16\r\n                const a = s.charCodeAt(i++);\r\n                if (a < 0xD800 || a >= 0xDC00) {\r\n                    codePoint = a;\r\n                }\r\n                else {\r\n                    const b = s.charCodeAt(i++);\r\n                    codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\r\n                }\r\n                // Encode UTF-8\r\n                if (codePoint < 0x80) {\r\n                    utf8.push(codePoint);\r\n                }\r\n                else {\r\n                    if (codePoint < 0x800) {\r\n                        utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\r\n                    }\r\n                    else {\r\n                        if (codePoint < 0x10000) {\r\n                            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\r\n                        }\r\n                        else {\r\n                            utf8.push(((codePoint >> 18) & 0x07) | 0xF0, ((codePoint >> 12) & 0x3F) | 0x80);\r\n                        }\r\n                        utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\r\n                    }\r\n                    utf8.push((codePoint & 0x3F) | 0x80);\r\n                }\r\n            }\r\n        }\r\n        this.addInt8(0);\r\n        this.startVector(1, utf8.length, 1);\r\n        this.bb.setPosition(this.space -= utf8.length);\r\n        for (let i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\r\n            bytes[offset++] = utf8[i];\r\n        }\r\n        return this.endVector();\r\n    }\r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low, high) {\r\n        return _long__WEBPACK_IMPORTED_MODULE_2__.Long.create(low, high);\r\n    }\r\n    /**\r\n     * A helper function to pack an object\r\n     *\r\n     * @returns offset of obj\r\n     */\r\n    createObjectOffset(obj) {\r\n        if (obj === null) {\r\n            return 0;\r\n        }\r\n        if (typeof obj === 'string') {\r\n            return this.createString(obj);\r\n        }\r\n        else {\r\n            return obj.pack(this);\r\n        }\r\n    }\r\n    /**\r\n     * A helper function to pack a list of object\r\n     *\r\n     * @returns list of offsets of each non null object\r\n     */\r\n    createObjectOffsetList(list) {\r\n        const ret = [];\r\n        for (let i = 0; i < list.length; ++i) {\r\n            const val = list[i];\r\n            if (val !== null) {\r\n                ret.push(this.createObjectOffset(val));\r\n            }\r\n            else {\r\n                throw new Error('FlatBuffers: Argument for createObjectOffsetList cannot contain null.');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    createStructOffsetList(list, startFunc) {\r\n        startFunc(this, list.length);\r\n        this.createObjectOffsetList(list);\r\n        return this.endVector();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://assets/./node_modules/flatbuffers/mjs/builder.js?");

/***/ }),

/***/ "./node_modules/flatbuffers/mjs/byte-buffer.js":
/*!*****************************************************!*\
  !*** ./node_modules/flatbuffers/mjs/byte-buffer.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ByteBuffer\": () => (/* binding */ ByteBuffer)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./node_modules/flatbuffers/mjs/constants.js\");\n/* harmony import */ var _long__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./long */ \"./node_modules/flatbuffers/mjs/long.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./node_modules/flatbuffers/mjs/utils.js\");\n/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./encoding */ \"./node_modules/flatbuffers/mjs/encoding.js\");\n\r\n\r\n\r\n\r\nclass ByteBuffer {\r\n    /**\r\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\r\n     */\r\n    constructor(bytes_) {\r\n        this.bytes_ = bytes_;\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Create and allocate a new ByteBuffer with a given size.\r\n     */\r\n    static allocate(byte_size) {\r\n        return new ByteBuffer(new Uint8Array(byte_size));\r\n    }\r\n    clear() {\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Get the underlying `Uint8Array`.\r\n     */\r\n    bytes() {\r\n        return this.bytes_;\r\n    }\r\n    /**\r\n     * Get the buffer's position.\r\n     */\r\n    position() {\r\n        return this.position_;\r\n    }\r\n    /**\r\n     * Set the buffer's position.\r\n     */\r\n    setPosition(position) {\r\n        this.position_ = position;\r\n    }\r\n    /**\r\n     * Get the buffer's capacity.\r\n     */\r\n    capacity() {\r\n        return this.bytes_.length;\r\n    }\r\n    readInt8(offset) {\r\n        return this.readUint8(offset) << 24 >> 24;\r\n    }\r\n    readUint8(offset) {\r\n        return this.bytes_[offset];\r\n    }\r\n    readInt16(offset) {\r\n        return this.readUint16(offset) << 16 >> 16;\r\n    }\r\n    readUint16(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\r\n    }\r\n    readInt32(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\r\n    }\r\n    readUint32(offset) {\r\n        return this.readInt32(offset) >>> 0;\r\n    }\r\n    readInt64(offset) {\r\n        return new _long__WEBPACK_IMPORTED_MODULE_1__.Long(this.readInt32(offset), this.readInt32(offset + 4));\r\n    }\r\n    readUint64(offset) {\r\n        return new _long__WEBPACK_IMPORTED_MODULE_1__.Long(this.readUint32(offset), this.readUint32(offset + 4));\r\n    }\r\n    readFloat32(offset) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_2__.int32[0] = this.readInt32(offset);\r\n        return _utils__WEBPACK_IMPORTED_MODULE_2__.float32[0];\r\n    }\r\n    readFloat64(offset) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_2__.int32[_utils__WEBPACK_IMPORTED_MODULE_2__.isLittleEndian ? 0 : 1] = this.readInt32(offset);\r\n        _utils__WEBPACK_IMPORTED_MODULE_2__.int32[_utils__WEBPACK_IMPORTED_MODULE_2__.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\r\n        return _utils__WEBPACK_IMPORTED_MODULE_2__.float64[0];\r\n    }\r\n    writeInt8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeUint8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeInt16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeUint16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeInt32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeUint32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeInt64(offset, value) {\r\n        this.writeInt32(offset, value.low);\r\n        this.writeInt32(offset + 4, value.high);\r\n    }\r\n    writeUint64(offset, value) {\r\n        this.writeUint32(offset, value.low);\r\n        this.writeUint32(offset + 4, value.high);\r\n    }\r\n    writeFloat32(offset, value) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_2__.float32[0] = value;\r\n        this.writeInt32(offset, _utils__WEBPACK_IMPORTED_MODULE_2__.int32[0]);\r\n    }\r\n    writeFloat64(offset, value) {\r\n        _utils__WEBPACK_IMPORTED_MODULE_2__.float64[0] = value;\r\n        this.writeInt32(offset, _utils__WEBPACK_IMPORTED_MODULE_2__.int32[_utils__WEBPACK_IMPORTED_MODULE_2__.isLittleEndian ? 0 : 1]);\r\n        this.writeInt32(offset + 4, _utils__WEBPACK_IMPORTED_MODULE_2__.int32[_utils__WEBPACK_IMPORTED_MODULE_2__.isLittleEndian ? 1 : 0]);\r\n    }\r\n    /**\r\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\r\n     * schema does not include a file_identifier (likely points at padding or the\r\n     * start of a the root vtable).\r\n     */\r\n    getBufferIdentifier() {\r\n        if (this.bytes_.length < this.position_ + _constants__WEBPACK_IMPORTED_MODULE_0__.SIZEOF_INT +\r\n            _constants__WEBPACK_IMPORTED_MODULE_0__.FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\r\n        }\r\n        let result = \"\";\r\n        for (let i = 0; i < _constants__WEBPACK_IMPORTED_MODULE_0__.FILE_IDENTIFIER_LENGTH; i++) {\r\n            result += String.fromCharCode(this.readInt8(this.position_ + _constants__WEBPACK_IMPORTED_MODULE_0__.SIZEOF_INT + i));\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\r\n     * field is not present.\r\n     */\r\n    __offset(bb_pos, vtable_offset) {\r\n        const vtable = bb_pos - this.readInt32(bb_pos);\r\n        return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\r\n    }\r\n    /**\r\n     * Initialize any Table-derived type to point to the union at the given offset.\r\n     */\r\n    __union(t, offset) {\r\n        t.bb_pos = offset + this.readInt32(offset);\r\n        t.bb = this;\r\n        return t;\r\n    }\r\n    /**\r\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\r\n     * This allocates a new string and converts to wide chars upon each access.\r\n     *\r\n     * To avoid the conversion to UTF-16, pass Encoding.UTF8_BYTES as\r\n     * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\r\n     * and from UTF-16 when the data will just be packaged back up in another\r\n     * FlatBuffer later on.\r\n     *\r\n     * @param offset\r\n     * @param opt_encoding Defaults to UTF16_STRING\r\n     */\r\n    __string(offset, opt_encoding) {\r\n        offset += this.readInt32(offset);\r\n        const length = this.readInt32(offset);\r\n        let result = '';\r\n        let i = 0;\r\n        offset += _constants__WEBPACK_IMPORTED_MODULE_0__.SIZEOF_INT;\r\n        if (opt_encoding === _encoding__WEBPACK_IMPORTED_MODULE_3__.Encoding.UTF8_BYTES) {\r\n            return this.bytes_.subarray(offset, offset + length);\r\n        }\r\n        while (i < length) {\r\n            let codePoint;\r\n            // Decode UTF-8\r\n            const a = this.readUint8(offset + i++);\r\n            if (a < 0xC0) {\r\n                codePoint = a;\r\n            }\r\n            else {\r\n                const b = this.readUint8(offset + i++);\r\n                if (a < 0xE0) {\r\n                    codePoint =\r\n                        ((a & 0x1F) << 6) |\r\n                            (b & 0x3F);\r\n                }\r\n                else {\r\n                    const c = this.readUint8(offset + i++);\r\n                    if (a < 0xF0) {\r\n                        codePoint =\r\n                            ((a & 0x0F) << 12) |\r\n                                ((b & 0x3F) << 6) |\r\n                                (c & 0x3F);\r\n                    }\r\n                    else {\r\n                        const d = this.readUint8(offset + i++);\r\n                        codePoint =\r\n                            ((a & 0x07) << 18) |\r\n                                ((b & 0x3F) << 12) |\r\n                                ((c & 0x3F) << 6) |\r\n                                (d & 0x3F);\r\n                    }\r\n                }\r\n            }\r\n            // Encode UTF-16\r\n            if (codePoint < 0x10000) {\r\n                result += String.fromCharCode(codePoint);\r\n            }\r\n            else {\r\n                codePoint -= 0x10000;\r\n                result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & ((1 << 10) - 1)) + 0xDC00);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\r\n     * if a string then return a new one\r\n     *\r\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\r\n     * makes the behaviour of __union_with_string different compared to __union\r\n     */\r\n    __union_with_string(o, offset) {\r\n        if (typeof o === 'string') {\r\n            return this.__string(offset);\r\n        }\r\n        return this.__union(o, offset);\r\n    }\r\n    /**\r\n     * Retrieve the relative offset stored at \"offset\"\r\n     */\r\n    __indirect(offset) {\r\n        return offset + this.readInt32(offset);\r\n    }\r\n    /**\r\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector(offset) {\r\n        return offset + this.readInt32(offset) + _constants__WEBPACK_IMPORTED_MODULE_0__.SIZEOF_INT; // data starts after the length\r\n    }\r\n    /**\r\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector_len(offset) {\r\n        return this.readInt32(offset + this.readInt32(offset));\r\n    }\r\n    __has_identifier(ident) {\r\n        if (ident.length != _constants__WEBPACK_IMPORTED_MODULE_0__.FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: file identifier must be length ' +\r\n                _constants__WEBPACK_IMPORTED_MODULE_0__.FILE_IDENTIFIER_LENGTH);\r\n        }\r\n        for (let i = 0; i < _constants__WEBPACK_IMPORTED_MODULE_0__.FILE_IDENTIFIER_LENGTH; i++) {\r\n            if (ident.charCodeAt(i) != this.readInt8(this.position() + _constants__WEBPACK_IMPORTED_MODULE_0__.SIZEOF_INT + i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low, high) {\r\n        return _long__WEBPACK_IMPORTED_MODULE_1__.Long.create(low, high);\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     */\r\n    createScalarList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            if (listAccessor(i) !== null) {\r\n                ret.push(listAccessor(i));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     * @param listAccessor function that accepts an index and return data at that index\r\n     * @param listLength listLength\r\n     * @param res result list\r\n     */\r\n    createObjList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            const val = listAccessor(i);\r\n            if (val !== null) {\r\n                ret.push(val.unpack());\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://assets/./node_modules/flatbuffers/mjs/byte-buffer.js?");

/***/ }),

/***/ "./node_modules/flatbuffers/mjs/constants.js":
/*!***************************************************!*\
  !*** ./node_modules/flatbuffers/mjs/constants.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FILE_IDENTIFIER_LENGTH\": () => (/* binding */ FILE_IDENTIFIER_LENGTH),\n/* harmony export */   \"SIZEOF_INT\": () => (/* binding */ SIZEOF_INT),\n/* harmony export */   \"SIZEOF_SHORT\": () => (/* binding */ SIZEOF_SHORT),\n/* harmony export */   \"SIZE_PREFIX_LENGTH\": () => (/* binding */ SIZE_PREFIX_LENGTH)\n/* harmony export */ });\nconst SIZEOF_SHORT = 2;\r\nconst SIZEOF_INT = 4;\r\nconst FILE_IDENTIFIER_LENGTH = 4;\r\nconst SIZE_PREFIX_LENGTH = 4;\r\n\n\n//# sourceURL=webpack://assets/./node_modules/flatbuffers/mjs/constants.js?");

/***/ }),

/***/ "./node_modules/flatbuffers/mjs/encoding.js":
/*!**************************************************!*\
  !*** ./node_modules/flatbuffers/mjs/encoding.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Encoding\": () => (/* binding */ Encoding)\n/* harmony export */ });\nvar Encoding;\r\n(function (Encoding) {\r\n    Encoding[Encoding[\"UTF8_BYTES\"] = 1] = \"UTF8_BYTES\";\r\n    Encoding[Encoding[\"UTF16_STRING\"] = 2] = \"UTF16_STRING\";\r\n})(Encoding || (Encoding = {}));\r\n\n\n//# sourceURL=webpack://assets/./node_modules/flatbuffers/mjs/encoding.js?");

/***/ }),

/***/ "./node_modules/flatbuffers/mjs/flatbuffers.js":
/*!*****************************************************!*\
  !*** ./node_modules/flatbuffers/mjs/flatbuffers.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Builder\": () => (/* reexport safe */ _builder__WEBPACK_IMPORTED_MODULE_4__.Builder),\n/* harmony export */   \"ByteBuffer\": () => (/* reexport safe */ _byte_buffer__WEBPACK_IMPORTED_MODULE_5__.ByteBuffer),\n/* harmony export */   \"Encoding\": () => (/* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_3__.Encoding),\n/* harmony export */   \"FILE_IDENTIFIER_LENGTH\": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.FILE_IDENTIFIER_LENGTH),\n/* harmony export */   \"Long\": () => (/* reexport safe */ _long__WEBPACK_IMPORTED_MODULE_2__.Long),\n/* harmony export */   \"SIZEOF_INT\": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SIZEOF_INT),\n/* harmony export */   \"SIZEOF_SHORT\": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SIZEOF_SHORT),\n/* harmony export */   \"SIZE_PREFIX_LENGTH\": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SIZE_PREFIX_LENGTH),\n/* harmony export */   \"createLong\": () => (/* reexport safe */ _long__WEBPACK_IMPORTED_MODULE_2__.createLong),\n/* harmony export */   \"float32\": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_1__.float32),\n/* harmony export */   \"float64\": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_1__.float64),\n/* harmony export */   \"int32\": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_1__.int32),\n/* harmony export */   \"isLittleEndian\": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_1__.isLittleEndian)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./node_modules/flatbuffers/mjs/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/flatbuffers/mjs/utils.js\");\n/* harmony import */ var _long__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./long */ \"./node_modules/flatbuffers/mjs/long.js\");\n/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./encoding */ \"./node_modules/flatbuffers/mjs/encoding.js\");\n/* harmony import */ var _builder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./builder */ \"./node_modules/flatbuffers/mjs/builder.js\");\n/* harmony import */ var _byte_buffer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./byte-buffer */ \"./node_modules/flatbuffers/mjs/byte-buffer.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://assets/./node_modules/flatbuffers/mjs/flatbuffers.js?");

/***/ }),

/***/ "./node_modules/flatbuffers/mjs/long.js":
/*!**********************************************!*\
  !*** ./node_modules/flatbuffers/mjs/long.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Long\": () => (/* binding */ Long),\n/* harmony export */   \"createLong\": () => (/* binding */ createLong)\n/* harmony export */ });\nfunction createLong(low, high) {\r\n    return Long.create(low, high);\r\n}\r\nclass Long {\r\n    constructor(low, high) {\r\n        this.low = low | 0;\r\n        this.high = high | 0;\r\n    }\r\n    static create(low, high) {\r\n        // Special-case zero to avoid GC overhead for default values\r\n        return low == 0 && high == 0 ? Long.ZERO : new Long(low, high);\r\n    }\r\n    toFloat64() {\r\n        return (this.low >>> 0) + this.high * 0x100000000;\r\n    }\r\n    equals(other) {\r\n        return this.low == other.low && this.high == other.high;\r\n    }\r\n}\r\nLong.ZERO = new Long(0, 0);\r\n\n\n//# sourceURL=webpack://assets/./node_modules/flatbuffers/mjs/long.js?");

/***/ }),

/***/ "./node_modules/flatbuffers/mjs/utils.js":
/*!***********************************************!*\
  !*** ./node_modules/flatbuffers/mjs/utils.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"float32\": () => (/* binding */ float32),\n/* harmony export */   \"float64\": () => (/* binding */ float64),\n/* harmony export */   \"int32\": () => (/* binding */ int32),\n/* harmony export */   \"isLittleEndian\": () => (/* binding */ isLittleEndian)\n/* harmony export */ });\nconst int32 = new Int32Array(2);\r\nconst float32 = new Float32Array(int32.buffer);\r\nconst float64 = new Float64Array(int32.buffer);\r\nconst isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\r\n\n\n//# sourceURL=webpack://assets/./node_modules/flatbuffers/mjs/utils.js?");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__assign\": () => (/* binding */ __assign),\n/* harmony export */   \"__asyncDelegator\": () => (/* binding */ __asyncDelegator),\n/* harmony export */   \"__asyncGenerator\": () => (/* binding */ __asyncGenerator),\n/* harmony export */   \"__asyncValues\": () => (/* binding */ __asyncValues),\n/* harmony export */   \"__await\": () => (/* binding */ __await),\n/* harmony export */   \"__awaiter\": () => (/* binding */ __awaiter),\n/* harmony export */   \"__classPrivateFieldGet\": () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   \"__classPrivateFieldIn\": () => (/* binding */ __classPrivateFieldIn),\n/* harmony export */   \"__classPrivateFieldSet\": () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   \"__createBinding\": () => (/* binding */ __createBinding),\n/* harmony export */   \"__decorate\": () => (/* binding */ __decorate),\n/* harmony export */   \"__exportStar\": () => (/* binding */ __exportStar),\n/* harmony export */   \"__extends\": () => (/* binding */ __extends),\n/* harmony export */   \"__generator\": () => (/* binding */ __generator),\n/* harmony export */   \"__importDefault\": () => (/* binding */ __importDefault),\n/* harmony export */   \"__importStar\": () => (/* binding */ __importStar),\n/* harmony export */   \"__makeTemplateObject\": () => (/* binding */ __makeTemplateObject),\n/* harmony export */   \"__metadata\": () => (/* binding */ __metadata),\n/* harmony export */   \"__param\": () => (/* binding */ __param),\n/* harmony export */   \"__read\": () => (/* binding */ __read),\n/* harmony export */   \"__rest\": () => (/* binding */ __rest),\n/* harmony export */   \"__spread\": () => (/* binding */ __spread),\n/* harmony export */   \"__spreadArray\": () => (/* binding */ __spreadArray),\n/* harmony export */   \"__spreadArrays\": () => (/* binding */ __spreadArrays),\n/* harmony export */   \"__values\": () => (/* binding */ __values)\n/* harmony export */ });\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nfunction __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nfunction __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\n\n//# sourceURL=webpack://assets/./node_modules/tslib/tslib.es6.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/Arrow.dom.js":
/*!************************************************!*\
  !*** ./node_modules/apache-arrow/Arrow.dom.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SparseUnion = exports.DenseUnion = exports.Union = exports.StructRow = exports.Struct = exports.List = exports.Decimal = exports.TimeNanosecond = exports.TimeMicrosecond = exports.TimeMillisecond = exports.TimeSecond = exports.Time = exports.TimestampNanosecond = exports.TimestampMicrosecond = exports.TimestampMillisecond = exports.TimestampSecond = exports.Timestamp = exports.DateMillisecond = exports.DateDay = exports.Date_ = exports.FixedSizeBinary = exports.Binary = exports.Utf8 = exports.Float64 = exports.Float32 = exports.Float16 = exports.Float = exports.Uint64 = exports.Uint32 = exports.Uint16 = exports.Uint8 = exports.Int64 = exports.Int32 = exports.Int16 = exports.Int8 = exports.Int = exports.Bool = exports.Null = exports.DataType = exports.makeData = exports.Data = exports.BufferType = exports.UnionMode = exports.Type = exports.TimeUnit = exports.Precision = exports.MetadataVersion = exports.MessageHeader = exports.IntervalUnit = exports.DateUnit = void 0;\nexports.FixedSizeListBuilder = exports.FixedSizeBinaryBuilder = exports.DictionaryBuilder = exports.DecimalBuilder = exports.DateMillisecondBuilder = exports.DateDayBuilder = exports.DateBuilder = exports.BoolBuilder = exports.BinaryBuilder = exports.builderThroughAsyncIterable = exports.builderThroughIterable = exports.makeBuilder = exports.Builder = exports.util = exports.RecordBatch = exports.Message = exports.JSONMessageReader = exports.AsyncMessageReader = exports.MessageReader = exports.tableToIPC = exports.tableFromIPC = exports.RecordBatchJSONWriter = exports.RecordBatchStreamWriter = exports.RecordBatchFileWriter = exports.RecordBatchWriter = exports.AsyncRecordBatchStreamReader = exports.AsyncRecordBatchFileReader = exports.RecordBatchStreamReader = exports.RecordBatchFileReader = exports.RecordBatchReader = exports.AsyncByteQueue = exports.AsyncByteStream = exports.ByteStream = exports.tableFromJSON = exports.vectorFromArray = exports.makeVector = exports.Vector = exports.Visitor = exports.Field = exports.Schema = exports.tableFromArrays = exports.makeTable = exports.Table = exports.MapRow = exports.Map_ = exports.FixedSizeList = exports.IntervalYearMonth = exports.IntervalDayTime = exports.Interval = exports.Dictionary = void 0;\nexports.Utf8Builder = exports.SparseUnionBuilder = exports.DenseUnionBuilder = exports.UnionBuilder = exports.TimeNanosecondBuilder = exports.TimeMicrosecondBuilder = exports.TimeMillisecondBuilder = exports.TimeSecondBuilder = exports.TimeBuilder = exports.TimestampNanosecondBuilder = exports.TimestampMicrosecondBuilder = exports.TimestampMillisecondBuilder = exports.TimestampSecondBuilder = exports.TimestampBuilder = exports.StructBuilder = exports.NullBuilder = exports.MapBuilder = exports.ListBuilder = exports.Uint64Builder = exports.Uint32Builder = exports.Uint16Builder = exports.Uint8Builder = exports.Int64Builder = exports.Int32Builder = exports.Int16Builder = exports.Int8Builder = exports.IntBuilder = exports.IntervalYearMonthBuilder = exports.IntervalDayTimeBuilder = exports.IntervalBuilder = exports.Float64Builder = exports.Float32Builder = exports.Float16Builder = exports.FloatBuilder = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst adapters_js_1 = tslib_1.__importDefault(__webpack_require__(/*! ./io/adapters.js */ \"./node_modules/apache-arrow/io/adapters.js\"));\nconst builder_js_1 = __webpack_require__(/*! ./builder.js */ \"./node_modules/apache-arrow/builder.js\");\nconst reader_js_1 = __webpack_require__(/*! ./ipc/reader.js */ \"./node_modules/apache-arrow/ipc/reader.js\");\nconst writer_js_1 = __webpack_require__(/*! ./ipc/writer.js */ \"./node_modules/apache-arrow/ipc/writer.js\");\nconst iterable_js_1 = __webpack_require__(/*! ./io/whatwg/iterable.js */ \"./node_modules/apache-arrow/io/whatwg/iterable.js\");\nconst builder_js_2 = __webpack_require__(/*! ./io/whatwg/builder.js */ \"./node_modules/apache-arrow/io/whatwg/builder.js\");\nconst reader_js_2 = __webpack_require__(/*! ./io/whatwg/reader.js */ \"./node_modules/apache-arrow/io/whatwg/reader.js\");\nconst writer_js_2 = __webpack_require__(/*! ./io/whatwg/writer.js */ \"./node_modules/apache-arrow/io/whatwg/writer.js\");\nadapters_js_1.default.toDOMStream = iterable_js_1.toDOMStream;\nbuilder_js_1.Builder['throughDOM'] = builder_js_2.builderThroughDOMStream;\nreader_js_1.RecordBatchReader['throughDOM'] = reader_js_2.recordBatchReaderThroughDOMStream;\nreader_js_1.RecordBatchFileReader['throughDOM'] = reader_js_2.recordBatchReaderThroughDOMStream;\nreader_js_1.RecordBatchStreamReader['throughDOM'] = reader_js_2.recordBatchReaderThroughDOMStream;\nwriter_js_1.RecordBatchWriter['throughDOM'] = writer_js_2.recordBatchWriterThroughDOMStream;\nwriter_js_1.RecordBatchFileWriter['throughDOM'] = writer_js_2.recordBatchWriterThroughDOMStream;\nwriter_js_1.RecordBatchStreamWriter['throughDOM'] = writer_js_2.recordBatchWriterThroughDOMStream;\nvar Arrow_js_1 = __webpack_require__(/*! ./Arrow.js */ \"./node_modules/apache-arrow/Arrow.js\");\nObject.defineProperty(exports, \"DateUnit\", ({ enumerable: true, get: function () { return Arrow_js_1.DateUnit; } }));\nObject.defineProperty(exports, \"IntervalUnit\", ({ enumerable: true, get: function () { return Arrow_js_1.IntervalUnit; } }));\nObject.defineProperty(exports, \"MessageHeader\", ({ enumerable: true, get: function () { return Arrow_js_1.MessageHeader; } }));\nObject.defineProperty(exports, \"MetadataVersion\", ({ enumerable: true, get: function () { return Arrow_js_1.MetadataVersion; } }));\nObject.defineProperty(exports, \"Precision\", ({ enumerable: true, get: function () { return Arrow_js_1.Precision; } }));\nObject.defineProperty(exports, \"TimeUnit\", ({ enumerable: true, get: function () { return Arrow_js_1.TimeUnit; } }));\nObject.defineProperty(exports, \"Type\", ({ enumerable: true, get: function () { return Arrow_js_1.Type; } }));\nObject.defineProperty(exports, \"UnionMode\", ({ enumerable: true, get: function () { return Arrow_js_1.UnionMode; } }));\nObject.defineProperty(exports, \"BufferType\", ({ enumerable: true, get: function () { return Arrow_js_1.BufferType; } }));\nObject.defineProperty(exports, \"Data\", ({ enumerable: true, get: function () { return Arrow_js_1.Data; } }));\nObject.defineProperty(exports, \"makeData\", ({ enumerable: true, get: function () { return Arrow_js_1.makeData; } }));\nObject.defineProperty(exports, \"DataType\", ({ enumerable: true, get: function () { return Arrow_js_1.DataType; } }));\nObject.defineProperty(exports, \"Null\", ({ enumerable: true, get: function () { return Arrow_js_1.Null; } }));\nObject.defineProperty(exports, \"Bool\", ({ enumerable: true, get: function () { return Arrow_js_1.Bool; } }));\nObject.defineProperty(exports, \"Int\", ({ enumerable: true, get: function () { return Arrow_js_1.Int; } }));\nObject.defineProperty(exports, \"Int8\", ({ enumerable: true, get: function () { return Arrow_js_1.Int8; } }));\nObject.defineProperty(exports, \"Int16\", ({ enumerable: true, get: function () { return Arrow_js_1.Int16; } }));\nObject.defineProperty(exports, \"Int32\", ({ enumerable: true, get: function () { return Arrow_js_1.Int32; } }));\nObject.defineProperty(exports, \"Int64\", ({ enumerable: true, get: function () { return Arrow_js_1.Int64; } }));\nObject.defineProperty(exports, \"Uint8\", ({ enumerable: true, get: function () { return Arrow_js_1.Uint8; } }));\nObject.defineProperty(exports, \"Uint16\", ({ enumerable: true, get: function () { return Arrow_js_1.Uint16; } }));\nObject.defineProperty(exports, \"Uint32\", ({ enumerable: true, get: function () { return Arrow_js_1.Uint32; } }));\nObject.defineProperty(exports, \"Uint64\", ({ enumerable: true, get: function () { return Arrow_js_1.Uint64; } }));\nObject.defineProperty(exports, \"Float\", ({ enumerable: true, get: function () { return Arrow_js_1.Float; } }));\nObject.defineProperty(exports, \"Float16\", ({ enumerable: true, get: function () { return Arrow_js_1.Float16; } }));\nObject.defineProperty(exports, \"Float32\", ({ enumerable: true, get: function () { return Arrow_js_1.Float32; } }));\nObject.defineProperty(exports, \"Float64\", ({ enumerable: true, get: function () { return Arrow_js_1.Float64; } }));\nObject.defineProperty(exports, \"Utf8\", ({ enumerable: true, get: function () { return Arrow_js_1.Utf8; } }));\nObject.defineProperty(exports, \"Binary\", ({ enumerable: true, get: function () { return Arrow_js_1.Binary; } }));\nObject.defineProperty(exports, \"FixedSizeBinary\", ({ enumerable: true, get: function () { return Arrow_js_1.FixedSizeBinary; } }));\nObject.defineProperty(exports, \"Date_\", ({ enumerable: true, get: function () { return Arrow_js_1.Date_; } }));\nObject.defineProperty(exports, \"DateDay\", ({ enumerable: true, get: function () { return Arrow_js_1.DateDay; } }));\nObject.defineProperty(exports, \"DateMillisecond\", ({ enumerable: true, get: function () { return Arrow_js_1.DateMillisecond; } }));\nObject.defineProperty(exports, \"Timestamp\", ({ enumerable: true, get: function () { return Arrow_js_1.Timestamp; } }));\nObject.defineProperty(exports, \"TimestampSecond\", ({ enumerable: true, get: function () { return Arrow_js_1.TimestampSecond; } }));\nObject.defineProperty(exports, \"TimestampMillisecond\", ({ enumerable: true, get: function () { return Arrow_js_1.TimestampMillisecond; } }));\nObject.defineProperty(exports, \"TimestampMicrosecond\", ({ enumerable: true, get: function () { return Arrow_js_1.TimestampMicrosecond; } }));\nObject.defineProperty(exports, \"TimestampNanosecond\", ({ enumerable: true, get: function () { return Arrow_js_1.TimestampNanosecond; } }));\nObject.defineProperty(exports, \"Time\", ({ enumerable: true, get: function () { return Arrow_js_1.Time; } }));\nObject.defineProperty(exports, \"TimeSecond\", ({ enumerable: true, get: function () { return Arrow_js_1.TimeSecond; } }));\nObject.defineProperty(exports, \"TimeMillisecond\", ({ enumerable: true, get: function () { return Arrow_js_1.TimeMillisecond; } }));\nObject.defineProperty(exports, \"TimeMicrosecond\", ({ enumerable: true, get: function () { return Arrow_js_1.TimeMicrosecond; } }));\nObject.defineProperty(exports, \"TimeNanosecond\", ({ enumerable: true, get: function () { return Arrow_js_1.TimeNanosecond; } }));\nObject.defineProperty(exports, \"Decimal\", ({ enumerable: true, get: function () { return Arrow_js_1.Decimal; } }));\nObject.defineProperty(exports, \"List\", ({ enumerable: true, get: function () { return Arrow_js_1.List; } }));\nObject.defineProperty(exports, \"Struct\", ({ enumerable: true, get: function () { return Arrow_js_1.Struct; } }));\nObject.defineProperty(exports, \"StructRow\", ({ enumerable: true, get: function () { return Arrow_js_1.StructRow; } }));\nObject.defineProperty(exports, \"Union\", ({ enumerable: true, get: function () { return Arrow_js_1.Union; } }));\nObject.defineProperty(exports, \"DenseUnion\", ({ enumerable: true, get: function () { return Arrow_js_1.DenseUnion; } }));\nObject.defineProperty(exports, \"SparseUnion\", ({ enumerable: true, get: function () { return Arrow_js_1.SparseUnion; } }));\nObject.defineProperty(exports, \"Dictionary\", ({ enumerable: true, get: function () { return Arrow_js_1.Dictionary; } }));\nObject.defineProperty(exports, \"Interval\", ({ enumerable: true, get: function () { return Arrow_js_1.Interval; } }));\nObject.defineProperty(exports, \"IntervalDayTime\", ({ enumerable: true, get: function () { return Arrow_js_1.IntervalDayTime; } }));\nObject.defineProperty(exports, \"IntervalYearMonth\", ({ enumerable: true, get: function () { return Arrow_js_1.IntervalYearMonth; } }));\nObject.defineProperty(exports, \"FixedSizeList\", ({ enumerable: true, get: function () { return Arrow_js_1.FixedSizeList; } }));\nObject.defineProperty(exports, \"Map_\", ({ enumerable: true, get: function () { return Arrow_js_1.Map_; } }));\nObject.defineProperty(exports, \"MapRow\", ({ enumerable: true, get: function () { return Arrow_js_1.MapRow; } }));\nObject.defineProperty(exports, \"Table\", ({ enumerable: true, get: function () { return Arrow_js_1.Table; } }));\nObject.defineProperty(exports, \"makeTable\", ({ enumerable: true, get: function () { return Arrow_js_1.makeTable; } }));\nObject.defineProperty(exports, \"tableFromArrays\", ({ enumerable: true, get: function () { return Arrow_js_1.tableFromArrays; } }));\nObject.defineProperty(exports, \"Schema\", ({ enumerable: true, get: function () { return Arrow_js_1.Schema; } }));\nObject.defineProperty(exports, \"Field\", ({ enumerable: true, get: function () { return Arrow_js_1.Field; } }));\nObject.defineProperty(exports, \"Visitor\", ({ enumerable: true, get: function () { return Arrow_js_1.Visitor; } }));\nObject.defineProperty(exports, \"Vector\", ({ enumerable: true, get: function () { return Arrow_js_1.Vector; } }));\nObject.defineProperty(exports, \"makeVector\", ({ enumerable: true, get: function () { return Arrow_js_1.makeVector; } }));\nObject.defineProperty(exports, \"vectorFromArray\", ({ enumerable: true, get: function () { return Arrow_js_1.vectorFromArray; } }));\nObject.defineProperty(exports, \"tableFromJSON\", ({ enumerable: true, get: function () { return Arrow_js_1.tableFromJSON; } }));\nObject.defineProperty(exports, \"ByteStream\", ({ enumerable: true, get: function () { return Arrow_js_1.ByteStream; } }));\nObject.defineProperty(exports, \"AsyncByteStream\", ({ enumerable: true, get: function () { return Arrow_js_1.AsyncByteStream; } }));\nObject.defineProperty(exports, \"AsyncByteQueue\", ({ enumerable: true, get: function () { return Arrow_js_1.AsyncByteQueue; } }));\nObject.defineProperty(exports, \"RecordBatchReader\", ({ enumerable: true, get: function () { return Arrow_js_1.RecordBatchReader; } }));\nObject.defineProperty(exports, \"RecordBatchFileReader\", ({ enumerable: true, get: function () { return Arrow_js_1.RecordBatchFileReader; } }));\nObject.defineProperty(exports, \"RecordBatchStreamReader\", ({ enumerable: true, get: function () { return Arrow_js_1.RecordBatchStreamReader; } }));\nObject.defineProperty(exports, \"AsyncRecordBatchFileReader\", ({ enumerable: true, get: function () { return Arrow_js_1.AsyncRecordBatchFileReader; } }));\nObject.defineProperty(exports, \"AsyncRecordBatchStreamReader\", ({ enumerable: true, get: function () { return Arrow_js_1.AsyncRecordBatchStreamReader; } }));\nObject.defineProperty(exports, \"RecordBatchWriter\", ({ enumerable: true, get: function () { return Arrow_js_1.RecordBatchWriter; } }));\nObject.defineProperty(exports, \"RecordBatchFileWriter\", ({ enumerable: true, get: function () { return Arrow_js_1.RecordBatchFileWriter; } }));\nObject.defineProperty(exports, \"RecordBatchStreamWriter\", ({ enumerable: true, get: function () { return Arrow_js_1.RecordBatchStreamWriter; } }));\nObject.defineProperty(exports, \"RecordBatchJSONWriter\", ({ enumerable: true, get: function () { return Arrow_js_1.RecordBatchJSONWriter; } }));\nObject.defineProperty(exports, \"tableFromIPC\", ({ enumerable: true, get: function () { return Arrow_js_1.tableFromIPC; } }));\nObject.defineProperty(exports, \"tableToIPC\", ({ enumerable: true, get: function () { return Arrow_js_1.tableToIPC; } }));\nObject.defineProperty(exports, \"MessageReader\", ({ enumerable: true, get: function () { return Arrow_js_1.MessageReader; } }));\nObject.defineProperty(exports, \"AsyncMessageReader\", ({ enumerable: true, get: function () { return Arrow_js_1.AsyncMessageReader; } }));\nObject.defineProperty(exports, \"JSONMessageReader\", ({ enumerable: true, get: function () { return Arrow_js_1.JSONMessageReader; } }));\nObject.defineProperty(exports, \"Message\", ({ enumerable: true, get: function () { return Arrow_js_1.Message; } }));\nObject.defineProperty(exports, \"RecordBatch\", ({ enumerable: true, get: function () { return Arrow_js_1.RecordBatch; } }));\nObject.defineProperty(exports, \"util\", ({ enumerable: true, get: function () { return Arrow_js_1.util; } }));\nObject.defineProperty(exports, \"Builder\", ({ enumerable: true, get: function () { return Arrow_js_1.Builder; } }));\nObject.defineProperty(exports, \"makeBuilder\", ({ enumerable: true, get: function () { return Arrow_js_1.makeBuilder; } }));\nObject.defineProperty(exports, \"builderThroughIterable\", ({ enumerable: true, get: function () { return Arrow_js_1.builderThroughIterable; } }));\nObject.defineProperty(exports, \"builderThroughAsyncIterable\", ({ enumerable: true, get: function () { return Arrow_js_1.builderThroughAsyncIterable; } }));\nvar Arrow_js_2 = __webpack_require__(/*! ./Arrow.js */ \"./node_modules/apache-arrow/Arrow.js\");\nObject.defineProperty(exports, \"BinaryBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.BinaryBuilder; } }));\nObject.defineProperty(exports, \"BoolBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.BoolBuilder; } }));\nObject.defineProperty(exports, \"DateBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.DateBuilder; } }));\nObject.defineProperty(exports, \"DateDayBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.DateDayBuilder; } }));\nObject.defineProperty(exports, \"DateMillisecondBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.DateMillisecondBuilder; } }));\nObject.defineProperty(exports, \"DecimalBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.DecimalBuilder; } }));\nObject.defineProperty(exports, \"DictionaryBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.DictionaryBuilder; } }));\nObject.defineProperty(exports, \"FixedSizeBinaryBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.FixedSizeBinaryBuilder; } }));\nObject.defineProperty(exports, \"FixedSizeListBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.FixedSizeListBuilder; } }));\nObject.defineProperty(exports, \"FloatBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.FloatBuilder; } }));\nObject.defineProperty(exports, \"Float16Builder\", ({ enumerable: true, get: function () { return Arrow_js_2.Float16Builder; } }));\nObject.defineProperty(exports, \"Float32Builder\", ({ enumerable: true, get: function () { return Arrow_js_2.Float32Builder; } }));\nObject.defineProperty(exports, \"Float64Builder\", ({ enumerable: true, get: function () { return Arrow_js_2.Float64Builder; } }));\nObject.defineProperty(exports, \"IntervalBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.IntervalBuilder; } }));\nObject.defineProperty(exports, \"IntervalDayTimeBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.IntervalDayTimeBuilder; } }));\nObject.defineProperty(exports, \"IntervalYearMonthBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.IntervalYearMonthBuilder; } }));\nObject.defineProperty(exports, \"IntBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.IntBuilder; } }));\nObject.defineProperty(exports, \"Int8Builder\", ({ enumerable: true, get: function () { return Arrow_js_2.Int8Builder; } }));\nObject.defineProperty(exports, \"Int16Builder\", ({ enumerable: true, get: function () { return Arrow_js_2.Int16Builder; } }));\nObject.defineProperty(exports, \"Int32Builder\", ({ enumerable: true, get: function () { return Arrow_js_2.Int32Builder; } }));\nObject.defineProperty(exports, \"Int64Builder\", ({ enumerable: true, get: function () { return Arrow_js_2.Int64Builder; } }));\nObject.defineProperty(exports, \"Uint8Builder\", ({ enumerable: true, get: function () { return Arrow_js_2.Uint8Builder; } }));\nObject.defineProperty(exports, \"Uint16Builder\", ({ enumerable: true, get: function () { return Arrow_js_2.Uint16Builder; } }));\nObject.defineProperty(exports, \"Uint32Builder\", ({ enumerable: true, get: function () { return Arrow_js_2.Uint32Builder; } }));\nObject.defineProperty(exports, \"Uint64Builder\", ({ enumerable: true, get: function () { return Arrow_js_2.Uint64Builder; } }));\nObject.defineProperty(exports, \"ListBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.ListBuilder; } }));\nObject.defineProperty(exports, \"MapBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.MapBuilder; } }));\nObject.defineProperty(exports, \"NullBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.NullBuilder; } }));\nObject.defineProperty(exports, \"StructBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.StructBuilder; } }));\nObject.defineProperty(exports, \"TimestampBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.TimestampBuilder; } }));\nObject.defineProperty(exports, \"TimestampSecondBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.TimestampSecondBuilder; } }));\nObject.defineProperty(exports, \"TimestampMillisecondBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.TimestampMillisecondBuilder; } }));\nObject.defineProperty(exports, \"TimestampMicrosecondBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.TimestampMicrosecondBuilder; } }));\nObject.defineProperty(exports, \"TimestampNanosecondBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.TimestampNanosecondBuilder; } }));\nObject.defineProperty(exports, \"TimeBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.TimeBuilder; } }));\nObject.defineProperty(exports, \"TimeSecondBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.TimeSecondBuilder; } }));\nObject.defineProperty(exports, \"TimeMillisecondBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.TimeMillisecondBuilder; } }));\nObject.defineProperty(exports, \"TimeMicrosecondBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.TimeMicrosecondBuilder; } }));\nObject.defineProperty(exports, \"TimeNanosecondBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.TimeNanosecondBuilder; } }));\nObject.defineProperty(exports, \"UnionBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.UnionBuilder; } }));\nObject.defineProperty(exports, \"DenseUnionBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.DenseUnionBuilder; } }));\nObject.defineProperty(exports, \"SparseUnionBuilder\", ({ enumerable: true, get: function () { return Arrow_js_2.SparseUnionBuilder; } }));\nObject.defineProperty(exports, \"Utf8Builder\", ({ enumerable: true, get: function () { return Arrow_js_2.Utf8Builder; } }));\n\n//# sourceMappingURL=Arrow.dom.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/Arrow.dom.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/Arrow.js":
/*!********************************************!*\
  !*** ./node_modules/apache-arrow/Arrow.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Dictionary = exports.SparseUnion = exports.DenseUnion = exports.Union = exports.Struct = exports.List = exports.Decimal = exports.TimeNanosecond = exports.TimeMicrosecond = exports.TimeMillisecond = exports.TimeSecond = exports.Time = exports.TimestampNanosecond = exports.TimestampMicrosecond = exports.TimestampMillisecond = exports.TimestampSecond = exports.Timestamp = exports.DateMillisecond = exports.DateDay = exports.Date_ = exports.FixedSizeBinary = exports.Binary = exports.Utf8 = exports.Float64 = exports.Float32 = exports.Float16 = exports.Float = exports.Uint64 = exports.Uint32 = exports.Uint16 = exports.Uint8 = exports.Int64 = exports.Int32 = exports.Int16 = exports.Int8 = exports.Int = exports.Bool = exports.Null = exports.DataType = exports.makeData = exports.Data = exports.MetadataVersion = exports.IntervalUnit = exports.UnionMode = exports.Precision = exports.TimeUnit = exports.DateUnit = exports.BufferType = exports.Type = exports.MessageHeader = void 0;\nexports.TimestampMillisecondBuilder = exports.TimestampSecondBuilder = exports.TimestampBuilder = exports.TimeNanosecondBuilder = exports.TimeMicrosecondBuilder = exports.TimeMillisecondBuilder = exports.TimeSecondBuilder = exports.TimeBuilder = exports.Uint64Builder = exports.Uint32Builder = exports.Uint16Builder = exports.Uint8Builder = exports.Int64Builder = exports.Int32Builder = exports.Int16Builder = exports.Int8Builder = exports.IntBuilder = exports.Float64Builder = exports.Float32Builder = exports.Float16Builder = exports.FloatBuilder = exports.FixedSizeBinaryBuilder = exports.DictionaryBuilder = exports.DecimalBuilder = exports.DateMillisecondBuilder = exports.DateDayBuilder = exports.DateBuilder = exports.NullBuilder = exports.BoolBuilder = exports.builderThroughAsyncIterable = exports.builderThroughIterable = exports.tableFromJSON = exports.vectorFromArray = exports.makeBuilder = exports.Builder = exports.StructRow = exports.MapRow = exports.Field = exports.Schema = exports.Visitor = exports.makeVector = exports.Vector = exports.tableFromArrays = exports.makeTable = exports.Table = exports.Map_ = exports.FixedSizeList = exports.IntervalYearMonth = exports.IntervalDayTime = exports.Interval = void 0;\nexports.util = exports.RecordBatch = exports.Message = exports.JSONMessageReader = exports.AsyncMessageReader = exports.MessageReader = exports.tableFromIPC = exports.tableToIPC = exports.RecordBatchJSONWriter = exports.RecordBatchStreamWriter = exports.RecordBatchFileWriter = exports.RecordBatchWriter = exports.AsyncRecordBatchStreamReader = exports.AsyncRecordBatchFileReader = exports.RecordBatchStreamReader = exports.RecordBatchFileReader = exports.RecordBatchReader = exports.AsyncByteQueue = exports.AsyncByteStream = exports.ByteStream = exports.DenseUnionBuilder = exports.SparseUnionBuilder = exports.UnionBuilder = exports.StructBuilder = exports.MapBuilder = exports.FixedSizeListBuilder = exports.ListBuilder = exports.BinaryBuilder = exports.Utf8Builder = exports.IntervalYearMonthBuilder = exports.IntervalDayTimeBuilder = exports.IntervalBuilder = exports.TimestampNanosecondBuilder = exports.TimestampMicrosecondBuilder = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nvar message_header_js_1 = __webpack_require__(/*! ./fb/message-header.js */ \"./node_modules/apache-arrow/fb/message-header.js\");\nObject.defineProperty(exports, \"MessageHeader\", ({ enumerable: true, get: function () { return message_header_js_1.MessageHeader; } }));\nvar enum_js_1 = __webpack_require__(/*! ./enum.js */ \"./node_modules/apache-arrow/enum.js\");\nObject.defineProperty(exports, \"Type\", ({ enumerable: true, get: function () { return enum_js_1.Type; } }));\nObject.defineProperty(exports, \"BufferType\", ({ enumerable: true, get: function () { return enum_js_1.BufferType; } }));\nObject.defineProperty(exports, \"DateUnit\", ({ enumerable: true, get: function () { return enum_js_1.DateUnit; } }));\nObject.defineProperty(exports, \"TimeUnit\", ({ enumerable: true, get: function () { return enum_js_1.TimeUnit; } }));\nObject.defineProperty(exports, \"Precision\", ({ enumerable: true, get: function () { return enum_js_1.Precision; } }));\nObject.defineProperty(exports, \"UnionMode\", ({ enumerable: true, get: function () { return enum_js_1.UnionMode; } }));\nObject.defineProperty(exports, \"IntervalUnit\", ({ enumerable: true, get: function () { return enum_js_1.IntervalUnit; } }));\nObject.defineProperty(exports, \"MetadataVersion\", ({ enumerable: true, get: function () { return enum_js_1.MetadataVersion; } }));\nvar data_js_1 = __webpack_require__(/*! ./data.js */ \"./node_modules/apache-arrow/data.js\");\nObject.defineProperty(exports, \"Data\", ({ enumerable: true, get: function () { return data_js_1.Data; } }));\nObject.defineProperty(exports, \"makeData\", ({ enumerable: true, get: function () { return data_js_1.makeData; } }));\nvar type_js_1 = __webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/type.js\");\nObject.defineProperty(exports, \"DataType\", ({ enumerable: true, get: function () { return type_js_1.DataType; } }));\nObject.defineProperty(exports, \"Null\", ({ enumerable: true, get: function () { return type_js_1.Null; } }));\nObject.defineProperty(exports, \"Bool\", ({ enumerable: true, get: function () { return type_js_1.Bool; } }));\nObject.defineProperty(exports, \"Int\", ({ enumerable: true, get: function () { return type_js_1.Int; } }));\nObject.defineProperty(exports, \"Int8\", ({ enumerable: true, get: function () { return type_js_1.Int8; } }));\nObject.defineProperty(exports, \"Int16\", ({ enumerable: true, get: function () { return type_js_1.Int16; } }));\nObject.defineProperty(exports, \"Int32\", ({ enumerable: true, get: function () { return type_js_1.Int32; } }));\nObject.defineProperty(exports, \"Int64\", ({ enumerable: true, get: function () { return type_js_1.Int64; } }));\nObject.defineProperty(exports, \"Uint8\", ({ enumerable: true, get: function () { return type_js_1.Uint8; } }));\nObject.defineProperty(exports, \"Uint16\", ({ enumerable: true, get: function () { return type_js_1.Uint16; } }));\nObject.defineProperty(exports, \"Uint32\", ({ enumerable: true, get: function () { return type_js_1.Uint32; } }));\nObject.defineProperty(exports, \"Uint64\", ({ enumerable: true, get: function () { return type_js_1.Uint64; } }));\nObject.defineProperty(exports, \"Float\", ({ enumerable: true, get: function () { return type_js_1.Float; } }));\nObject.defineProperty(exports, \"Float16\", ({ enumerable: true, get: function () { return type_js_1.Float16; } }));\nObject.defineProperty(exports, \"Float32\", ({ enumerable: true, get: function () { return type_js_1.Float32; } }));\nObject.defineProperty(exports, \"Float64\", ({ enumerable: true, get: function () { return type_js_1.Float64; } }));\nObject.defineProperty(exports, \"Utf8\", ({ enumerable: true, get: function () { return type_js_1.Utf8; } }));\nObject.defineProperty(exports, \"Binary\", ({ enumerable: true, get: function () { return type_js_1.Binary; } }));\nObject.defineProperty(exports, \"FixedSizeBinary\", ({ enumerable: true, get: function () { return type_js_1.FixedSizeBinary; } }));\nObject.defineProperty(exports, \"Date_\", ({ enumerable: true, get: function () { return type_js_1.Date_; } }));\nObject.defineProperty(exports, \"DateDay\", ({ enumerable: true, get: function () { return type_js_1.DateDay; } }));\nObject.defineProperty(exports, \"DateMillisecond\", ({ enumerable: true, get: function () { return type_js_1.DateMillisecond; } }));\nObject.defineProperty(exports, \"Timestamp\", ({ enumerable: true, get: function () { return type_js_1.Timestamp; } }));\nObject.defineProperty(exports, \"TimestampSecond\", ({ enumerable: true, get: function () { return type_js_1.TimestampSecond; } }));\nObject.defineProperty(exports, \"TimestampMillisecond\", ({ enumerable: true, get: function () { return type_js_1.TimestampMillisecond; } }));\nObject.defineProperty(exports, \"TimestampMicrosecond\", ({ enumerable: true, get: function () { return type_js_1.TimestampMicrosecond; } }));\nObject.defineProperty(exports, \"TimestampNanosecond\", ({ enumerable: true, get: function () { return type_js_1.TimestampNanosecond; } }));\nObject.defineProperty(exports, \"Time\", ({ enumerable: true, get: function () { return type_js_1.Time; } }));\nObject.defineProperty(exports, \"TimeSecond\", ({ enumerable: true, get: function () { return type_js_1.TimeSecond; } }));\nObject.defineProperty(exports, \"TimeMillisecond\", ({ enumerable: true, get: function () { return type_js_1.TimeMillisecond; } }));\nObject.defineProperty(exports, \"TimeMicrosecond\", ({ enumerable: true, get: function () { return type_js_1.TimeMicrosecond; } }));\nObject.defineProperty(exports, \"TimeNanosecond\", ({ enumerable: true, get: function () { return type_js_1.TimeNanosecond; } }));\nObject.defineProperty(exports, \"Decimal\", ({ enumerable: true, get: function () { return type_js_1.Decimal; } }));\nObject.defineProperty(exports, \"List\", ({ enumerable: true, get: function () { return type_js_1.List; } }));\nObject.defineProperty(exports, \"Struct\", ({ enumerable: true, get: function () { return type_js_1.Struct; } }));\nObject.defineProperty(exports, \"Union\", ({ enumerable: true, get: function () { return type_js_1.Union; } }));\nObject.defineProperty(exports, \"DenseUnion\", ({ enumerable: true, get: function () { return type_js_1.DenseUnion; } }));\nObject.defineProperty(exports, \"SparseUnion\", ({ enumerable: true, get: function () { return type_js_1.SparseUnion; } }));\nObject.defineProperty(exports, \"Dictionary\", ({ enumerable: true, get: function () { return type_js_1.Dictionary; } }));\nObject.defineProperty(exports, \"Interval\", ({ enumerable: true, get: function () { return type_js_1.Interval; } }));\nObject.defineProperty(exports, \"IntervalDayTime\", ({ enumerable: true, get: function () { return type_js_1.IntervalDayTime; } }));\nObject.defineProperty(exports, \"IntervalYearMonth\", ({ enumerable: true, get: function () { return type_js_1.IntervalYearMonth; } }));\nObject.defineProperty(exports, \"FixedSizeList\", ({ enumerable: true, get: function () { return type_js_1.FixedSizeList; } }));\nObject.defineProperty(exports, \"Map_\", ({ enumerable: true, get: function () { return type_js_1.Map_; } }));\nvar table_js_1 = __webpack_require__(/*! ./table.js */ \"./node_modules/apache-arrow/table.js\");\nObject.defineProperty(exports, \"Table\", ({ enumerable: true, get: function () { return table_js_1.Table; } }));\nObject.defineProperty(exports, \"makeTable\", ({ enumerable: true, get: function () { return table_js_1.makeTable; } }));\nObject.defineProperty(exports, \"tableFromArrays\", ({ enumerable: true, get: function () { return table_js_1.tableFromArrays; } }));\nvar vector_js_1 = __webpack_require__(/*! ./vector.js */ \"./node_modules/apache-arrow/vector.js\");\nObject.defineProperty(exports, \"Vector\", ({ enumerable: true, get: function () { return vector_js_1.Vector; } }));\nObject.defineProperty(exports, \"makeVector\", ({ enumerable: true, get: function () { return vector_js_1.makeVector; } }));\nvar visitor_js_1 = __webpack_require__(/*! ./visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nObject.defineProperty(exports, \"Visitor\", ({ enumerable: true, get: function () { return visitor_js_1.Visitor; } }));\nvar schema_js_1 = __webpack_require__(/*! ./schema.js */ \"./node_modules/apache-arrow/schema.js\");\nObject.defineProperty(exports, \"Schema\", ({ enumerable: true, get: function () { return schema_js_1.Schema; } }));\nObject.defineProperty(exports, \"Field\", ({ enumerable: true, get: function () { return schema_js_1.Field; } }));\nvar map_js_1 = __webpack_require__(/*! ./row/map.js */ \"./node_modules/apache-arrow/row/map.js\");\nObject.defineProperty(exports, \"MapRow\", ({ enumerable: true, get: function () { return map_js_1.MapRow; } }));\nvar struct_js_1 = __webpack_require__(/*! ./row/struct.js */ \"./node_modules/apache-arrow/row/struct.js\");\nObject.defineProperty(exports, \"StructRow\", ({ enumerable: true, get: function () { return struct_js_1.StructRow; } }));\nvar builder_js_1 = __webpack_require__(/*! ./builder.js */ \"./node_modules/apache-arrow/builder.js\");\nObject.defineProperty(exports, \"Builder\", ({ enumerable: true, get: function () { return builder_js_1.Builder; } }));\nvar factories_js_1 = __webpack_require__(/*! ./factories.js */ \"./node_modules/apache-arrow/factories.js\");\nObject.defineProperty(exports, \"makeBuilder\", ({ enumerable: true, get: function () { return factories_js_1.makeBuilder; } }));\nObject.defineProperty(exports, \"vectorFromArray\", ({ enumerable: true, get: function () { return factories_js_1.vectorFromArray; } }));\nObject.defineProperty(exports, \"tableFromJSON\", ({ enumerable: true, get: function () { return factories_js_1.tableFromJSON; } }));\nObject.defineProperty(exports, \"builderThroughIterable\", ({ enumerable: true, get: function () { return factories_js_1.builderThroughIterable; } }));\nObject.defineProperty(exports, \"builderThroughAsyncIterable\", ({ enumerable: true, get: function () { return factories_js_1.builderThroughAsyncIterable; } }));\nvar bool_js_1 = __webpack_require__(/*! ./builder/bool.js */ \"./node_modules/apache-arrow/builder/bool.js\");\nObject.defineProperty(exports, \"BoolBuilder\", ({ enumerable: true, get: function () { return bool_js_1.BoolBuilder; } }));\nvar null_js_1 = __webpack_require__(/*! ./builder/null.js */ \"./node_modules/apache-arrow/builder/null.js\");\nObject.defineProperty(exports, \"NullBuilder\", ({ enumerable: true, get: function () { return null_js_1.NullBuilder; } }));\nvar date_js_1 = __webpack_require__(/*! ./builder/date.js */ \"./node_modules/apache-arrow/builder/date.js\");\nObject.defineProperty(exports, \"DateBuilder\", ({ enumerable: true, get: function () { return date_js_1.DateBuilder; } }));\nObject.defineProperty(exports, \"DateDayBuilder\", ({ enumerable: true, get: function () { return date_js_1.DateDayBuilder; } }));\nObject.defineProperty(exports, \"DateMillisecondBuilder\", ({ enumerable: true, get: function () { return date_js_1.DateMillisecondBuilder; } }));\nvar decimal_js_1 = __webpack_require__(/*! ./builder/decimal.js */ \"./node_modules/apache-arrow/builder/decimal.js\");\nObject.defineProperty(exports, \"DecimalBuilder\", ({ enumerable: true, get: function () { return decimal_js_1.DecimalBuilder; } }));\nvar dictionary_js_1 = __webpack_require__(/*! ./builder/dictionary.js */ \"./node_modules/apache-arrow/builder/dictionary.js\");\nObject.defineProperty(exports, \"DictionaryBuilder\", ({ enumerable: true, get: function () { return dictionary_js_1.DictionaryBuilder; } }));\nvar fixedsizebinary_js_1 = __webpack_require__(/*! ./builder/fixedsizebinary.js */ \"./node_modules/apache-arrow/builder/fixedsizebinary.js\");\nObject.defineProperty(exports, \"FixedSizeBinaryBuilder\", ({ enumerable: true, get: function () { return fixedsizebinary_js_1.FixedSizeBinaryBuilder; } }));\nvar float_js_1 = __webpack_require__(/*! ./builder/float.js */ \"./node_modules/apache-arrow/builder/float.js\");\nObject.defineProperty(exports, \"FloatBuilder\", ({ enumerable: true, get: function () { return float_js_1.FloatBuilder; } }));\nObject.defineProperty(exports, \"Float16Builder\", ({ enumerable: true, get: function () { return float_js_1.Float16Builder; } }));\nObject.defineProperty(exports, \"Float32Builder\", ({ enumerable: true, get: function () { return float_js_1.Float32Builder; } }));\nObject.defineProperty(exports, \"Float64Builder\", ({ enumerable: true, get: function () { return float_js_1.Float64Builder; } }));\nvar int_js_1 = __webpack_require__(/*! ./builder/int.js */ \"./node_modules/apache-arrow/builder/int.js\");\nObject.defineProperty(exports, \"IntBuilder\", ({ enumerable: true, get: function () { return int_js_1.IntBuilder; } }));\nObject.defineProperty(exports, \"Int8Builder\", ({ enumerable: true, get: function () { return int_js_1.Int8Builder; } }));\nObject.defineProperty(exports, \"Int16Builder\", ({ enumerable: true, get: function () { return int_js_1.Int16Builder; } }));\nObject.defineProperty(exports, \"Int32Builder\", ({ enumerable: true, get: function () { return int_js_1.Int32Builder; } }));\nObject.defineProperty(exports, \"Int64Builder\", ({ enumerable: true, get: function () { return int_js_1.Int64Builder; } }));\nObject.defineProperty(exports, \"Uint8Builder\", ({ enumerable: true, get: function () { return int_js_1.Uint8Builder; } }));\nObject.defineProperty(exports, \"Uint16Builder\", ({ enumerable: true, get: function () { return int_js_1.Uint16Builder; } }));\nObject.defineProperty(exports, \"Uint32Builder\", ({ enumerable: true, get: function () { return int_js_1.Uint32Builder; } }));\nObject.defineProperty(exports, \"Uint64Builder\", ({ enumerable: true, get: function () { return int_js_1.Uint64Builder; } }));\nvar time_js_1 = __webpack_require__(/*! ./builder/time.js */ \"./node_modules/apache-arrow/builder/time.js\");\nObject.defineProperty(exports, \"TimeBuilder\", ({ enumerable: true, get: function () { return time_js_1.TimeBuilder; } }));\nObject.defineProperty(exports, \"TimeSecondBuilder\", ({ enumerable: true, get: function () { return time_js_1.TimeSecondBuilder; } }));\nObject.defineProperty(exports, \"TimeMillisecondBuilder\", ({ enumerable: true, get: function () { return time_js_1.TimeMillisecondBuilder; } }));\nObject.defineProperty(exports, \"TimeMicrosecondBuilder\", ({ enumerable: true, get: function () { return time_js_1.TimeMicrosecondBuilder; } }));\nObject.defineProperty(exports, \"TimeNanosecondBuilder\", ({ enumerable: true, get: function () { return time_js_1.TimeNanosecondBuilder; } }));\nvar timestamp_js_1 = __webpack_require__(/*! ./builder/timestamp.js */ \"./node_modules/apache-arrow/builder/timestamp.js\");\nObject.defineProperty(exports, \"TimestampBuilder\", ({ enumerable: true, get: function () { return timestamp_js_1.TimestampBuilder; } }));\nObject.defineProperty(exports, \"TimestampSecondBuilder\", ({ enumerable: true, get: function () { return timestamp_js_1.TimestampSecondBuilder; } }));\nObject.defineProperty(exports, \"TimestampMillisecondBuilder\", ({ enumerable: true, get: function () { return timestamp_js_1.TimestampMillisecondBuilder; } }));\nObject.defineProperty(exports, \"TimestampMicrosecondBuilder\", ({ enumerable: true, get: function () { return timestamp_js_1.TimestampMicrosecondBuilder; } }));\nObject.defineProperty(exports, \"TimestampNanosecondBuilder\", ({ enumerable: true, get: function () { return timestamp_js_1.TimestampNanosecondBuilder; } }));\nvar interval_js_1 = __webpack_require__(/*! ./builder/interval.js */ \"./node_modules/apache-arrow/builder/interval.js\");\nObject.defineProperty(exports, \"IntervalBuilder\", ({ enumerable: true, get: function () { return interval_js_1.IntervalBuilder; } }));\nObject.defineProperty(exports, \"IntervalDayTimeBuilder\", ({ enumerable: true, get: function () { return interval_js_1.IntervalDayTimeBuilder; } }));\nObject.defineProperty(exports, \"IntervalYearMonthBuilder\", ({ enumerable: true, get: function () { return interval_js_1.IntervalYearMonthBuilder; } }));\nvar utf8_js_1 = __webpack_require__(/*! ./builder/utf8.js */ \"./node_modules/apache-arrow/builder/utf8.js\");\nObject.defineProperty(exports, \"Utf8Builder\", ({ enumerable: true, get: function () { return utf8_js_1.Utf8Builder; } }));\nvar binary_js_1 = __webpack_require__(/*! ./builder/binary.js */ \"./node_modules/apache-arrow/builder/binary.js\");\nObject.defineProperty(exports, \"BinaryBuilder\", ({ enumerable: true, get: function () { return binary_js_1.BinaryBuilder; } }));\nvar list_js_1 = __webpack_require__(/*! ./builder/list.js */ \"./node_modules/apache-arrow/builder/list.js\");\nObject.defineProperty(exports, \"ListBuilder\", ({ enumerable: true, get: function () { return list_js_1.ListBuilder; } }));\nvar fixedsizelist_js_1 = __webpack_require__(/*! ./builder/fixedsizelist.js */ \"./node_modules/apache-arrow/builder/fixedsizelist.js\");\nObject.defineProperty(exports, \"FixedSizeListBuilder\", ({ enumerable: true, get: function () { return fixedsizelist_js_1.FixedSizeListBuilder; } }));\nvar map_js_2 = __webpack_require__(/*! ./builder/map.js */ \"./node_modules/apache-arrow/builder/map.js\");\nObject.defineProperty(exports, \"MapBuilder\", ({ enumerable: true, get: function () { return map_js_2.MapBuilder; } }));\nvar struct_js_2 = __webpack_require__(/*! ./builder/struct.js */ \"./node_modules/apache-arrow/builder/struct.js\");\nObject.defineProperty(exports, \"StructBuilder\", ({ enumerable: true, get: function () { return struct_js_2.StructBuilder; } }));\nvar union_js_1 = __webpack_require__(/*! ./builder/union.js */ \"./node_modules/apache-arrow/builder/union.js\");\nObject.defineProperty(exports, \"UnionBuilder\", ({ enumerable: true, get: function () { return union_js_1.UnionBuilder; } }));\nObject.defineProperty(exports, \"SparseUnionBuilder\", ({ enumerable: true, get: function () { return union_js_1.SparseUnionBuilder; } }));\nObject.defineProperty(exports, \"DenseUnionBuilder\", ({ enumerable: true, get: function () { return union_js_1.DenseUnionBuilder; } }));\nvar stream_js_1 = __webpack_require__(/*! ./io/stream.js */ \"./node_modules/apache-arrow/io/stream.js\");\nObject.defineProperty(exports, \"ByteStream\", ({ enumerable: true, get: function () { return stream_js_1.ByteStream; } }));\nObject.defineProperty(exports, \"AsyncByteStream\", ({ enumerable: true, get: function () { return stream_js_1.AsyncByteStream; } }));\nObject.defineProperty(exports, \"AsyncByteQueue\", ({ enumerable: true, get: function () { return stream_js_1.AsyncByteQueue; } }));\nvar reader_js_1 = __webpack_require__(/*! ./ipc/reader.js */ \"./node_modules/apache-arrow/ipc/reader.js\");\nObject.defineProperty(exports, \"RecordBatchReader\", ({ enumerable: true, get: function () { return reader_js_1.RecordBatchReader; } }));\nObject.defineProperty(exports, \"RecordBatchFileReader\", ({ enumerable: true, get: function () { return reader_js_1.RecordBatchFileReader; } }));\nObject.defineProperty(exports, \"RecordBatchStreamReader\", ({ enumerable: true, get: function () { return reader_js_1.RecordBatchStreamReader; } }));\nObject.defineProperty(exports, \"AsyncRecordBatchFileReader\", ({ enumerable: true, get: function () { return reader_js_1.AsyncRecordBatchFileReader; } }));\nObject.defineProperty(exports, \"AsyncRecordBatchStreamReader\", ({ enumerable: true, get: function () { return reader_js_1.AsyncRecordBatchStreamReader; } }));\nvar writer_js_1 = __webpack_require__(/*! ./ipc/writer.js */ \"./node_modules/apache-arrow/ipc/writer.js\");\nObject.defineProperty(exports, \"RecordBatchWriter\", ({ enumerable: true, get: function () { return writer_js_1.RecordBatchWriter; } }));\nObject.defineProperty(exports, \"RecordBatchFileWriter\", ({ enumerable: true, get: function () { return writer_js_1.RecordBatchFileWriter; } }));\nObject.defineProperty(exports, \"RecordBatchStreamWriter\", ({ enumerable: true, get: function () { return writer_js_1.RecordBatchStreamWriter; } }));\nObject.defineProperty(exports, \"RecordBatchJSONWriter\", ({ enumerable: true, get: function () { return writer_js_1.RecordBatchJSONWriter; } }));\nvar serialization_js_1 = __webpack_require__(/*! ./ipc/serialization.js */ \"./node_modules/apache-arrow/ipc/serialization.js\");\nObject.defineProperty(exports, \"tableToIPC\", ({ enumerable: true, get: function () { return serialization_js_1.tableToIPC; } }));\nObject.defineProperty(exports, \"tableFromIPC\", ({ enumerable: true, get: function () { return serialization_js_1.tableFromIPC; } }));\nvar message_js_1 = __webpack_require__(/*! ./ipc/message.js */ \"./node_modules/apache-arrow/ipc/message.js\");\nObject.defineProperty(exports, \"MessageReader\", ({ enumerable: true, get: function () { return message_js_1.MessageReader; } }));\nObject.defineProperty(exports, \"AsyncMessageReader\", ({ enumerable: true, get: function () { return message_js_1.AsyncMessageReader; } }));\nObject.defineProperty(exports, \"JSONMessageReader\", ({ enumerable: true, get: function () { return message_js_1.JSONMessageReader; } }));\nvar message_js_2 = __webpack_require__(/*! ./ipc/metadata/message.js */ \"./node_modules/apache-arrow/ipc/metadata/message.js\");\nObject.defineProperty(exports, \"Message\", ({ enumerable: true, get: function () { return message_js_2.Message; } }));\nvar recordbatch_js_1 = __webpack_require__(/*! ./recordbatch.js */ \"./node_modules/apache-arrow/recordbatch.js\");\nObject.defineProperty(exports, \"RecordBatch\", ({ enumerable: true, get: function () { return recordbatch_js_1.RecordBatch; } }));\nconst util_bn_ = tslib_1.__importStar(__webpack_require__(/*! ./util/bn.js */ \"./node_modules/apache-arrow/util/bn.js\"));\nconst util_int_ = tslib_1.__importStar(__webpack_require__(/*! ./util/int.js */ \"./node_modules/apache-arrow/util/int.js\"));\nconst util_bit_ = tslib_1.__importStar(__webpack_require__(/*! ./util/bit.js */ \"./node_modules/apache-arrow/util/bit.js\"));\nconst util_math_ = tslib_1.__importStar(__webpack_require__(/*! ./util/math.js */ \"./node_modules/apache-arrow/util/math.js\"));\nconst util_buffer_ = tslib_1.__importStar(__webpack_require__(/*! ./util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\"));\nconst util_vector_ = tslib_1.__importStar(__webpack_require__(/*! ./util/vector.js */ \"./node_modules/apache-arrow/util/vector.js\"));\nconst typecomparator_js_1 = __webpack_require__(/*! ./visitor/typecomparator.js */ \"./node_modules/apache-arrow/visitor/typecomparator.js\");\n/** @ignore */\nexports.util = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, util_bn_), util_int_), util_bit_), util_math_), util_buffer_), util_vector_), { compareSchemas: typecomparator_js_1.compareSchemas,\n    compareFields: typecomparator_js_1.compareFields,\n    compareTypes: typecomparator_js_1.compareTypes });\n\n//# sourceMappingURL=Arrow.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/Arrow.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder.js":
/*!**********************************************!*\
  !*** ./node_modules/apache-arrow/builder.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VariableWidthBuilder = exports.FixedWidthBuilder = exports.Builder = void 0;\nconst vector_js_1 = __webpack_require__(/*! ./vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst data_js_1 = __webpack_require__(/*! ./data.js */ \"./node_modules/apache-arrow/data.js\");\nconst map_js_1 = __webpack_require__(/*! ./row/map.js */ \"./node_modules/apache-arrow/row/map.js\");\nconst type_js_1 = __webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/type.js\");\nconst valid_js_1 = __webpack_require__(/*! ./builder/valid.js */ \"./node_modules/apache-arrow/builder/valid.js\");\nconst buffer_js_1 = __webpack_require__(/*! ./builder/buffer.js */ \"./node_modules/apache-arrow/builder/buffer.js\");\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link makeBuilder `makeBuilder()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * @example\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = makeBuilder({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nclass Builder {\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }) {\n        /**\n         * The number of values written to the `Builder` that haven't been flushed yet.\n         * @readonly\n         */\n        this.length = 0;\n        /**\n         * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n         * @readonly\n         */\n        this.finished = false;\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = (0, type_js_1.strideForType)(type);\n        this._nulls = new buffer_js_1.BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = (0, valid_js_1.createIsValidFunction)(nulls);\n        }\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughDOM(options) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    toVector() { return new vector_js_1.Vector([this.flush()]); }\n    get ArrayType() { return this.type.ArrayType; }\n    get nullCount() { return this._nulls.numInvalid; }\n    get numChildren() { return this.children.length; }\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    get byteLength() {\n        let size = 0;\n        const { _offsets, _values, _nulls, _typeIds, children } = this;\n        _offsets && (size += _offsets.byteLength);\n        _values && (size += _values.byteLength);\n        _nulls && (size += _nulls.byteLength);\n        _typeIds && (size += _typeIds.byteLength);\n        return children.reduce((size, child) => size + child.byteLength, size);\n    }\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    get reservedLength() {\n        return this._nulls.reservedLength;\n    }\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    get reservedByteLength() {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n    get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n    get values() { return this._values ? this._values.buffer : null; }\n    get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n    get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    append(value) { return this.set(this.length, value); }\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    isValid(value) { return this._isValid(value); }\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    set(index, value) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    setValue(index, value) { this._setValue(this, index, value); }\n    setValid(index, valid) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n    // @ts-ignore\n    addChild(child, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    getChildAt(index) {\n        return this.children[index] || null;\n    }\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and children representing the values written.\n     */\n    flush() {\n        let data;\n        let typeIds;\n        let nullBitmap;\n        let valueOffsets;\n        const { type, length, nullCount, _typeIds, _offsets, _values, _nulls } = this;\n        if (typeIds = _typeIds === null || _typeIds === void 0 ? void 0 : _typeIds.flush(length)) { // Unions\n            // DenseUnions\n            valueOffsets = _offsets === null || _offsets === void 0 ? void 0 : _offsets.flush(length);\n        }\n        else if (valueOffsets = _offsets === null || _offsets === void 0 ? void 0 : _offsets.flush(length)) { // Variable-width primitives (Binary, Utf8), and Lists\n            // Binary, Utf8\n            data = _values === null || _values === void 0 ? void 0 : _values.flush(_offsets.last());\n        }\n        else { // Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval)\n            data = _values === null || _values === void 0 ? void 0 : _values.flush(length);\n        }\n        if (nullCount > 0) {\n            nullBitmap = _nulls === null || _nulls === void 0 ? void 0 : _nulls.flush(length);\n        }\n        const children = this.children.map((child) => child.flush());\n        this.clear();\n        return (0, data_js_1.makeData)({\n            type, length, nullCount,\n            children, 'child': children[0],\n            data, typeIds, nullBitmap, valueOffsets,\n        });\n    }\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    finish() {\n        this.finished = true;\n        for (const child of this.children)\n            child.finish();\n        return this;\n    }\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    clear() {\n        var _a, _b, _c, _d;\n        this.length = 0;\n        (_a = this._nulls) === null || _a === void 0 ? void 0 : _a.clear();\n        (_b = this._values) === null || _b === void 0 ? void 0 : _b.clear();\n        (_c = this._offsets) === null || _c === void 0 ? void 0 : _c.clear();\n        (_d = this._typeIds) === null || _d === void 0 ? void 0 : _d.clear();\n        for (const child of this.children)\n            child.clear();\n        return this;\n    }\n}\nexports.Builder = Builder;\nBuilder.prototype.length = 1;\nBuilder.prototype.stride = 1;\nBuilder.prototype.children = null;\nBuilder.prototype.finished = false;\nBuilder.prototype.nullValues = null;\nBuilder.prototype._isValid = () => true;\n/** @ignore */\nclass FixedWidthBuilder extends Builder {\n    constructor(opts) {\n        super(opts);\n        this._values = new buffer_js_1.DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    setValue(index, value) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\nexports.FixedWidthBuilder = FixedWidthBuilder;\n/** @ignore */\nclass VariableWidthBuilder extends Builder {\n    constructor(opts) {\n        super(opts);\n        this._pendingLength = 0;\n        this._offsets = new buffer_js_1.OffsetsBufferBuilder();\n    }\n    setValue(index, value) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += (value instanceof map_js_1.MapRow) ? value[map_js_1.kKeys].length : value.length;\n        pending.set(index, value);\n    }\n    setValid(index, isValid) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    flush() {\n        this._flush();\n        return super.flush();\n    }\n    finish() {\n        this._flush();\n        return super.finish();\n    }\n    _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n}\nexports.VariableWidthBuilder = VariableWidthBuilder;\n\n//# sourceMappingURL=builder.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/binary.js":
/*!*****************************************************!*\
  !*** ./node_modules/apache-arrow/builder/binary.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BinaryBuilder = void 0;\nconst buffer_js_1 = __webpack_require__(/*! ../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\nconst buffer_js_2 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/apache-arrow/builder/buffer.js\");\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\n/** @ignore */\nclass BinaryBuilder extends builder_js_1.VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new buffer_js_2.BufferBuilder(new Uint8Array(0));\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, (0, buffer_js_1.toUint8Array)(value));\n    }\n    _flushPending(pending, pendingLength) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let offset = 0;\n        for (const [index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                const length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\nexports.BinaryBuilder = BinaryBuilder;\n\n//# sourceMappingURL=binary.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/binary.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/bool.js":
/*!***************************************************!*\
  !*** ./node_modules/apache-arrow/builder/bool.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BoolBuilder = void 0;\nconst buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/apache-arrow/builder/buffer.js\");\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\n/** @ignore */\nclass BoolBuilder extends builder_js_1.Builder {\n    constructor(options) {\n        super(options);\n        this._values = new buffer_js_1.BitmapBufferBuilder();\n    }\n    setValue(index, value) {\n        this._values.set(index, +value);\n    }\n}\nexports.BoolBuilder = BoolBuilder;\n\n//# sourceMappingURL=bool.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/bool.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/buffer.js":
/*!*****************************************************!*\
  !*** ./node_modules/apache-arrow/builder/buffer.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OffsetsBufferBuilder = exports.BitmapBufferBuilder = exports.DataBufferBuilder = exports.BufferBuilder = void 0;\nconst buffer_js_1 = __webpack_require__(/*! ../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len, BPE) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = (arr, len = 0) => (arr.length >= len ? arr.subarray(0, len) : (0, buffer_js_1.memcpy)(new arr.constructor(len), arr, 0));\n/** @ignore */\nclass BufferBuilder {\n    constructor(buffer, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor;\n        this._resize(this.length = Math.trunc(buffer.length / stride));\n    }\n    get byteLength() { return Math.trunc(this.length * this.stride * this.BYTES_PER_ELEMENT); }\n    get reservedLength() { return this.buffer.length / this.stride; }\n    get reservedByteLength() { return this.buffer.byteLength; }\n    // @ts-ignore\n    set(index, value) { return this; }\n    append(value) { return this.set(this.length, value); }\n    reserve(extra) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT));\n            }\n        }\n        return this;\n    }\n    flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    _resize(newLength) {\n        return this.buffer = (0, buffer_js_1.memcpy)(new this.ArrayType(newLength), this.buffer);\n    }\n}\nexports.BufferBuilder = BufferBuilder;\nBufferBuilder.prototype.offset = 0;\n/** @ignore */\nclass DataBufferBuilder extends BufferBuilder {\n    last() { return this.get(this.length - 1); }\n    get(index) { return this.buffer[index]; }\n    set(index, value) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\nexports.DataBufferBuilder = DataBufferBuilder;\n/** @ignore */\nclass BitmapBufferBuilder extends DataBufferBuilder {\n    constructor(data = new Uint8Array(0)) {\n        super(data, 1 / 8);\n        this.numValid = 0;\n    }\n    get numInvalid() { return this.length - this.numValid; }\n    get(idx) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    set(idx, val) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |= (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\nexports.BitmapBufferBuilder = BitmapBufferBuilder;\n/** @ignore */\nclass OffsetsBufferBuilder extends DataBufferBuilder {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    append(value) {\n        return this.set(this.length - 1, value);\n    }\n    set(index, value) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\nexports.OffsetsBufferBuilder = OffsetsBufferBuilder;\n// /** @ignore */\n// export class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n//     public buffer64!: R;\n//     protected _ArrayType64!: BigIntArrayConstructor<R>;\n//     public get ArrayType64() {\n//         return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n//     }\n//     public set(index: number, value: DataValue<T>) {\n//         this.reserve(index - this.length + 1);\n//         switch (typeof value) {\n//             case 'bigint': this.buffer64[index] = value; break;\n//             case 'number': this.buffer[index * this.stride] = value; break;\n//             default: this.buffer.set(value as TypedArray, index * this.stride);\n//         }\n//         return this;\n//     }\n//     protected _resize(newLength: number) {\n//         const data = super._resize(newLength);\n//         const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n//         if (BigIntAvailable) {\n//             this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n//         }\n//         return data;\n//     }\n// }\n\n//# sourceMappingURL=buffer.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/buffer.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/date.js":
/*!***************************************************!*\
  !*** ./node_modules/apache-arrow/builder/date.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DateMillisecondBuilder = exports.DateDayBuilder = exports.DateBuilder = void 0;\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\nconst set_js_1 = __webpack_require__(/*! ../visitor/set.js */ \"./node_modules/apache-arrow/visitor/set.js\");\n/** @ignore */\nclass DateBuilder extends builder_js_1.FixedWidthBuilder {\n}\nexports.DateBuilder = DateBuilder;\nDateBuilder.prototype._setValue = set_js_1.setDate;\n/** @ignore */\nclass DateDayBuilder extends DateBuilder {\n}\nexports.DateDayBuilder = DateDayBuilder;\nDateDayBuilder.prototype._setValue = set_js_1.setDateDay;\n/** @ignore */\nclass DateMillisecondBuilder extends DateBuilder {\n}\nexports.DateMillisecondBuilder = DateMillisecondBuilder;\nDateMillisecondBuilder.prototype._setValue = set_js_1.setDateMillisecond;\n\n//# sourceMappingURL=date.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/date.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/decimal.js":
/*!******************************************************!*\
  !*** ./node_modules/apache-arrow/builder/decimal.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DecimalBuilder = void 0;\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\nconst set_js_1 = __webpack_require__(/*! ../visitor/set.js */ \"./node_modules/apache-arrow/visitor/set.js\");\n/** @ignore */\nclass DecimalBuilder extends builder_js_1.FixedWidthBuilder {\n}\nexports.DecimalBuilder = DecimalBuilder;\nDecimalBuilder.prototype._setValue = set_js_1.setDecimal;\n\n//# sourceMappingURL=decimal.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/decimal.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/dictionary.js":
/*!*********************************************************!*\
  !*** ./node_modules/apache-arrow/builder/dictionary.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DictionaryBuilder = void 0;\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\nconst factories_js_1 = __webpack_require__(/*! ../factories.js */ \"./node_modules/apache-arrow/factories.js\");\n/** @ignore */\nclass DictionaryBuilder extends builder_js_1.Builder {\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }) {\n        super({ type: new type_js_1.Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) });\n        this._nulls = null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = (0, factories_js_1.makeBuilder)({ 'type': this.type.indices, 'nullValues': nulls });\n        this.dictionary = (0, factories_js_1.makeBuilder)({ 'type': this.type.dictionary, 'nullValues': null });\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n    get values() { return this.indices.values; }\n    get nullCount() { return this.indices.nullCount; }\n    get nullBitmap() { return this.indices.nullBitmap; }\n    get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    isValid(value) { return this.indices.isValid(value); }\n    setValid(index, valid) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    setValue(index, value) {\n        const keysToIndices = this._keysToIndices;\n        const key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary;\n        this.clear();\n        return data;\n    }\n    finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    valueToKey(val) {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\nexports.DictionaryBuilder = DictionaryBuilder;\n\n//# sourceMappingURL=dictionary.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/dictionary.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/fixedsizebinary.js":
/*!**************************************************************!*\
  !*** ./node_modules/apache-arrow/builder/fixedsizebinary.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FixedSizeBinaryBuilder = void 0;\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\nconst set_js_1 = __webpack_require__(/*! ../visitor/set.js */ \"./node_modules/apache-arrow/visitor/set.js\");\n/** @ignore */\nclass FixedSizeBinaryBuilder extends builder_js_1.FixedWidthBuilder {\n}\nexports.FixedSizeBinaryBuilder = FixedSizeBinaryBuilder;\nFixedSizeBinaryBuilder.prototype._setValue = set_js_1.setFixedSizeBinary;\n\n//# sourceMappingURL=fixedsizebinary.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/fixedsizebinary.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/fixedsizelist.js":
/*!************************************************************!*\
  !*** ./node_modules/apache-arrow/builder/fixedsizelist.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FixedSizeListBuilder = void 0;\nconst schema_js_1 = __webpack_require__(/*! ../schema.js */ \"./node_modules/apache-arrow/schema.js\");\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\n/** @ignore */\nclass FixedSizeListBuilder extends builder_js_1.Builder {\n    setValue(index, value) {\n        const [child] = this.children;\n        const start = index * this.stride;\n        for (let i = -1, n = value.length; ++i < n;) {\n            child.set(start + i, value[i]);\n        }\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new type_js_1.FixedSizeList(this.type.listSize, new schema_js_1.Field(name, child.type, true));\n        return childIndex;\n    }\n}\nexports.FixedSizeListBuilder = FixedSizeListBuilder;\n\n//# sourceMappingURL=fixedsizelist.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/fixedsizelist.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/float.js":
/*!****************************************************!*\
  !*** ./node_modules/apache-arrow/builder/float.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Float64Builder = exports.Float32Builder = exports.Float16Builder = exports.FloatBuilder = void 0;\nconst math_js_1 = __webpack_require__(/*! ../util/math.js */ \"./node_modules/apache-arrow/util/math.js\");\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\n/** @ignore */\nclass FloatBuilder extends builder_js_1.FixedWidthBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\nexports.FloatBuilder = FloatBuilder;\n/** @ignore */\nclass Float16Builder extends FloatBuilder {\n    setValue(index, value) {\n        // convert JS float64 to a uint16\n        super.setValue(index, (0, math_js_1.float64ToUint16)(value));\n    }\n}\nexports.Float16Builder = Float16Builder;\n/** @ignore */\nclass Float32Builder extends FloatBuilder {\n}\nexports.Float32Builder = Float32Builder;\n/** @ignore */\nclass Float64Builder extends FloatBuilder {\n}\nexports.Float64Builder = Float64Builder;\n\n//# sourceMappingURL=float.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/float.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/int.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/builder/int.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Uint64Builder = exports.Uint32Builder = exports.Uint16Builder = exports.Uint8Builder = exports.Int64Builder = exports.Int32Builder = exports.Int16Builder = exports.Int8Builder = exports.IntBuilder = void 0;\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\n/** @ignore */\nclass IntBuilder extends builder_js_1.FixedWidthBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\nexports.IntBuilder = IntBuilder;\n/** @ignore */\nclass Int8Builder extends IntBuilder {\n}\nexports.Int8Builder = Int8Builder;\n/** @ignore */\nclass Int16Builder extends IntBuilder {\n}\nexports.Int16Builder = Int16Builder;\n/** @ignore */\nclass Int32Builder extends IntBuilder {\n}\nexports.Int32Builder = Int32Builder;\n/** @ignore */\nclass Int64Builder extends IntBuilder {\n}\nexports.Int64Builder = Int64Builder;\n/** @ignore */\nclass Uint8Builder extends IntBuilder {\n}\nexports.Uint8Builder = Uint8Builder;\n/** @ignore */\nclass Uint16Builder extends IntBuilder {\n}\nexports.Uint16Builder = Uint16Builder;\n/** @ignore */\nclass Uint32Builder extends IntBuilder {\n}\nexports.Uint32Builder = Uint32Builder;\n/** @ignore */\nclass Uint64Builder extends IntBuilder {\n}\nexports.Uint64Builder = Uint64Builder;\n\n//# sourceMappingURL=int.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/int.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/interval.js":
/*!*******************************************************!*\
  !*** ./node_modules/apache-arrow/builder/interval.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IntervalYearMonthBuilder = exports.IntervalDayTimeBuilder = exports.IntervalBuilder = void 0;\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\nconst set_js_1 = __webpack_require__(/*! ../visitor/set.js */ \"./node_modules/apache-arrow/visitor/set.js\");\n/** @ignore */\nclass IntervalBuilder extends builder_js_1.FixedWidthBuilder {\n}\nexports.IntervalBuilder = IntervalBuilder;\nIntervalBuilder.prototype._setValue = set_js_1.setIntervalValue;\n/** @ignore */\nclass IntervalDayTimeBuilder extends IntervalBuilder {\n}\nexports.IntervalDayTimeBuilder = IntervalDayTimeBuilder;\nIntervalDayTimeBuilder.prototype._setValue = set_js_1.setIntervalDayTime;\n/** @ignore */\nclass IntervalYearMonthBuilder extends IntervalBuilder {\n}\nexports.IntervalYearMonthBuilder = IntervalYearMonthBuilder;\nIntervalYearMonthBuilder.prototype._setValue = set_js_1.setIntervalYearMonth;\n\n//# sourceMappingURL=interval.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/interval.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/list.js":
/*!***************************************************!*\
  !*** ./node_modules/apache-arrow/builder/list.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ListBuilder = void 0;\nconst schema_js_1 = __webpack_require__(/*! ../schema.js */ \"./node_modules/apache-arrow/schema.js\");\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\nconst buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/apache-arrow/builder/buffer.js\");\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\n/** @ignore */\nclass ListBuilder extends builder_js_1.VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._offsets = new buffer_js_1.OffsetsBufferBuilder();\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new type_js_1.List(new schema_js_1.Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    _flushPending(pending) {\n        const offsets = this._offsets;\n        const [child] = this.children;\n        for (const [index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                const n = value.length;\n                const start = offsets.set(index, n).buffer[index];\n                for (let i = -1; ++i < n;) {\n                    child.set(start + i, value[i]);\n                }\n            }\n        }\n    }\n}\nexports.ListBuilder = ListBuilder;\n\n//# sourceMappingURL=list.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/list.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/map.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/builder/map.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MapBuilder = void 0;\nconst schema_js_1 = __webpack_require__(/*! ../schema.js */ \"./node_modules/apache-arrow/schema.js\");\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\n/** @ignore */\nclass MapBuilder extends builder_js_1.VariableWidthBuilder {\n    set(index, value) {\n        return super.set(index, value);\n    }\n    setValue(index, value) {\n        const row = (value instanceof Map ? value : new Map(Object.entries(value)));\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += row.size;\n        pending.set(index, row);\n    }\n    addChild(child, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new type_js_1.Map_(new schema_js_1.Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n    _flushPending(pending) {\n        const offsets = this._offsets;\n        const [child] = this.children;\n        for (const [index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                let { [index]: idx, [index + 1]: end } = offsets.set(index, value.size).buffer;\n                for (const val of value.entries()) {\n                    child.set(idx, val);\n                    if (++idx >= end)\n                        break;\n                }\n            }\n        }\n    }\n}\nexports.MapBuilder = MapBuilder;\n\n//# sourceMappingURL=map.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/map.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/null.js":
/*!***************************************************!*\
  !*** ./node_modules/apache-arrow/builder/null.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NullBuilder = void 0;\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\n/** @ignore */\nclass NullBuilder extends builder_js_1.Builder {\n    // @ts-ignore\n    setValue(index, value) { }\n    setValid(index, valid) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\nexports.NullBuilder = NullBuilder;\n\n//# sourceMappingURL=null.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/null.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/struct.js":
/*!*****************************************************!*\
  !*** ./node_modules/apache-arrow/builder/struct.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StructBuilder = void 0;\n/* eslint-disable unicorn/no-array-for-each */\nconst schema_js_1 = __webpack_require__(/*! ../schema.js */ \"./node_modules/apache-arrow/schema.js\");\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\n/** @ignore */\nclass StructBuilder extends builder_js_1.Builder {\n    setValue(index, value) {\n        const { children, type } = this;\n        switch (Array.isArray(value) || value.constructor) {\n            case true: return type.children.forEach((_, i) => children[i].set(index, value[i]));\n            case Map: return type.children.forEach((f, i) => children[i].set(index, value.get(f.name)));\n            default: return type.children.forEach((f, i) => children[i].set(index, value[f.name]));\n        }\n    }\n    /** @inheritdoc */\n    setValid(index, valid) {\n        if (!super.setValid(index, valid)) {\n            this.children.forEach((child) => child.setValid(index, valid));\n        }\n        return valid;\n    }\n    addChild(child, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new type_js_1.Struct([...this.type.children, new schema_js_1.Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\nexports.StructBuilder = StructBuilder;\n\n//# sourceMappingURL=struct.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/struct.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/time.js":
/*!***************************************************!*\
  !*** ./node_modules/apache-arrow/builder/time.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TimeNanosecondBuilder = exports.TimeMicrosecondBuilder = exports.TimeMillisecondBuilder = exports.TimeSecondBuilder = exports.TimeBuilder = void 0;\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\nconst set_js_1 = __webpack_require__(/*! ../visitor/set.js */ \"./node_modules/apache-arrow/visitor/set.js\");\n/** @ignore */\nclass TimeBuilder extends builder_js_1.FixedWidthBuilder {\n}\nexports.TimeBuilder = TimeBuilder;\nTimeBuilder.prototype._setValue = set_js_1.setTime;\n/** @ignore */\nclass TimeSecondBuilder extends TimeBuilder {\n}\nexports.TimeSecondBuilder = TimeSecondBuilder;\nTimeSecondBuilder.prototype._setValue = set_js_1.setTimeSecond;\n/** @ignore */\nclass TimeMillisecondBuilder extends TimeBuilder {\n}\nexports.TimeMillisecondBuilder = TimeMillisecondBuilder;\nTimeMillisecondBuilder.prototype._setValue = set_js_1.setTimeMillisecond;\n/** @ignore */\nclass TimeMicrosecondBuilder extends TimeBuilder {\n}\nexports.TimeMicrosecondBuilder = TimeMicrosecondBuilder;\nTimeMicrosecondBuilder.prototype._setValue = set_js_1.setTimeMicrosecond;\n/** @ignore */\nclass TimeNanosecondBuilder extends TimeBuilder {\n}\nexports.TimeNanosecondBuilder = TimeNanosecondBuilder;\nTimeNanosecondBuilder.prototype._setValue = set_js_1.setTimeNanosecond;\n\n//# sourceMappingURL=time.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/time.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/timestamp.js":
/*!********************************************************!*\
  !*** ./node_modules/apache-arrow/builder/timestamp.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TimestampNanosecondBuilder = exports.TimestampMicrosecondBuilder = exports.TimestampMillisecondBuilder = exports.TimestampSecondBuilder = exports.TimestampBuilder = void 0;\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\nconst set_js_1 = __webpack_require__(/*! ../visitor/set.js */ \"./node_modules/apache-arrow/visitor/set.js\");\n/** @ignore */\nclass TimestampBuilder extends builder_js_1.FixedWidthBuilder {\n}\nexports.TimestampBuilder = TimestampBuilder;\nTimestampBuilder.prototype._setValue = set_js_1.setTimestamp;\n/** @ignore */\nclass TimestampSecondBuilder extends TimestampBuilder {\n}\nexports.TimestampSecondBuilder = TimestampSecondBuilder;\nTimestampSecondBuilder.prototype._setValue = set_js_1.setTimestampSecond;\n/** @ignore */\nclass TimestampMillisecondBuilder extends TimestampBuilder {\n}\nexports.TimestampMillisecondBuilder = TimestampMillisecondBuilder;\nTimestampMillisecondBuilder.prototype._setValue = set_js_1.setTimestampMillisecond;\n/** @ignore */\nclass TimestampMicrosecondBuilder extends TimestampBuilder {\n}\nexports.TimestampMicrosecondBuilder = TimestampMicrosecondBuilder;\nTimestampMicrosecondBuilder.prototype._setValue = set_js_1.setTimestampMicrosecond;\n/** @ignore */\nclass TimestampNanosecondBuilder extends TimestampBuilder {\n}\nexports.TimestampNanosecondBuilder = TimestampNanosecondBuilder;\nTimestampNanosecondBuilder.prototype._setValue = set_js_1.setTimestampNanosecond;\n\n//# sourceMappingURL=timestamp.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/timestamp.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/union.js":
/*!****************************************************!*\
  !*** ./node_modules/apache-arrow/builder/union.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DenseUnionBuilder = exports.SparseUnionBuilder = exports.UnionBuilder = void 0;\nconst schema_js_1 = __webpack_require__(/*! ../schema.js */ \"./node_modules/apache-arrow/schema.js\");\nconst buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/apache-arrow/builder/buffer.js\");\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\n/** @ignore */\nclass UnionBuilder extends builder_js_1.Builder {\n    constructor(options) {\n        super(options);\n        this._typeIds = new buffer_js_1.DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n    get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n    append(value, childTypeId) {\n        return this.set(this.length, value, childTypeId);\n    }\n    set(index, value, childTypeId) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n    setValue(index, value, childTypeId) {\n        this._typeIds.set(index, childTypeId);\n        const childIndex = this.type.typeIdToChildIndex[childTypeId];\n        const child = this.children[childIndex];\n        child === null || child === void 0 ? void 0 : child.set(index, value);\n    }\n    addChild(child, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new schema_js_1.Field(name, child.type)];\n        this.type = new type_js_1.Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n    /** @ignore */\n    // @ts-ignore\n    _valueToChildTypeId(builder, value, offset) {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\nexports.UnionBuilder = UnionBuilder;\n/** @ignore */\nclass SparseUnionBuilder extends UnionBuilder {\n}\nexports.SparseUnionBuilder = SparseUnionBuilder;\n/** @ignore */\nclass DenseUnionBuilder extends UnionBuilder {\n    constructor(options) {\n        super(options);\n        this._offsets = new buffer_js_1.DataBufferBuilder(new Int32Array(0));\n    }\n    /** @ignore */\n    setValue(index, value, childTypeId) {\n        const id = this._typeIds.set(index, childTypeId).buffer[index];\n        const child = this.getChildAt(this.type.typeIdToChildIndex[id]);\n        const denseIndex = this._offsets.set(index, child.length).buffer[index];\n        child === null || child === void 0 ? void 0 : child.set(denseIndex, value);\n    }\n}\nexports.DenseUnionBuilder = DenseUnionBuilder;\n\n//# sourceMappingURL=union.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/union.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/utf8.js":
/*!***************************************************!*\
  !*** ./node_modules/apache-arrow/builder/utf8.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Utf8Builder = void 0;\nconst utf8_js_1 = __webpack_require__(/*! ../util/utf8.js */ \"./node_modules/apache-arrow/util/utf8.js\");\nconst binary_js_1 = __webpack_require__(/*! ./binary.js */ \"./node_modules/apache-arrow/builder/binary.js\");\nconst buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/apache-arrow/builder/buffer.js\");\nconst builder_js_1 = __webpack_require__(/*! ../builder.js */ \"./node_modules/apache-arrow/builder.js\");\n/** @ignore */\nclass Utf8Builder extends builder_js_1.VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new buffer_js_1.BufferBuilder(new Uint8Array(0));\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, (0, utf8_js_1.encodeUtf8)(value));\n    }\n    // @ts-ignore\n    _flushPending(pending, pendingLength) { }\n}\nexports.Utf8Builder = Utf8Builder;\nUtf8Builder.prototype._flushPending = binary_js_1.BinaryBuilder.prototype._flushPending;\n\n//# sourceMappingURL=utf8.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/utf8.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/builder/valid.js":
/*!****************************************************!*\
  !*** ./node_modules/apache-arrow/builder/valid.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createIsValidFunction = void 0;\nconst pretty_js_1 = __webpack_require__(/*! ../util/pretty.js */ \"./node_modules/apache-arrow/util/pretty.js\");\nconst compat_js_1 = __webpack_require__(/*! ../util/compat.js */ \"./node_modules/apache-arrow/util/compat.js\");\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nfunction createIsValidFunction(nullValues) {\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value) { return true; };\n    }\n    let fnBody = '';\n    const noNaNs = nullValues.filter((x) => x === x);\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n    return new Function(`x`, `${fnBody}\\nreturn true;`);\n}\nexports.createIsValidFunction = createIsValidFunction;\n/** @ignore */\nfunction valueToCase(x) {\n    if (typeof x !== 'bigint') {\n        return (0, pretty_js_1.valueToString)(x);\n    }\n    else if (compat_js_1.BigIntAvailable) {\n        return `${(0, pretty_js_1.valueToString)(x)}n`;\n    }\n    return `\"${(0, pretty_js_1.valueToString)(x)}\"`;\n}\n\n//# sourceMappingURL=valid.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/builder/valid.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/data.js":
/*!*******************************************!*\
  !*** ./node_modules/apache-arrow/data.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeData = exports.Data = exports.kUnknownNullCount = void 0;\nconst vector_js_1 = __webpack_require__(/*! ./vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst enum_js_1 = __webpack_require__(/*! ./enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst type_js_1 = __webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/type.js\");\nconst bit_js_1 = __webpack_require__(/*! ./util/bit.js */ \"./node_modules/apache-arrow/util/bit.js\");\n/** @ignore */ exports.kUnknownNullCount = -1;\n/**\n * Data structure underlying {@link Vector}s. Use the convenience method {@link makeData}.\n */\nclass Data {\n    constructor(type, offset, length, nullCount, buffers, children = [], dictionary) {\n        this.type = type;\n        this.children = children;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        let buffer;\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        }\n        else {\n            this.stride = (0, type_js_1.strideForType)(type);\n            if (buffers) {\n                (buffer = buffers[0]) && (this.valueOffsets = buffer);\n                (buffer = buffers[1]) && (this.values = buffer);\n                (buffer = buffers[2]) && (this.nullBitmap = buffer);\n                (buffer = buffers[3]) && (this.typeIds = buffer);\n            }\n        }\n        this.nullable = this._nullCount !== 0 && this.nullBitmap && this.nullBitmap.byteLength > 0;\n    }\n    get typeId() { return this.type.typeId; }\n    get ArrayType() { return this.type.ArrayType; }\n    get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];\n    }\n    get byteLength() {\n        let byteLength = 0;\n        const { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values && (byteLength += values.byteLength);\n        nullBitmap && (byteLength += nullBitmap.byteLength);\n        typeIds && (byteLength += typeIds.byteLength);\n        return this.children.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n    get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap;\n        if (nullCount <= exports.kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - (0, bit_js_1.popcnt_bit_range)(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n    getValid(index) {\n        if (this.nullable && this.nullCount > 0) {\n            const pos = this.offset + index;\n            const val = this.nullBitmap[pos >> 3];\n            return (val & (1 << (pos % 8))) !== 0;\n        }\n        return true;\n    }\n    setValid(index, value) {\n        // Don't interact w/ nullBitmap if not nullable\n        if (!this.nullable) {\n            return value;\n        }\n        // If no null bitmap, initialize one on the fly\n        if (!this.nullBitmap || this.nullBitmap.byteLength <= (index >> 3)) {\n            const { nullBitmap } = this._changeLengthAndBackfillNullBitmap(this.length);\n            Object.assign(this, { nullBitmap, _nullCount: 0 });\n        }\n        const { nullBitmap, offset } = this;\n        const pos = (offset + index) >> 3;\n        const bit = (offset + index) % 8;\n        const val = (nullBitmap[pos] >> bit) & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `_nullCount`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `_nullCount`.\n        value ? val === 0 && ((nullBitmap[pos] |= (1 << bit)), (this._nullCount = this.nullCount + 1))\n            : val === 1 && ((nullBitmap[pos] &= ~(1 << bit)), (this._nullCount = this.nullCount - 1));\n        return value;\n    }\n    clone(type = this.type, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers = this, children = this.children) {\n        return new Data(type, offset, length, nullCount, buffers, children, this.dictionary);\n    }\n    slice(offset, length) {\n        const { stride, typeId, children } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone(this.type, this.offset + offset, length, nullCount, buffers, \n        // Don't slice children if we have value offsets (the variable-width types)\n        (children.length === 0 || this.valueOffsets) ? children : this._sliceChildren(children, childStride * offset, childStride * length));\n    }\n    _changeLengthAndBackfillNullBitmap(newLength) {\n        if (this.typeId === enum_js_1.Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set((0, bit_js_1.truncateBitmap)(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[enum_js_1.BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n    _sliceBuffers(offset, length, stride, typeId) {\n        let arr;\n        const { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[enum_js_1.BufferType.TYPE]) && (buffers[enum_js_1.BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[enum_js_1.BufferType.OFFSET]) && (buffers[enum_js_1.BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n            // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n            (arr = buffers[enum_js_1.BufferType.DATA]) && (buffers[enum_js_1.BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n    _sliceChildren(children, offset, length) {\n        return children.map((child) => child.slice(offset, length));\n    }\n}\nexports.Data = Data;\nData.prototype.children = Object.freeze([]);\nconst visitor_js_1 = __webpack_require__(/*! ./visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nconst buffer_js_1 = __webpack_require__(/*! ./util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\nclass MakeDataVisitor extends visitor_js_1.Visitor {\n    visit(props) {\n        return this.getVisitFn(props['type']).call(this, props);\n    }\n    visitNull(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['length']: length = 0, } = props;\n        return new Data(type, offset, length, 0);\n    }\n    visitBool(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const data = (0, buffer_js_1.toArrayBufferView)(type.ArrayType, props['data']);\n        const { ['length']: length = data.length >> 3, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitInt(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const data = (0, buffer_js_1.toArrayBufferView)(type.ArrayType, props['data']);\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitFloat(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const data = (0, buffer_js_1.toArrayBufferView)(type.ArrayType, props['data']);\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitUtf8(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = (0, buffer_js_1.toUint8Array)(props['data']);\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const valueOffsets = (0, buffer_js_1.toInt32Array)(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    visitBinary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = (0, buffer_js_1.toUint8Array)(props['data']);\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const valueOffsets = (0, buffer_js_1.toInt32Array)(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    visitFixedSizeBinary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const data = (0, buffer_js_1.toArrayBufferView)(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / (0, type_js_1.strideForType)(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitDate(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const data = (0, buffer_js_1.toArrayBufferView)(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / (0, type_js_1.strideForType)(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitTimestamp(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const data = (0, buffer_js_1.toArrayBufferView)(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / (0, type_js_1.strideForType)(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitTime(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const data = (0, buffer_js_1.toArrayBufferView)(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / (0, type_js_1.strideForType)(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitDecimal(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const data = (0, buffer_js_1.toArrayBufferView)(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / (0, type_js_1.strideForType)(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitList(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const valueOffsets = (0, buffer_js_1.toInt32Array)(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap], [child]);\n    }\n    visitStruct(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['children']: children = [] } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const { length = children.reduce((len, { length }) => Math.max(len, length), 0), nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap], children);\n    }\n    visitUnion(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['children']: children = [] } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const typeIds = (0, buffer_js_1.toArrayBufferView)(type.ArrayType, props['typeIds']);\n        const { ['length']: length = typeIds.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        if (type_js_1.DataType.isSparseUnion(type)) {\n            return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap, typeIds], children);\n        }\n        const valueOffsets = (0, buffer_js_1.toInt32Array)(props['valueOffsets']);\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap, typeIds], children);\n    }\n    visitDictionary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const data = (0, buffer_js_1.toArrayBufferView)(type.indices.ArrayType, props['data']);\n        const { ['dictionary']: dictionary = new vector_js_1.Vector([new MakeDataVisitor().visit({ type: type.dictionary })]) } = props;\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap], [], dictionary);\n    }\n    visitInterval(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const data = (0, buffer_js_1.toArrayBufferView)(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / (0, type_js_1.strideForType)(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitFixedSizeList(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child = new MakeDataVisitor().visit({ type: type.valueType }) } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const { ['length']: length = child.length / (0, type_js_1.strideForType)(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap], [child]);\n    }\n    visitMap(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child = new MakeDataVisitor().visit({ type: type.childType }) } = props;\n        const nullBitmap = (0, buffer_js_1.toUint8Array)(props['nullBitmap']);\n        const valueOffsets = (0, buffer_js_1.toInt32Array)(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap], [child]);\n    }\n}\nfunction makeData(props) {\n    return new MakeDataVisitor().visit(props);\n}\nexports.makeData = makeData;\n\n//# sourceMappingURL=data.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/data.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/enum.js":
/*!*******************************************!*\
  !*** ./node_modules/apache-arrow/enum.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BufferType = exports.Type = exports.MessageHeader = exports.IntervalUnit = exports.TimeUnit = exports.DateUnit = exports.Precision = exports.UnionMode = exports.MetadataVersion = void 0;\n////\n//\n// A few enums copied from `fb/Schema.ts` and `fb/Message.ts` because Webpack\n// v4 doesn't seem to be able to tree-shake the rest of those exports.\n//\n// We will have to keep these enums in sync when we re-generate the flatbuffers\n// code from the shchemas. See js/DEVELOP.md for info on how to run flatbuffers\n// code generation.\n//\n////\n/**\n * Logical types, vector layouts, and schemas\n *\n * @enum {number}\n */\nvar MetadataVersion;\n(function (MetadataVersion) {\n    /**\n     * 0.1.0 (October 2016).\n     */\n    MetadataVersion[MetadataVersion[\"V1\"] = 0] = \"V1\";\n    /**\n     * 0.2.0 (February 2017). Non-backwards compatible with V1.\n     */\n    MetadataVersion[MetadataVersion[\"V2\"] = 1] = \"V2\";\n    /**\n     * 0.3.0 -> 0.7.1 (May - December 2017). Non-backwards compatible with V2.\n     */\n    MetadataVersion[MetadataVersion[\"V3\"] = 2] = \"V3\";\n    /**\n     * >= 0.8.0 (December 2017). Non-backwards compatible with V3.\n     */\n    MetadataVersion[MetadataVersion[\"V4\"] = 3] = \"V4\";\n    /**\n     * >= 1.0.0 (July 2020. Backwards compatible with V4 (V5 readers can read V4\n     * metadata and IPC messages). Implementations are recommended to provide a\n     * V4 compatibility mode with V5 format changes disabled.\n     *\n     * Incompatible changes between V4 and V5:\n     * - Union buffer layout has changed. In V5, Unions don't have a validity\n     *   bitmap buffer.\n     */\n    MetadataVersion[MetadataVersion[\"V5\"] = 4] = \"V5\";\n})(MetadataVersion = exports.MetadataVersion || (exports.MetadataVersion = {}));\n/**\n * @enum {number}\n */\nvar UnionMode;\n(function (UnionMode) {\n    UnionMode[UnionMode[\"Sparse\"] = 0] = \"Sparse\";\n    UnionMode[UnionMode[\"Dense\"] = 1] = \"Dense\";\n})(UnionMode = exports.UnionMode || (exports.UnionMode = {}));\n/**\n * @enum {number}\n */\nvar Precision;\n(function (Precision) {\n    Precision[Precision[\"HALF\"] = 0] = \"HALF\";\n    Precision[Precision[\"SINGLE\"] = 1] = \"SINGLE\";\n    Precision[Precision[\"DOUBLE\"] = 2] = \"DOUBLE\";\n})(Precision = exports.Precision || (exports.Precision = {}));\n/**\n * @enum {number}\n */\nvar DateUnit;\n(function (DateUnit) {\n    DateUnit[DateUnit[\"DAY\"] = 0] = \"DAY\";\n    DateUnit[DateUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n})(DateUnit = exports.DateUnit || (exports.DateUnit = {}));\n/**\n * @enum {number}\n */\nvar TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"SECOND\"] = 0] = \"SECOND\";\n    TimeUnit[TimeUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n    TimeUnit[TimeUnit[\"MICROSECOND\"] = 2] = \"MICROSECOND\";\n    TimeUnit[TimeUnit[\"NANOSECOND\"] = 3] = \"NANOSECOND\";\n})(TimeUnit = exports.TimeUnit || (exports.TimeUnit = {}));\n/**\n * @enum {number}\n */\nvar IntervalUnit;\n(function (IntervalUnit) {\n    IntervalUnit[IntervalUnit[\"YEAR_MONTH\"] = 0] = \"YEAR_MONTH\";\n    IntervalUnit[IntervalUnit[\"DAY_TIME\"] = 1] = \"DAY_TIME\";\n    IntervalUnit[IntervalUnit[\"MONTH_DAY_NANO\"] = 2] = \"MONTH_DAY_NANO\";\n})(IntervalUnit = exports.IntervalUnit || (exports.IntervalUnit = {}));\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nvar MessageHeader;\n(function (MessageHeader) {\n    MessageHeader[MessageHeader[\"NONE\"] = 0] = \"NONE\";\n    MessageHeader[MessageHeader[\"Schema\"] = 1] = \"Schema\";\n    MessageHeader[MessageHeader[\"DictionaryBatch\"] = 2] = \"DictionaryBatch\";\n    MessageHeader[MessageHeader[\"RecordBatch\"] = 3] = \"RecordBatch\";\n    MessageHeader[MessageHeader[\"Tensor\"] = 4] = \"Tensor\";\n    MessageHeader[MessageHeader[\"SparseTensor\"] = 5] = \"SparseTensor\";\n})(MessageHeader = exports.MessageHeader || (exports.MessageHeader = {}));\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nvar Type;\n(function (Type) {\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    Type[Type[\"Float\"] = 3] = \"Float\";\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    Type[Type[\"List\"] = 12] = \"List\";\n    Type[Type[\"Struct\"] = 13] = \"Struct\";\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    Type[Type[\"Dictionary\"] = -1] = \"Dictionary\";\n    Type[Type[\"Int8\"] = -2] = \"Int8\";\n    Type[Type[\"Int16\"] = -3] = \"Int16\";\n    Type[Type[\"Int32\"] = -4] = \"Int32\";\n    Type[Type[\"Int64\"] = -5] = \"Int64\";\n    Type[Type[\"Uint8\"] = -6] = \"Uint8\";\n    Type[Type[\"Uint16\"] = -7] = \"Uint16\";\n    Type[Type[\"Uint32\"] = -8] = \"Uint32\";\n    Type[Type[\"Uint64\"] = -9] = \"Uint64\";\n    Type[Type[\"Float16\"] = -10] = \"Float16\";\n    Type[Type[\"Float32\"] = -11] = \"Float32\";\n    Type[Type[\"Float64\"] = -12] = \"Float64\";\n    Type[Type[\"DateDay\"] = -13] = \"DateDay\";\n    Type[Type[\"DateMillisecond\"] = -14] = \"DateMillisecond\";\n    Type[Type[\"TimestampSecond\"] = -15] = \"TimestampSecond\";\n    Type[Type[\"TimestampMillisecond\"] = -16] = \"TimestampMillisecond\";\n    Type[Type[\"TimestampMicrosecond\"] = -17] = \"TimestampMicrosecond\";\n    Type[Type[\"TimestampNanosecond\"] = -18] = \"TimestampNanosecond\";\n    Type[Type[\"TimeSecond\"] = -19] = \"TimeSecond\";\n    Type[Type[\"TimeMillisecond\"] = -20] = \"TimeMillisecond\";\n    Type[Type[\"TimeMicrosecond\"] = -21] = \"TimeMicrosecond\";\n    Type[Type[\"TimeNanosecond\"] = -22] = \"TimeNanosecond\";\n    Type[Type[\"DenseUnion\"] = -23] = \"DenseUnion\";\n    Type[Type[\"SparseUnion\"] = -24] = \"SparseUnion\";\n    Type[Type[\"IntervalDayTime\"] = -25] = \"IntervalDayTime\";\n    Type[Type[\"IntervalYearMonth\"] = -26] = \"IntervalYearMonth\";\n})(Type = exports.Type || (exports.Type = {}));\nvar BufferType;\n(function (BufferType) {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    BufferType[BufferType[\"OFFSET\"] = 0] = \"OFFSET\";\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    BufferType[BufferType[\"DATA\"] = 1] = \"DATA\";\n    /**\n     * Bit vector indicating if each value is null\n     */\n    BufferType[BufferType[\"VALIDITY\"] = 2] = \"VALIDITY\";\n    /**\n     * Type vector used in Union type\n     */\n    BufferType[BufferType[\"TYPE\"] = 3] = \"TYPE\";\n})(BufferType = exports.BufferType || (exports.BufferType = {}));\n\n//# sourceMappingURL=enum.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/enum.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/factories.js":
/*!************************************************!*\
  !*** ./node_modules/apache-arrow/factories.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.builderThroughAsyncIterable = exports.builderThroughIterable = exports.tableFromJSON = exports.vectorFromArray = exports.makeBuilder = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst schema_js_1 = __webpack_require__(/*! ./schema.js */ \"./node_modules/apache-arrow/schema.js\");\nconst dtypes = tslib_1.__importStar(__webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/type.js\"));\nconst data_js_1 = __webpack_require__(/*! ./data.js */ \"./node_modules/apache-arrow/data.js\");\nconst vector_js_1 = __webpack_require__(/*! ./vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst builderctor_js_1 = __webpack_require__(/*! ./visitor/builderctor.js */ \"./node_modules/apache-arrow/visitor/builderctor.js\");\nconst table_js_1 = __webpack_require__(/*! ./table.js */ \"./node_modules/apache-arrow/table.js\");\nconst recordbatch_js_1 = __webpack_require__(/*! ./recordbatch.js */ \"./node_modules/apache-arrow/recordbatch.js\");\nconst typecomparator_js_1 = __webpack_require__(/*! ./visitor/typecomparator.js */ \"./node_modules/apache-arrow/visitor/typecomparator.js\");\nfunction makeBuilder(options) {\n    const type = options.type;\n    const builder = new (builderctor_js_1.instance.getVisitFn(type)())(options);\n    if (type.children && type.children.length > 0) {\n        const children = options['children'] || [];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_, i) => children[i] || defaultOptions)\n            : (({ name }) => children[name] || defaultOptions);\n        for (const [index, field] of type.children.entries()) {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(makeBuilder(Object.assign(Object.assign({}, opts), { type })));\n        }\n    }\n    return builder;\n}\nexports.makeBuilder = makeBuilder;\nfunction vectorFromArray(init, type) {\n    if (init instanceof data_js_1.Data || init instanceof vector_js_1.Vector || init.type instanceof dtypes.DataType || ArrayBuffer.isView(init)) {\n        return (0, vector_js_1.makeVector)(init);\n    }\n    const options = { type: type !== null && type !== void 0 ? type : inferType(init), nullValues: [null] };\n    const chunks = [...builderThroughIterable(options)(init)];\n    const vector = chunks.length === 1 ? chunks[0] : chunks.reduce((a, b) => a.concat(b));\n    if (dtypes.DataType.isDictionary(vector.type)) {\n        return vector.memoize();\n    }\n    return vector;\n}\nexports.vectorFromArray = vectorFromArray;\n/**\n * Creates a {@link Table} from an array of objects.\n *\n * @param array A table of objects.\n */\nfunction tableFromJSON(array) {\n    const vector = vectorFromArray(array);\n    const batch = new recordbatch_js_1.RecordBatch(new schema_js_1.Schema(vector.type.children), vector.data[0]);\n    return new table_js_1.Table(batch);\n}\nexports.tableFromJSON = tableFromJSON;\nfunction inferType(value) {\n    if (value.length === 0) {\n        return new dtypes.Null;\n    }\n    let nullsCount = 0;\n    let arraysCount = 0;\n    let objectsCount = 0;\n    let numbersCount = 0;\n    let stringsCount = 0;\n    let bigintsCount = 0;\n    let booleansCount = 0;\n    let datesCount = 0;\n    for (const val of value) {\n        if (val == null) {\n            ++nullsCount;\n            continue;\n        }\n        switch (typeof val) {\n            case 'bigint':\n                ++bigintsCount;\n                continue;\n            case 'boolean':\n                ++booleansCount;\n                continue;\n            case 'number':\n                ++numbersCount;\n                continue;\n            case 'string':\n                ++stringsCount;\n                continue;\n            case 'object':\n                if (Array.isArray(val)) {\n                    ++arraysCount;\n                }\n                else if (Object.prototype.toString.call(val) === '[object Date]') {\n                    ++datesCount;\n                }\n                else {\n                    ++objectsCount;\n                }\n                continue;\n        }\n        throw new TypeError('Unable to infer Vector type from input values, explicit type declaration expected');\n    }\n    if (numbersCount + nullsCount === value.length) {\n        return new dtypes.Float64;\n    }\n    else if (stringsCount + nullsCount === value.length) {\n        return new dtypes.Dictionary(new dtypes.Utf8, new dtypes.Int32);\n    }\n    else if (bigintsCount + nullsCount === value.length) {\n        return new dtypes.Int64;\n    }\n    else if (booleansCount + nullsCount === value.length) {\n        return new dtypes.Bool;\n    }\n    else if (datesCount + nullsCount === value.length) {\n        return new dtypes.DateMillisecond;\n    }\n    else if (arraysCount + nullsCount === value.length) {\n        const array = value;\n        const childType = inferType(array[array.findIndex((ary) => ary != null)]);\n        if (array.every((ary) => ary == null || (0, typecomparator_js_1.compareTypes)(childType, inferType(ary)))) {\n            return new dtypes.List(new schema_js_1.Field('', childType, true));\n        }\n    }\n    else if (objectsCount + nullsCount === value.length) {\n        const fields = new Map();\n        for (const row of value) {\n            for (const key of Object.keys(row)) {\n                if (!fields.has(key) && row[key] != null) {\n                    // use the type inferred for the first instance of a found key\n                    fields.set(key, new schema_js_1.Field(key, inferType([row[key]]), true));\n                }\n            }\n        }\n        return new dtypes.Struct([...fields.values()]);\n    }\n    throw new TypeError('Unable to infer Vector type from input values, explicit type declaration expected');\n}\n/**\n * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n * sequence of Arrow Vector<T> following the chunking semantics defined in\n * the supplied `options` argument.\n *\n * This function returns a function that accepts an `Iterable` of values to\n * transform. When called, this function returns an Iterator of `Vector<T>`.\n *\n * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n *\n * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n *   reaches or exceeds the supplied `highWaterMark`.\n *\n * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n * @returns A function which accepts a JavaScript `Iterable` of values to\n *          write, and returns an `Iterator` that yields Vectors according\n *          to the chunking semantics defined in the `options` argument.\n * @nocollapse\n */\nfunction builderThroughIterable(options) {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? Number.POSITIVE_INFINITY : Math.pow(2, 14) } = options;\n    const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function* (source) {\n        let numChunks = 0;\n        const builder = makeBuilder(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\nexports.builderThroughIterable = builderThroughIterable;\n/**\n * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n * sequence of Arrow Vector<T> following the chunking semantics defined in\n * the supplied `options` argument.\n *\n * This function returns a function that accepts an `AsyncIterable` of values to\n * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n *\n * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n *\n * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n *   reaches or exceeds the supplied `highWaterMark`.\n *\n * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n * @returns A function which accepts a JavaScript `AsyncIterable` of values\n *          to write, and returns an `AsyncIterator` that yields Vectors\n *          according to the chunking semantics defined in the `options`\n *          argument.\n * @nocollapse\n */\nfunction builderThroughAsyncIterable(options) {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? Number.POSITIVE_INFINITY : Math.pow(2, 14) } = options;\n    const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function (source) {\n        return tslib_1.__asyncGenerator(this, arguments, function* () {\n            var e_1, _a;\n            let numChunks = 0;\n            const builder = makeBuilder(options);\n            try {\n                for (var source_1 = tslib_1.__asyncValues(source), source_1_1; source_1_1 = yield tslib_1.__await(source_1.next()), !source_1_1.done;) {\n                    const value = source_1_1.value;\n                    if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                        ++numChunks && (yield yield tslib_1.__await(builder.toVector()));\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (source_1_1 && !source_1_1.done && (_a = source_1.return)) yield tslib_1.__await(_a.call(source_1));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (builder.finish().length > 0 || numChunks === 0) {\n                yield yield tslib_1.__await(builder.toVector());\n            }\n        });\n    };\n}\nexports.builderThroughAsyncIterable = builderThroughAsyncIterable;\n\n//# sourceMappingURL=factories.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/factories.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/binary.js":
/*!************************************************!*\
  !*** ./node_modules/apache-arrow/fb/binary.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Binary = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\n/**\n * Opaque binary data\n */\nclass Binary {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsBinary(bb, obj) {\n        return (obj || new Binary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsBinary(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Binary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startBinary(builder) {\n        builder.startObject(0);\n    }\n    static endBinary(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createBinary(builder) {\n        Binary.startBinary(builder);\n        return Binary.endBinary(builder);\n    }\n}\nexports.Binary = Binary;\n\n//# sourceMappingURL=binary.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/binary.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/block.js":
/*!***********************************************!*\
  !*** ./node_modules/apache-arrow/fb/block.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Block = void 0;\nclass Block {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    /**\n     * Index to the start of the RecordBlock (note this is past the Message header)\n     */\n    offset() {\n        return this.bb.readInt64(this.bb_pos);\n    }\n    /**\n     * Length of the metadata\n     */\n    metaDataLength() {\n        return this.bb.readInt32(this.bb_pos + 8);\n    }\n    /**\n     * Length of the data (this is aligned so there can be a gap between this and\n     * the metadata).\n     */\n    bodyLength() {\n        return this.bb.readInt64(this.bb_pos + 16);\n    }\n    static sizeOf() {\n        return 24;\n    }\n    static createBlock(builder, offset, metaDataLength, bodyLength) {\n        builder.prep(8, 24);\n        builder.writeInt64(bodyLength);\n        builder.pad(4);\n        builder.writeInt32(metaDataLength);\n        builder.writeInt64(offset);\n        return builder.offset();\n    }\n}\nexports.Block = Block;\n\n//# sourceMappingURL=block.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/block.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/body-compression-method.js":
/*!*****************************************************************!*\
  !*** ./node_modules/apache-arrow/fb/body-compression-method.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BodyCompressionMethod = void 0;\n/**\n * Provided for forward compatibility in case we need to support different\n * strategies for compressing the IPC message body (like whole-body\n * compression rather than buffer-level) in the future\n */\nvar BodyCompressionMethod;\n(function (BodyCompressionMethod) {\n    /**\n     * Each constituent buffer is first compressed with the indicated\n     * compressor, and then written with the uncompressed length in the first 8\n     * bytes as a 64-bit little-endian signed integer followed by the compressed\n     * buffer bytes (and then padding as required by the protocol). The\n     * uncompressed length may be set to -1 to indicate that the data that\n     * follows is not compressed, which can be useful for cases where\n     * compression does not yield appreciable savings.\n     */\n    BodyCompressionMethod[BodyCompressionMethod[\"BUFFER\"] = 0] = \"BUFFER\";\n})(BodyCompressionMethod = exports.BodyCompressionMethod || (exports.BodyCompressionMethod = {}));\n\n//# sourceMappingURL=body-compression-method.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/body-compression-method.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/body-compression.js":
/*!**********************************************************!*\
  !*** ./node_modules/apache-arrow/fb/body-compression.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BodyCompression = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst body_compression_method_js_1 = __webpack_require__(/*! ./body-compression-method.js */ \"./node_modules/apache-arrow/fb/body-compression-method.js\");\nconst compression_type_js_1 = __webpack_require__(/*! ./compression-type.js */ \"./node_modules/apache-arrow/fb/compression-type.js\");\n/**\n * Optional compression for the memory buffers constituting IPC message\n * bodies. Intended for use with RecordBatch but could be used for other\n * message types\n */\nclass BodyCompression {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsBodyCompression(bb, obj) {\n        return (obj || new BodyCompression()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsBodyCompression(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new BodyCompression()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Compressor library.\n     * For LZ4_FRAME, each compressed buffer must consist of a single frame.\n     */\n    codec() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt8(this.bb_pos + offset) : compression_type_js_1.CompressionType.LZ4_FRAME;\n    }\n    /**\n     * Indicates the way the record batch body was compressed\n     */\n    method() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt8(this.bb_pos + offset) : body_compression_method_js_1.BodyCompressionMethod.BUFFER;\n    }\n    static startBodyCompression(builder) {\n        builder.startObject(2);\n    }\n    static addCodec(builder, codec) {\n        builder.addFieldInt8(0, codec, compression_type_js_1.CompressionType.LZ4_FRAME);\n    }\n    static addMethod(builder, method) {\n        builder.addFieldInt8(1, method, body_compression_method_js_1.BodyCompressionMethod.BUFFER);\n    }\n    static endBodyCompression(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createBodyCompression(builder, codec, method) {\n        BodyCompression.startBodyCompression(builder);\n        BodyCompression.addCodec(builder, codec);\n        BodyCompression.addMethod(builder, method);\n        return BodyCompression.endBodyCompression(builder);\n    }\n}\nexports.BodyCompression = BodyCompression;\n\n//# sourceMappingURL=body-compression.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/body-compression.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/bool.js":
/*!**********************************************!*\
  !*** ./node_modules/apache-arrow/fb/bool.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Bool = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nclass Bool {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsBool(bb, obj) {\n        return (obj || new Bool()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsBool(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Bool()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startBool(builder) {\n        builder.startObject(0);\n    }\n    static endBool(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createBool(builder) {\n        Bool.startBool(builder);\n        return Bool.endBool(builder);\n    }\n}\nexports.Bool = Bool;\n\n//# sourceMappingURL=bool.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/bool.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/buffer.js":
/*!************************************************!*\
  !*** ./node_modules/apache-arrow/fb/buffer.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Buffer = void 0;\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n */\nclass Buffer {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    /**\n     * The relative offset into the shared memory page where the bytes for this\n     * buffer starts\n     */\n    offset() {\n        return this.bb.readInt64(this.bb_pos);\n    }\n    /**\n     * The absolute length (in bytes) of the memory buffer. The memory is found\n     * from offset (inclusive) to offset + length (non-inclusive). When building\n     * messages using the encapsulated IPC message, padding bytes may be written\n     * after a buffer, but such padding bytes do not need to be accounted for in\n     * the size here.\n     */\n    length() {\n        return this.bb.readInt64(this.bb_pos + 8);\n    }\n    static sizeOf() {\n        return 16;\n    }\n    static createBuffer(builder, offset, length) {\n        builder.prep(8, 16);\n        builder.writeInt64(length);\n        builder.writeInt64(offset);\n        return builder.offset();\n    }\n}\nexports.Buffer = Buffer;\n\n//# sourceMappingURL=buffer.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/buffer.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/compression-type.js":
/*!**********************************************************!*\
  !*** ./node_modules/apache-arrow/fb/compression-type.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CompressionType = void 0;\nvar CompressionType;\n(function (CompressionType) {\n    CompressionType[CompressionType[\"LZ4_FRAME\"] = 0] = \"LZ4_FRAME\";\n    CompressionType[CompressionType[\"ZSTD\"] = 1] = \"ZSTD\";\n})(CompressionType = exports.CompressionType || (exports.CompressionType = {}));\n\n//# sourceMappingURL=compression-type.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/compression-type.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/date-unit.js":
/*!***************************************************!*\
  !*** ./node_modules/apache-arrow/fb/date-unit.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DateUnit = void 0;\nvar DateUnit;\n(function (DateUnit) {\n    DateUnit[DateUnit[\"DAY\"] = 0] = \"DAY\";\n    DateUnit[DateUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n})(DateUnit = exports.DateUnit || (exports.DateUnit = {}));\n\n//# sourceMappingURL=date-unit.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/date-unit.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/date.js":
/*!**********************************************!*\
  !*** ./node_modules/apache-arrow/fb/date.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Date = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst date_unit_js_1 = __webpack_require__(/*! ./date-unit.js */ \"./node_modules/apache-arrow/fb/date-unit.js\");\n/**\n * Date is either a 32-bit or 64-bit signed integer type representing an\n * elapsed time since UNIX epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n */\nclass Date {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsDate(bb, obj) {\n        return (obj || new Date()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsDate(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Date()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    unit() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : date_unit_js_1.DateUnit.MILLISECOND;\n    }\n    static startDate(builder) {\n        builder.startObject(1);\n    }\n    static addUnit(builder, unit) {\n        builder.addFieldInt16(0, unit, date_unit_js_1.DateUnit.MILLISECOND);\n    }\n    static endDate(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createDate(builder, unit) {\n        Date.startDate(builder);\n        Date.addUnit(builder, unit);\n        return Date.endDate(builder);\n    }\n}\nexports.Date = Date;\n\n//# sourceMappingURL=date.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/date.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/decimal.js":
/*!*************************************************!*\
  !*** ./node_modules/apache-arrow/fb/decimal.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Decimal = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\n/**\n * Exact decimal value represented as an integer value in two's\n * complement. Currently only 128-bit (16-byte) and 256-bit (32-byte) integers\n * are used. The representation uses the endianness indicated\n * in the Schema.\n */\nclass Decimal {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsDecimal(bb, obj) {\n        return (obj || new Decimal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsDecimal(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Decimal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Total number of decimal digits\n     */\n    precision() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    /**\n     * Number of digits after the decimal point \".\"\n     */\n    scale() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    /**\n     * Number of bits per value. The only accepted widths are 128 and 256.\n     * We use bitWidth for consistency with Int::bitWidth.\n     */\n    bitWidth() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 128;\n    }\n    static startDecimal(builder) {\n        builder.startObject(3);\n    }\n    static addPrecision(builder, precision) {\n        builder.addFieldInt32(0, precision, 0);\n    }\n    static addScale(builder, scale) {\n        builder.addFieldInt32(1, scale, 0);\n    }\n    static addBitWidth(builder, bitWidth) {\n        builder.addFieldInt32(2, bitWidth, 128);\n    }\n    static endDecimal(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createDecimal(builder, precision, scale, bitWidth) {\n        Decimal.startDecimal(builder);\n        Decimal.addPrecision(builder, precision);\n        Decimal.addScale(builder, scale);\n        Decimal.addBitWidth(builder, bitWidth);\n        return Decimal.endDecimal(builder);\n    }\n}\nexports.Decimal = Decimal;\n\n//# sourceMappingURL=decimal.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/decimal.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/dictionary-batch.js":
/*!**********************************************************!*\
  !*** ./node_modules/apache-arrow/fb/dictionary-batch.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DictionaryBatch = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst record_batch_js_1 = __webpack_require__(/*! ./record-batch.js */ \"./node_modules/apache-arrow/fb/record-batch.js\");\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n */\nclass DictionaryBatch {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsDictionaryBatch(bb, obj) {\n        return (obj || new DictionaryBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsDictionaryBatch(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new DictionaryBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    id() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n    }\n    data(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new record_batch_js_1.RecordBatch()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * If isDelta is true the values in the dictionary are to be appended to a\n     * dictionary with the indicated id. If isDelta is false this dictionary\n     * should replace the existing dictionary.\n     */\n    isDelta() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    static startDictionaryBatch(builder) {\n        builder.startObject(3);\n    }\n    static addId(builder, id) {\n        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n    }\n    static addData(builder, dataOffset) {\n        builder.addFieldOffset(1, dataOffset, 0);\n    }\n    static addIsDelta(builder, isDelta) {\n        builder.addFieldInt8(2, +isDelta, +false);\n    }\n    static endDictionaryBatch(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n}\nexports.DictionaryBatch = DictionaryBatch;\n\n//# sourceMappingURL=dictionary-batch.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/dictionary-batch.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/dictionary-encoding.js":
/*!*************************************************************!*\
  !*** ./node_modules/apache-arrow/fb/dictionary-encoding.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DictionaryEncoding = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst dictionary_kind_js_1 = __webpack_require__(/*! ./dictionary-kind.js */ \"./node_modules/apache-arrow/fb/dictionary-kind.js\");\nconst int_js_1 = __webpack_require__(/*! ./int.js */ \"./node_modules/apache-arrow/fb/int.js\");\nclass DictionaryEncoding {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsDictionaryEncoding(bb, obj) {\n        return (obj || new DictionaryEncoding()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsDictionaryEncoding(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new DictionaryEncoding()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * The known dictionary id in the application where this data is used. In\n     * the file or streaming formats, the dictionary ids are found in the\n     * DictionaryBatch messages\n     */\n    id() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n    }\n    /**\n     * The dictionary indices are constrained to be non-negative integers. If\n     * this field is null, the indices must be signed int32. To maximize\n     * cross-language compatibility and performance, implementations are\n     * recommended to prefer signed integer types over unsigned integer types\n     * and to avoid uint64 indices unless they are required by an application.\n     */\n    indexType(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new int_js_1.Int()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * By default, dictionaries are not ordered, or the order does not have\n     * semantic meaning. In some statistical, applications, dictionary-encoding\n     * is used to represent ordered categorical data, and we provide a way to\n     * preserve that metadata here\n     */\n    isOrdered() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    dictionaryKind() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : dictionary_kind_js_1.DictionaryKind.DenseArray;\n    }\n    static startDictionaryEncoding(builder) {\n        builder.startObject(4);\n    }\n    static addId(builder, id) {\n        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n    }\n    static addIndexType(builder, indexTypeOffset) {\n        builder.addFieldOffset(1, indexTypeOffset, 0);\n    }\n    static addIsOrdered(builder, isOrdered) {\n        builder.addFieldInt8(2, +isOrdered, +false);\n    }\n    static addDictionaryKind(builder, dictionaryKind) {\n        builder.addFieldInt16(3, dictionaryKind, dictionary_kind_js_1.DictionaryKind.DenseArray);\n    }\n    static endDictionaryEncoding(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n}\nexports.DictionaryEncoding = DictionaryEncoding;\n\n//# sourceMappingURL=dictionary-encoding.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/dictionary-encoding.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/dictionary-kind.js":
/*!*********************************************************!*\
  !*** ./node_modules/apache-arrow/fb/dictionary-kind.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DictionaryKind = void 0;\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n * Maintained for forwards compatibility, in the future\n * Dictionaries might be explicit maps between integers and values\n * allowing for non-contiguous index values\n */\nvar DictionaryKind;\n(function (DictionaryKind) {\n    DictionaryKind[DictionaryKind[\"DenseArray\"] = 0] = \"DenseArray\";\n})(DictionaryKind = exports.DictionaryKind || (exports.DictionaryKind = {}));\n\n//# sourceMappingURL=dictionary-kind.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/dictionary-kind.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/duration.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/fb/duration.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Duration = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst time_unit_js_1 = __webpack_require__(/*! ./time-unit.js */ \"./node_modules/apache-arrow/fb/time-unit.js\");\nclass Duration {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsDuration(bb, obj) {\n        return (obj || new Duration()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsDuration(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Duration()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    unit() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : time_unit_js_1.TimeUnit.MILLISECOND;\n    }\n    static startDuration(builder) {\n        builder.startObject(1);\n    }\n    static addUnit(builder, unit) {\n        builder.addFieldInt16(0, unit, time_unit_js_1.TimeUnit.MILLISECOND);\n    }\n    static endDuration(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createDuration(builder, unit) {\n        Duration.startDuration(builder);\n        Duration.addUnit(builder, unit);\n        return Duration.endDuration(builder);\n    }\n}\nexports.Duration = Duration;\n\n//# sourceMappingURL=duration.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/duration.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/endianness.js":
/*!****************************************************!*\
  !*** ./node_modules/apache-arrow/fb/endianness.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Endianness = void 0;\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n */\nvar Endianness;\n(function (Endianness) {\n    Endianness[Endianness[\"Little\"] = 0] = \"Little\";\n    Endianness[Endianness[\"Big\"] = 1] = \"Big\";\n})(Endianness = exports.Endianness || (exports.Endianness = {}));\n\n//# sourceMappingURL=endianness.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/endianness.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/field-node.js":
/*!****************************************************!*\
  !*** ./node_modules/apache-arrow/fb/field-node.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FieldNode = void 0;\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values `[[1, 2, 3], null, [4], [5, 6], null]`\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n */\nclass FieldNode {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    /**\n     * The number of value slots in the Arrow array at this level of a nested\n     * tree\n     */\n    length() {\n        return this.bb.readInt64(this.bb_pos);\n    }\n    /**\n     * The number of observed nulls. Fields with null_count == 0 may choose not\n     * to write their physical validity bitmap out as a materialized buffer,\n     * instead setting the length of the bitmap buffer to 0.\n     */\n    nullCount() {\n        return this.bb.readInt64(this.bb_pos + 8);\n    }\n    static sizeOf() {\n        return 16;\n    }\n    static createFieldNode(builder, length, null_count) {\n        builder.prep(8, 16);\n        builder.writeInt64(null_count);\n        builder.writeInt64(length);\n        return builder.offset();\n    }\n}\nexports.FieldNode = FieldNode;\n\n//# sourceMappingURL=field-node.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/field-node.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/field.js":
/*!***********************************************!*\
  !*** ./node_modules/apache-arrow/fb/field.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Field = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst dictionary_encoding_js_1 = __webpack_require__(/*! ./dictionary-encoding.js */ \"./node_modules/apache-arrow/fb/dictionary-encoding.js\");\nconst key_value_js_1 = __webpack_require__(/*! ./key-value.js */ \"./node_modules/apache-arrow/fb/key-value.js\");\nconst type_js_1 = __webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/fb/type.js\");\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n */\nclass Field {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsField(bb, obj) {\n        return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsField(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    name(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    /**\n     * Whether or not this field can contain nulls. Should be true in general.\n     */\n    nullable() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    typeType() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.readUint8(this.bb_pos + offset) : type_js_1.Type.NONE;\n    }\n    /**\n     * This is the type of the decoded value if the field is dictionary encoded.\n     */\n    // @ts-ignore\n    type(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n    }\n    /**\n     * Present only if the field is dictionary encoded.\n     */\n    dictionary(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? (obj || new dictionary_encoding_js_1.DictionaryEncoding()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * children apply only to nested data types like Struct, List and Union. For\n     * primitive types children will have length 0.\n     */\n    children(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? (obj || new Field()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    childrenLength() {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * User-defined metadata\n     */\n    customMetadata(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? (obj || new key_value_js_1.KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    customMetadataLength() {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static startField(builder) {\n        builder.startObject(7);\n    }\n    static addName(builder, nameOffset) {\n        builder.addFieldOffset(0, nameOffset, 0);\n    }\n    static addNullable(builder, nullable) {\n        builder.addFieldInt8(1, +nullable, +false);\n    }\n    static addTypeType(builder, typeType) {\n        builder.addFieldInt8(2, typeType, type_js_1.Type.NONE);\n    }\n    static addType(builder, typeOffset) {\n        builder.addFieldOffset(3, typeOffset, 0);\n    }\n    static addDictionary(builder, dictionaryOffset) {\n        builder.addFieldOffset(4, dictionaryOffset, 0);\n    }\n    static addChildren(builder, childrenOffset) {\n        builder.addFieldOffset(5, childrenOffset, 0);\n    }\n    static createChildrenVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startChildrenVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addCustomMetadata(builder, customMetadataOffset) {\n        builder.addFieldOffset(6, customMetadataOffset, 0);\n    }\n    static createCustomMetadataVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startCustomMetadataVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endField(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n}\nexports.Field = Field;\n\n//# sourceMappingURL=field.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/field.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/fixed-size-binary.js":
/*!***********************************************************!*\
  !*** ./node_modules/apache-arrow/fb/fixed-size-binary.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FixedSizeBinary = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nclass FixedSizeBinary {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsFixedSizeBinary(bb, obj) {\n        return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsFixedSizeBinary(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Number of bytes per value\n     */\n    byteWidth() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    static startFixedSizeBinary(builder) {\n        builder.startObject(1);\n    }\n    static addByteWidth(builder, byteWidth) {\n        builder.addFieldInt32(0, byteWidth, 0);\n    }\n    static endFixedSizeBinary(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createFixedSizeBinary(builder, byteWidth) {\n        FixedSizeBinary.startFixedSizeBinary(builder);\n        FixedSizeBinary.addByteWidth(builder, byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(builder);\n    }\n}\nexports.FixedSizeBinary = FixedSizeBinary;\n\n//# sourceMappingURL=fixed-size-binary.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/fixed-size-binary.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/fixed-size-list.js":
/*!*********************************************************!*\
  !*** ./node_modules/apache-arrow/fb/fixed-size-list.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FixedSizeList = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nclass FixedSizeList {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsFixedSizeList(bb, obj) {\n        return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsFixedSizeList(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Number of list items per value\n     */\n    listSize() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    static startFixedSizeList(builder) {\n        builder.startObject(1);\n    }\n    static addListSize(builder, listSize) {\n        builder.addFieldInt32(0, listSize, 0);\n    }\n    static endFixedSizeList(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createFixedSizeList(builder, listSize) {\n        FixedSizeList.startFixedSizeList(builder);\n        FixedSizeList.addListSize(builder, listSize);\n        return FixedSizeList.endFixedSizeList(builder);\n    }\n}\nexports.FixedSizeList = FixedSizeList;\n\n//# sourceMappingURL=fixed-size-list.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/fixed-size-list.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/floating-point.js":
/*!********************************************************!*\
  !*** ./node_modules/apache-arrow/fb/floating-point.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FloatingPoint = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst precision_js_1 = __webpack_require__(/*! ./precision.js */ \"./node_modules/apache-arrow/fb/precision.js\");\nclass FloatingPoint {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsFloatingPoint(bb, obj) {\n        return (obj || new FloatingPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsFloatingPoint(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new FloatingPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    precision() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : precision_js_1.Precision.HALF;\n    }\n    static startFloatingPoint(builder) {\n        builder.startObject(1);\n    }\n    static addPrecision(builder, precision) {\n        builder.addFieldInt16(0, precision, precision_js_1.Precision.HALF);\n    }\n    static endFloatingPoint(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createFloatingPoint(builder, precision) {\n        FloatingPoint.startFloatingPoint(builder);\n        FloatingPoint.addPrecision(builder, precision);\n        return FloatingPoint.endFloatingPoint(builder);\n    }\n}\nexports.FloatingPoint = FloatingPoint;\n\n//# sourceMappingURL=floating-point.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/floating-point.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/footer.js":
/*!************************************************!*\
  !*** ./node_modules/apache-arrow/fb/footer.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Footer = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst block_js_1 = __webpack_require__(/*! ./block.js */ \"./node_modules/apache-arrow/fb/block.js\");\nconst key_value_js_1 = __webpack_require__(/*! ./key-value.js */ \"./node_modules/apache-arrow/fb/key-value.js\");\nconst metadata_version_js_1 = __webpack_require__(/*! ./metadata-version.js */ \"./node_modules/apache-arrow/fb/metadata-version.js\");\nconst schema_js_1 = __webpack_require__(/*! ./schema.js */ \"./node_modules/apache-arrow/fb/schema.js\");\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n */\nclass Footer {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsFooter(bb, obj) {\n        return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsFooter(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    version() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : metadata_version_js_1.MetadataVersion.V1;\n    }\n    schema(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new schema_js_1.Schema()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    dictionaries(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new block_js_1.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n    }\n    dictionariesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    recordBatches(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? (obj || new block_js_1.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n    }\n    recordBatchesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * User-defined metadata\n     */\n    customMetadata(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? (obj || new key_value_js_1.KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    customMetadataLength() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static startFooter(builder) {\n        builder.startObject(5);\n    }\n    static addVersion(builder, version) {\n        builder.addFieldInt16(0, version, metadata_version_js_1.MetadataVersion.V1);\n    }\n    static addSchema(builder, schemaOffset) {\n        builder.addFieldOffset(1, schemaOffset, 0);\n    }\n    static addDictionaries(builder, dictionariesOffset) {\n        builder.addFieldOffset(2, dictionariesOffset, 0);\n    }\n    static startDictionariesVector(builder, numElems) {\n        builder.startVector(24, numElems, 8);\n    }\n    static addRecordBatches(builder, recordBatchesOffset) {\n        builder.addFieldOffset(3, recordBatchesOffset, 0);\n    }\n    static startRecordBatchesVector(builder, numElems) {\n        builder.startVector(24, numElems, 8);\n    }\n    static addCustomMetadata(builder, customMetadataOffset) {\n        builder.addFieldOffset(4, customMetadataOffset, 0);\n    }\n    static createCustomMetadataVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startCustomMetadataVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endFooter(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static finishFooterBuffer(builder, offset) {\n        builder.finish(offset);\n    }\n    static finishSizePrefixedFooterBuffer(builder, offset) {\n        builder.finish(offset, undefined, true);\n    }\n}\nexports.Footer = Footer;\n\n//# sourceMappingURL=footer.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/footer.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/int.js":
/*!*********************************************!*\
  !*** ./node_modules/apache-arrow/fb/int.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Int = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nclass Int {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsInt(bb, obj) {\n        return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsInt(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    bitWidth() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n    isSigned() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    static startInt(builder) {\n        builder.startObject(2);\n    }\n    static addBitWidth(builder, bitWidth) {\n        builder.addFieldInt32(0, bitWidth, 0);\n    }\n    static addIsSigned(builder, isSigned) {\n        builder.addFieldInt8(1, +isSigned, +false);\n    }\n    static endInt(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createInt(builder, bitWidth, isSigned) {\n        Int.startInt(builder);\n        Int.addBitWidth(builder, bitWidth);\n        Int.addIsSigned(builder, isSigned);\n        return Int.endInt(builder);\n    }\n}\nexports.Int = Int;\n\n//# sourceMappingURL=int.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/int.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/interval-unit.js":
/*!*******************************************************!*\
  !*** ./node_modules/apache-arrow/fb/interval-unit.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IntervalUnit = void 0;\nvar IntervalUnit;\n(function (IntervalUnit) {\n    IntervalUnit[IntervalUnit[\"YEAR_MONTH\"] = 0] = \"YEAR_MONTH\";\n    IntervalUnit[IntervalUnit[\"DAY_TIME\"] = 1] = \"DAY_TIME\";\n    IntervalUnit[IntervalUnit[\"MONTH_DAY_NANO\"] = 2] = \"MONTH_DAY_NANO\";\n})(IntervalUnit = exports.IntervalUnit || (exports.IntervalUnit = {}));\n\n//# sourceMappingURL=interval-unit.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/interval-unit.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/interval.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/fb/interval.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Interval = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst interval_unit_js_1 = __webpack_require__(/*! ./interval-unit.js */ \"./node_modules/apache-arrow/fb/interval-unit.js\");\nclass Interval {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsInterval(bb, obj) {\n        return (obj || new Interval()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsInterval(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Interval()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    unit() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : interval_unit_js_1.IntervalUnit.YEAR_MONTH;\n    }\n    static startInterval(builder) {\n        builder.startObject(1);\n    }\n    static addUnit(builder, unit) {\n        builder.addFieldInt16(0, unit, interval_unit_js_1.IntervalUnit.YEAR_MONTH);\n    }\n    static endInterval(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createInterval(builder, unit) {\n        Interval.startInterval(builder);\n        Interval.addUnit(builder, unit);\n        return Interval.endInterval(builder);\n    }\n}\nexports.Interval = Interval;\n\n//# sourceMappingURL=interval.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/interval.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/key-value.js":
/*!***************************************************!*\
  !*** ./node_modules/apache-arrow/fb/key-value.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyValue = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n */\nclass KeyValue {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsKeyValue(bb, obj) {\n        return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsKeyValue(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    key(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    value(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    static startKeyValue(builder) {\n        builder.startObject(2);\n    }\n    static addKey(builder, keyOffset) {\n        builder.addFieldOffset(0, keyOffset, 0);\n    }\n    static addValue(builder, valueOffset) {\n        builder.addFieldOffset(1, valueOffset, 0);\n    }\n    static endKeyValue(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createKeyValue(builder, keyOffset, valueOffset) {\n        KeyValue.startKeyValue(builder);\n        KeyValue.addKey(builder, keyOffset);\n        KeyValue.addValue(builder, valueOffset);\n        return KeyValue.endKeyValue(builder);\n    }\n}\nexports.KeyValue = KeyValue;\n\n//# sourceMappingURL=key-value.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/key-value.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/large-binary.js":
/*!******************************************************!*\
  !*** ./node_modules/apache-arrow/fb/large-binary.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LargeBinary = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n */\nclass LargeBinary {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsLargeBinary(bb, obj) {\n        return (obj || new LargeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsLargeBinary(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new LargeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startLargeBinary(builder) {\n        builder.startObject(0);\n    }\n    static endLargeBinary(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createLargeBinary(builder) {\n        LargeBinary.startLargeBinary(builder);\n        return LargeBinary.endLargeBinary(builder);\n    }\n}\nexports.LargeBinary = LargeBinary;\n\n//# sourceMappingURL=large-binary.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/large-binary.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/large-list.js":
/*!****************************************************!*\
  !*** ./node_modules/apache-arrow/fb/large-list.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LargeList = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n */\nclass LargeList {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsLargeList(bb, obj) {\n        return (obj || new LargeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsLargeList(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new LargeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startLargeList(builder) {\n        builder.startObject(0);\n    }\n    static endLargeList(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createLargeList(builder) {\n        LargeList.startLargeList(builder);\n        return LargeList.endLargeList(builder);\n    }\n}\nexports.LargeList = LargeList;\n\n//# sourceMappingURL=large-list.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/large-list.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/large-utf8.js":
/*!****************************************************!*\
  !*** ./node_modules/apache-arrow/fb/large-utf8.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LargeUtf8 = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n */\nclass LargeUtf8 {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsLargeUtf8(bb, obj) {\n        return (obj || new LargeUtf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsLargeUtf8(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new LargeUtf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startLargeUtf8(builder) {\n        builder.startObject(0);\n    }\n    static endLargeUtf8(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createLargeUtf8(builder) {\n        LargeUtf8.startLargeUtf8(builder);\n        return LargeUtf8.endLargeUtf8(builder);\n    }\n}\nexports.LargeUtf8 = LargeUtf8;\n\n//# sourceMappingURL=large-utf8.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/large-utf8.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/list.js":
/*!**********************************************!*\
  !*** ./node_modules/apache-arrow/fb/list.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.List = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nclass List {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsList(bb, obj) {\n        return (obj || new List()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsList(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new List()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startList(builder) {\n        builder.startObject(0);\n    }\n    static endList(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createList(builder) {\n        List.startList(builder);\n        return List.endList(builder);\n    }\n}\nexports.List = List;\n\n//# sourceMappingURL=list.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/list.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/map.js":
/*!*********************************************!*\
  !*** ./node_modules/apache-arrow/fb/map.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Map = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entries: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field.\n *\n * In a field with Map type, the field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entries\", \"key\", and \"value\", but this is\n * not enforced.\n *\n * Map\n * ```text\n *   - child[0] entries: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n * ```\n * Neither the \"entries\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n */\nclass Map {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsMap(bb, obj) {\n        return (obj || new Map()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsMap(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Map()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Set to true if the keys within each value are sorted\n     */\n    keysSorted() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    static startMap(builder) {\n        builder.startObject(1);\n    }\n    static addKeysSorted(builder, keysSorted) {\n        builder.addFieldInt8(0, +keysSorted, +false);\n    }\n    static endMap(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createMap(builder, keysSorted) {\n        Map.startMap(builder);\n        Map.addKeysSorted(builder, keysSorted);\n        return Map.endMap(builder);\n    }\n}\nexports.Map = Map;\n\n//# sourceMappingURL=map.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/map.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/message-header.js":
/*!********************************************************!*\
  !*** ./node_modules/apache-arrow/fb/message-header.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.unionListToMessageHeader = exports.unionToMessageHeader = exports.MessageHeader = void 0;\nconst dictionary_batch_js_1 = __webpack_require__(/*! ./dictionary-batch.js */ \"./node_modules/apache-arrow/fb/dictionary-batch.js\");\nconst record_batch_js_1 = __webpack_require__(/*! ./record-batch.js */ \"./node_modules/apache-arrow/fb/record-batch.js\");\nconst schema_js_1 = __webpack_require__(/*! ./schema.js */ \"./node_modules/apache-arrow/fb/schema.js\");\nconst sparse_tensor_js_1 = __webpack_require__(/*! ./sparse-tensor.js */ \"./node_modules/apache-arrow/fb/sparse-tensor.js\");\nconst tensor_js_1 = __webpack_require__(/*! ./tensor.js */ \"./node_modules/apache-arrow/fb/tensor.js\");\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n */\nvar MessageHeader;\n(function (MessageHeader) {\n    MessageHeader[MessageHeader[\"NONE\"] = 0] = \"NONE\";\n    MessageHeader[MessageHeader[\"Schema\"] = 1] = \"Schema\";\n    MessageHeader[MessageHeader[\"DictionaryBatch\"] = 2] = \"DictionaryBatch\";\n    MessageHeader[MessageHeader[\"RecordBatch\"] = 3] = \"RecordBatch\";\n    MessageHeader[MessageHeader[\"Tensor\"] = 4] = \"Tensor\";\n    MessageHeader[MessageHeader[\"SparseTensor\"] = 5] = \"SparseTensor\";\n})(MessageHeader = exports.MessageHeader || (exports.MessageHeader = {}));\nfunction unionToMessageHeader(type, accessor) {\n    switch (MessageHeader[type]) {\n        case 'NONE': return null;\n        case 'Schema': return accessor(new schema_js_1.Schema());\n        case 'DictionaryBatch': return accessor(new dictionary_batch_js_1.DictionaryBatch());\n        case 'RecordBatch': return accessor(new record_batch_js_1.RecordBatch());\n        case 'Tensor': return accessor(new tensor_js_1.Tensor());\n        case 'SparseTensor': return accessor(new sparse_tensor_js_1.SparseTensor());\n        default: return null;\n    }\n}\nexports.unionToMessageHeader = unionToMessageHeader;\nfunction unionListToMessageHeader(type, accessor, index) {\n    switch (MessageHeader[type]) {\n        case 'NONE': return null;\n        case 'Schema': return accessor(index, new schema_js_1.Schema());\n        case 'DictionaryBatch': return accessor(index, new dictionary_batch_js_1.DictionaryBatch());\n        case 'RecordBatch': return accessor(index, new record_batch_js_1.RecordBatch());\n        case 'Tensor': return accessor(index, new tensor_js_1.Tensor());\n        case 'SparseTensor': return accessor(index, new sparse_tensor_js_1.SparseTensor());\n        default: return null;\n    }\n}\nexports.unionListToMessageHeader = unionListToMessageHeader;\n\n//# sourceMappingURL=message-header.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/message-header.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/message.js":
/*!*************************************************!*\
  !*** ./node_modules/apache-arrow/fb/message.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Message = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst key_value_js_1 = __webpack_require__(/*! ./key-value.js */ \"./node_modules/apache-arrow/fb/key-value.js\");\nconst message_header_js_1 = __webpack_require__(/*! ./message-header.js */ \"./node_modules/apache-arrow/fb/message-header.js\");\nconst metadata_version_js_1 = __webpack_require__(/*! ./metadata-version.js */ \"./node_modules/apache-arrow/fb/metadata-version.js\");\nclass Message {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsMessage(bb, obj) {\n        return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsMessage(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    version() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : metadata_version_js_1.MetadataVersion.V1;\n    }\n    headerType() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readUint8(this.bb_pos + offset) : message_header_js_1.MessageHeader.NONE;\n    }\n    // @ts-ignore\n    header(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n    }\n    bodyLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n    }\n    customMetadata(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? (obj || new key_value_js_1.KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    customMetadataLength() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static startMessage(builder) {\n        builder.startObject(5);\n    }\n    static addVersion(builder, version) {\n        builder.addFieldInt16(0, version, metadata_version_js_1.MetadataVersion.V1);\n    }\n    static addHeaderType(builder, headerType) {\n        builder.addFieldInt8(1, headerType, message_header_js_1.MessageHeader.NONE);\n    }\n    static addHeader(builder, headerOffset) {\n        builder.addFieldOffset(2, headerOffset, 0);\n    }\n    static addBodyLength(builder, bodyLength) {\n        builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n    }\n    static addCustomMetadata(builder, customMetadataOffset) {\n        builder.addFieldOffset(4, customMetadataOffset, 0);\n    }\n    static createCustomMetadataVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startCustomMetadataVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endMessage(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static finishMessageBuffer(builder, offset) {\n        builder.finish(offset);\n    }\n    static finishSizePrefixedMessageBuffer(builder, offset) {\n        builder.finish(offset, undefined, true);\n    }\n    static createMessage(builder, version, headerType, headerOffset, bodyLength, customMetadataOffset) {\n        Message.startMessage(builder);\n        Message.addVersion(builder, version);\n        Message.addHeaderType(builder, headerType);\n        Message.addHeader(builder, headerOffset);\n        Message.addBodyLength(builder, bodyLength);\n        Message.addCustomMetadata(builder, customMetadataOffset);\n        return Message.endMessage(builder);\n    }\n}\nexports.Message = Message;\n\n//# sourceMappingURL=message.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/message.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/metadata-version.js":
/*!**********************************************************!*\
  !*** ./node_modules/apache-arrow/fb/metadata-version.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MetadataVersion = void 0;\n/**\n * Logical types, vector layouts, and schemas\n * Format Version History.\n * Version 1.0 - Forward and backwards compatibility guaranteed.\n * Version 1.1 - Add Decimal256 (No format release).\n * Version 1.2 (Pending)- Add Interval MONTH_DAY_NANO\n */\nvar MetadataVersion;\n(function (MetadataVersion) {\n    /**\n     * 0.1.0 (October 2016).\n     */\n    MetadataVersion[MetadataVersion[\"V1\"] = 0] = \"V1\";\n    /**\n     * 0.2.0 (February 2017). Non-backwards compatible with V1.\n     */\n    MetadataVersion[MetadataVersion[\"V2\"] = 1] = \"V2\";\n    /**\n     * 0.3.0 -> 0.7.1 (May - December 2017). Non-backwards compatible with V2.\n     */\n    MetadataVersion[MetadataVersion[\"V3\"] = 2] = \"V3\";\n    /**\n     * >= 0.8.0 (December 2017). Non-backwards compatible with V3.\n     */\n    MetadataVersion[MetadataVersion[\"V4\"] = 3] = \"V4\";\n    /**\n     * >= 1.0.0 (July 2020. Backwards compatible with V4 (V5 readers can read V4\n     * metadata and IPC messages). Implementations are recommended to provide a\n     * V4 compatibility mode with V5 format changes disabled.\n     *\n     * Incompatible changes between V4 and V5:\n     * - Union buffer layout has changed. In V5, Unions don't have a validity\n     *   bitmap buffer.\n     */\n    MetadataVersion[MetadataVersion[\"V5\"] = 4] = \"V5\";\n})(MetadataVersion = exports.MetadataVersion || (exports.MetadataVersion = {}));\n\n//# sourceMappingURL=metadata-version.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/metadata-version.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/null.js":
/*!**********************************************!*\
  !*** ./node_modules/apache-arrow/fb/null.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Null = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\n/**\n * These are stored in the flatbuffer in the Type union below\n */\nclass Null {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsNull(bb, obj) {\n        return (obj || new Null()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsNull(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Null()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startNull(builder) {\n        builder.startObject(0);\n    }\n    static endNull(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createNull(builder) {\n        Null.startNull(builder);\n        return Null.endNull(builder);\n    }\n}\nexports.Null = Null;\n\n//# sourceMappingURL=null.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/null.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/precision.js":
/*!***************************************************!*\
  !*** ./node_modules/apache-arrow/fb/precision.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Precision = void 0;\nvar Precision;\n(function (Precision) {\n    Precision[Precision[\"HALF\"] = 0] = \"HALF\";\n    Precision[Precision[\"SINGLE\"] = 1] = \"SINGLE\";\n    Precision[Precision[\"DOUBLE\"] = 2] = \"DOUBLE\";\n})(Precision = exports.Precision || (exports.Precision = {}));\n\n//# sourceMappingURL=precision.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/precision.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/record-batch.js":
/*!******************************************************!*\
  !*** ./node_modules/apache-arrow/fb/record-batch.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RecordBatch = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst body_compression_js_1 = __webpack_require__(/*! ./body-compression.js */ \"./node_modules/apache-arrow/fb/body-compression.js\");\nconst buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/apache-arrow/fb/buffer.js\");\nconst field_node_js_1 = __webpack_require__(/*! ./field-node.js */ \"./node_modules/apache-arrow/fb/field-node.js\");\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n */\nclass RecordBatch {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsRecordBatch(bb, obj) {\n        return (obj || new RecordBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsRecordBatch(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new RecordBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * number of records / rows. The arrays in the batch should all have this\n     * length\n     */\n    length() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n    }\n    /**\n     * Nodes correspond to the pre-ordered flattened logical schema\n     */\n    nodes(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new field_node_js_1.FieldNode()).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n    }\n    nodesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * Buffers correspond to the pre-ordered flattened buffer tree\n     *\n     * The number of buffers appended to this list depends on the schema. For\n     * example, most primitive arrays will have 2 buffers, 1 for the validity\n     * bitmap and 1 for the values. For struct arrays, there will only be a\n     * single buffer for the validity (nulls) bitmap\n     */\n    buffers(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new buffer_js_1.Buffer()).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n    }\n    buffersLength() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * Optional compression of the message body\n     */\n    compression(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? (obj || new body_compression_js_1.BodyCompression()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    static startRecordBatch(builder) {\n        builder.startObject(4);\n    }\n    static addLength(builder, length) {\n        builder.addFieldInt64(0, length, builder.createLong(0, 0));\n    }\n    static addNodes(builder, nodesOffset) {\n        builder.addFieldOffset(1, nodesOffset, 0);\n    }\n    static startNodesVector(builder, numElems) {\n        builder.startVector(16, numElems, 8);\n    }\n    static addBuffers(builder, buffersOffset) {\n        builder.addFieldOffset(2, buffersOffset, 0);\n    }\n    static startBuffersVector(builder, numElems) {\n        builder.startVector(16, numElems, 8);\n    }\n    static addCompression(builder, compressionOffset) {\n        builder.addFieldOffset(3, compressionOffset, 0);\n    }\n    static endRecordBatch(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n}\nexports.RecordBatch = RecordBatch;\n\n//# sourceMappingURL=record-batch.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/record-batch.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/schema.js":
/*!************************************************!*\
  !*** ./node_modules/apache-arrow/fb/schema.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Schema = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst endianness_js_1 = __webpack_require__(/*! ./endianness.js */ \"./node_modules/apache-arrow/fb/endianness.js\");\nconst field_js_1 = __webpack_require__(/*! ./field.js */ \"./node_modules/apache-arrow/fb/field.js\");\nconst key_value_js_1 = __webpack_require__(/*! ./key-value.js */ \"./node_modules/apache-arrow/fb/key-value.js\");\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n */\nclass Schema {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsSchema(bb, obj) {\n        return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsSchema(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * endianness of the buffer\n     * it is Little Endian by default\n     * if endianness doesn't match the underlying system then the vectors need to be converted\n     */\n    endianness() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : endianness_js_1.Endianness.Little;\n    }\n    fields(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new field_js_1.Field()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    fieldsLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    customMetadata(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new key_value_js_1.KeyValue()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    customMetadataLength() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * Features used in the stream/file.\n     */\n    features(index) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readInt64(this.bb.__vector(this.bb_pos + offset) + index * 8) : this.bb.createLong(0, 0);\n    }\n    featuresLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    static startSchema(builder) {\n        builder.startObject(4);\n    }\n    static addEndianness(builder, endianness) {\n        builder.addFieldInt16(0, endianness, endianness_js_1.Endianness.Little);\n    }\n    static addFields(builder, fieldsOffset) {\n        builder.addFieldOffset(1, fieldsOffset, 0);\n    }\n    static createFieldsVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startFieldsVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addCustomMetadata(builder, customMetadataOffset) {\n        builder.addFieldOffset(2, customMetadataOffset, 0);\n    }\n    static createCustomMetadataVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startCustomMetadataVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addFeatures(builder, featuresOffset) {\n        builder.addFieldOffset(3, featuresOffset, 0);\n    }\n    static createFeaturesVector(builder, data) {\n        builder.startVector(8, data.length, 8);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addInt64(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startFeaturesVector(builder, numElems) {\n        builder.startVector(8, numElems, 8);\n    }\n    static endSchema(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static finishSchemaBuffer(builder, offset) {\n        builder.finish(offset);\n    }\n    static finishSizePrefixedSchemaBuffer(builder, offset) {\n        builder.finish(offset, undefined, true);\n    }\n    static createSchema(builder, endianness, fieldsOffset, customMetadataOffset, featuresOffset) {\n        Schema.startSchema(builder);\n        Schema.addEndianness(builder, endianness);\n        Schema.addFields(builder, fieldsOffset);\n        Schema.addCustomMetadata(builder, customMetadataOffset);\n        Schema.addFeatures(builder, featuresOffset);\n        return Schema.endSchema(builder);\n    }\n}\nexports.Schema = Schema;\n\n//# sourceMappingURL=schema.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/schema.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/sparse-matrix-compressed-axis.js":
/*!***********************************************************************!*\
  !*** ./node_modules/apache-arrow/fb/sparse-matrix-compressed-axis.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SparseMatrixCompressedAxis = void 0;\nvar SparseMatrixCompressedAxis;\n(function (SparseMatrixCompressedAxis) {\n    SparseMatrixCompressedAxis[SparseMatrixCompressedAxis[\"Row\"] = 0] = \"Row\";\n    SparseMatrixCompressedAxis[SparseMatrixCompressedAxis[\"Column\"] = 1] = \"Column\";\n})(SparseMatrixCompressedAxis = exports.SparseMatrixCompressedAxis || (exports.SparseMatrixCompressedAxis = {}));\n\n//# sourceMappingURL=sparse-matrix-compressed-axis.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/sparse-matrix-compressed-axis.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/sparse-matrix-index-c-s-x.js":
/*!*******************************************************************!*\
  !*** ./node_modules/apache-arrow/fb/sparse-matrix-index-c-s-x.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SparseMatrixIndexCSX = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/apache-arrow/fb/buffer.js\");\nconst int_js_1 = __webpack_require__(/*! ./int.js */ \"./node_modules/apache-arrow/fb/int.js\");\nconst sparse_matrix_compressed_axis_js_1 = __webpack_require__(/*! ./sparse-matrix-compressed-axis.js */ \"./node_modules/apache-arrow/fb/sparse-matrix-compressed-axis.js\");\n/**\n * Compressed Sparse format, that is matrix-specific.\n */\nclass SparseMatrixIndexCSX {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsSparseMatrixIndexCSX(bb, obj) {\n        return (obj || new SparseMatrixIndexCSX()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsSparseMatrixIndexCSX(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new SparseMatrixIndexCSX()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Which axis, row or column, is compressed\n     */\n    compressedAxis() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : sparse_matrix_compressed_axis_js_1.SparseMatrixCompressedAxis.Row;\n    }\n    /**\n     * The type of values in indptrBuffer\n     */\n    indptrType(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new int_js_1.Int()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * indptrBuffer stores the location and size of indptr array that\n     * represents the range of the rows.\n     * The i-th row spans from `indptr[i]` to `indptr[i+1]` in the data.\n     * The length of this array is 1 + (the number of rows), and the type\n     * of index value is long.\n     *\n     * For example, let X be the following 6x4 matrix:\n     * ```text\n     *   X := [[0, 1, 2, 0],\n     *         [0, 0, 3, 0],\n     *         [0, 4, 0, 5],\n     *         [0, 0, 0, 0],\n     *         [6, 0, 7, 8],\n     *         [0, 9, 0, 0]].\n     * ```\n     * The array of non-zero values in X is:\n     * ```text\n     *   values(X) = [1, 2, 3, 4, 5, 6, 7, 8, 9].\n     * ```\n     * And the indptr of X is:\n     * ```text\n     *   indptr(X) = [0, 2, 3, 5, 5, 8, 10].\n     * ```\n     */\n    indptrBuffer(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new buffer_js_1.Buffer()).__init(this.bb_pos + offset, this.bb) : null;\n    }\n    /**\n     * The type of values in indicesBuffer\n     */\n    indicesType(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? (obj || new int_js_1.Int()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * indicesBuffer stores the location and size of the array that\n     * contains the column indices of the corresponding non-zero values.\n     * The type of index value is long.\n     *\n     * For example, the indices of the above X is:\n     * ```text\n     *   indices(X) = [1, 2, 2, 1, 3, 0, 2, 3, 1].\n     * ```\n     * Note that the indices are sorted in lexicographical order for each row.\n     */\n    indicesBuffer(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? (obj || new buffer_js_1.Buffer()).__init(this.bb_pos + offset, this.bb) : null;\n    }\n    static startSparseMatrixIndexCSX(builder) {\n        builder.startObject(5);\n    }\n    static addCompressedAxis(builder, compressedAxis) {\n        builder.addFieldInt16(0, compressedAxis, sparse_matrix_compressed_axis_js_1.SparseMatrixCompressedAxis.Row);\n    }\n    static addIndptrType(builder, indptrTypeOffset) {\n        builder.addFieldOffset(1, indptrTypeOffset, 0);\n    }\n    static addIndptrBuffer(builder, indptrBufferOffset) {\n        builder.addFieldStruct(2, indptrBufferOffset, 0);\n    }\n    static addIndicesType(builder, indicesTypeOffset) {\n        builder.addFieldOffset(3, indicesTypeOffset, 0);\n    }\n    static addIndicesBuffer(builder, indicesBufferOffset) {\n        builder.addFieldStruct(4, indicesBufferOffset, 0);\n    }\n    static endSparseMatrixIndexCSX(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 6); // indptrType\n        builder.requiredField(offset, 8); // indptrBuffer\n        builder.requiredField(offset, 10); // indicesType\n        builder.requiredField(offset, 12); // indicesBuffer\n        return offset;\n    }\n}\nexports.SparseMatrixIndexCSX = SparseMatrixIndexCSX;\n\n//# sourceMappingURL=sparse-matrix-index-c-s-x.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/sparse-matrix-index-c-s-x.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/sparse-tensor-index-c-o-o.js":
/*!*******************************************************************!*\
  !*** ./node_modules/apache-arrow/fb/sparse-tensor-index-c-o-o.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SparseTensorIndexCOO = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/apache-arrow/fb/buffer.js\");\nconst int_js_1 = __webpack_require__(/*! ./int.js */ \"./node_modules/apache-arrow/fb/int.js\");\n/**\n * ----------------------------------------------------------------------\n * EXPERIMENTAL: Data structures for sparse tensors\n * Coordinate (COO) format of sparse tensor index.\n *\n * COO's index list are represented as a NxM matrix,\n * where N is the number of non-zero values,\n * and M is the number of dimensions of a sparse tensor.\n *\n * indicesBuffer stores the location and size of the data of this indices\n * matrix.  The value type and the stride of the indices matrix is\n * specified in indicesType and indicesStrides fields.\n *\n * For example, let X be a 2x3x4x5 tensor, and it has the following\n * 6 non-zero values:\n * ```text\n *   X[0, 1, 2, 0] := 1\n *   X[1, 1, 2, 3] := 2\n *   X[0, 2, 1, 0] := 3\n *   X[0, 1, 3, 0] := 4\n *   X[0, 1, 2, 1] := 5\n *   X[1, 2, 0, 4] := 6\n * ```\n * In COO format, the index matrix of X is the following 4x6 matrix:\n * ```text\n *   [[0, 0, 0, 0, 1, 1],\n *    [1, 1, 1, 2, 1, 2],\n *    [2, 2, 3, 1, 2, 0],\n *    [0, 1, 0, 0, 3, 4]]\n * ```\n * When isCanonical is true, the indices is sorted in lexicographical order\n * (row-major order), and it does not have duplicated entries.  Otherwise,\n * the indices may not be sorted, or may have duplicated entries.\n */\nclass SparseTensorIndexCOO {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsSparseTensorIndexCOO(bb, obj) {\n        return (obj || new SparseTensorIndexCOO()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsSparseTensorIndexCOO(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new SparseTensorIndexCOO()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * The type of values in indicesBuffer\n     */\n    indicesType(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? (obj || new int_js_1.Int()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * Non-negative byte offsets to advance one value cell along each dimension\n     * If omitted, default to row-major order (C-like).\n     */\n    indicesStrides(index) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt64(this.bb.__vector(this.bb_pos + offset) + index * 8) : this.bb.createLong(0, 0);\n    }\n    indicesStridesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * The location and size of the indices matrix's data\n     */\n    indicesBuffer(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new buffer_js_1.Buffer()).__init(this.bb_pos + offset, this.bb) : null;\n    }\n    /**\n     * This flag is true if and only if the indices matrix is sorted in\n     * row-major order, and does not have duplicated entries.\n     * This sort order is the same as of Tensorflow's SparseTensor,\n     * but it is inverse order of SciPy's canonical coo_matrix\n     * (SciPy employs column-major order for its coo_matrix).\n     */\n    isCanonical() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n    }\n    static startSparseTensorIndexCOO(builder) {\n        builder.startObject(4);\n    }\n    static addIndicesType(builder, indicesTypeOffset) {\n        builder.addFieldOffset(0, indicesTypeOffset, 0);\n    }\n    static addIndicesStrides(builder, indicesStridesOffset) {\n        builder.addFieldOffset(1, indicesStridesOffset, 0);\n    }\n    static createIndicesStridesVector(builder, data) {\n        builder.startVector(8, data.length, 8);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addInt64(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startIndicesStridesVector(builder, numElems) {\n        builder.startVector(8, numElems, 8);\n    }\n    static addIndicesBuffer(builder, indicesBufferOffset) {\n        builder.addFieldStruct(2, indicesBufferOffset, 0);\n    }\n    static addIsCanonical(builder, isCanonical) {\n        builder.addFieldInt8(3, +isCanonical, +false);\n    }\n    static endSparseTensorIndexCOO(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 4); // indicesType\n        builder.requiredField(offset, 8); // indicesBuffer\n        return offset;\n    }\n}\nexports.SparseTensorIndexCOO = SparseTensorIndexCOO;\n\n//# sourceMappingURL=sparse-tensor-index-c-o-o.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/sparse-tensor-index-c-o-o.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/sparse-tensor-index-c-s-f.js":
/*!*******************************************************************!*\
  !*** ./node_modules/apache-arrow/fb/sparse-tensor-index-c-s-f.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SparseTensorIndexCSF = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/apache-arrow/fb/buffer.js\");\nconst int_js_1 = __webpack_require__(/*! ./int.js */ \"./node_modules/apache-arrow/fb/int.js\");\n/**\n * Compressed Sparse Fiber (CSF) sparse tensor index.\n */\nclass SparseTensorIndexCSF {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsSparseTensorIndexCSF(bb, obj) {\n        return (obj || new SparseTensorIndexCSF()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsSparseTensorIndexCSF(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new SparseTensorIndexCSF()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * CSF is a generalization of compressed sparse row (CSR) index.\n     * See [smith2017knl](http://shaden.io/pub-files/smith2017knl.pdf)\n     *\n     * CSF index recursively compresses each dimension of a tensor into a set\n     * of prefix trees. Each path from a root to leaf forms one tensor\n     * non-zero index. CSF is implemented with two arrays of buffers and one\n     * arrays of integers.\n     *\n     * For example, let X be a 2x3x4x5 tensor and let it have the following\n     * 8 non-zero values:\n     * ```text\n     *   X[0, 0, 0, 1] := 1\n     *   X[0, 0, 0, 2] := 2\n     *   X[0, 1, 0, 0] := 3\n     *   X[0, 1, 0, 2] := 4\n     *   X[0, 1, 1, 0] := 5\n     *   X[1, 1, 1, 0] := 6\n     *   X[1, 1, 1, 1] := 7\n     *   X[1, 1, 1, 2] := 8\n     * ```\n     * As a prefix tree this would be represented as:\n     * ```text\n     *         0          1\n     *        / \\         |\n     *       0   1        1\n     *      /   / \\       |\n     *     0   0   1      1\n     *    /|  /|   |    /| |\n     *   1 2 0 2   0   0 1 2\n     * ```\n     * The type of values in indptrBuffers\n     */\n    indptrType(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? (obj || new int_js_1.Int()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * indptrBuffers stores the sparsity structure.\n     * Each two consecutive dimensions in a tensor correspond to a buffer in\n     * indptrBuffers. A pair of consecutive values at `indptrBuffers[dim][i]`\n     * and `indptrBuffers[dim][i + 1]` signify a range of nodes in\n     * `indicesBuffers[dim + 1]` who are children of `indicesBuffers[dim][i]` node.\n     *\n     * For example, the indptrBuffers for the above X is:\n     * ```text\n     *   indptrBuffer(X) = [\n     *                       [0, 2, 3],\n     *                       [0, 1, 3, 4],\n     *                       [0, 2, 4, 5, 8]\n     *                     ].\n     * ```\n     */\n    indptrBuffers(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? (obj || new buffer_js_1.Buffer()).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n    }\n    indptrBuffersLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * The type of values in indicesBuffers\n     */\n    indicesType(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new int_js_1.Int()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n    }\n    /**\n     * indicesBuffers stores values of nodes.\n     * Each tensor dimension corresponds to a buffer in indicesBuffers.\n     * For example, the indicesBuffers for the above X is:\n     * ```text\n     *   indicesBuffer(X) = [\n     *                        [0, 1],\n     *                        [0, 1, 1],\n     *                        [0, 0, 1, 1],\n     *                        [1, 2, 0, 2, 0, 0, 1, 2]\n     *                      ].\n     * ```\n     */\n    indicesBuffers(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? (obj || new buffer_js_1.Buffer()).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n    }\n    indicesBuffersLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * axisOrder stores the sequence in which dimensions were traversed to\n     * produce the prefix tree.\n     * For example, the axisOrder for the above X is:\n     * ```text\n     *   axisOrder(X) = [0, 1, 2, 3].\n     * ```\n     */\n    axisOrder(index) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n    axisOrderLength() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    axisOrderArray() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n    }\n    static startSparseTensorIndexCSF(builder) {\n        builder.startObject(5);\n    }\n    static addIndptrType(builder, indptrTypeOffset) {\n        builder.addFieldOffset(0, indptrTypeOffset, 0);\n    }\n    static addIndptrBuffers(builder, indptrBuffersOffset) {\n        builder.addFieldOffset(1, indptrBuffersOffset, 0);\n    }\n    static startIndptrBuffersVector(builder, numElems) {\n        builder.startVector(16, numElems, 8);\n    }\n    static addIndicesType(builder, indicesTypeOffset) {\n        builder.addFieldOffset(2, indicesTypeOffset, 0);\n    }\n    static addIndicesBuffers(builder, indicesBuffersOffset) {\n        builder.addFieldOffset(3, indicesBuffersOffset, 0);\n    }\n    static startIndicesBuffersVector(builder, numElems) {\n        builder.startVector(16, numElems, 8);\n    }\n    static addAxisOrder(builder, axisOrderOffset) {\n        builder.addFieldOffset(4, axisOrderOffset, 0);\n    }\n    static createAxisOrderVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addInt32(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startAxisOrderVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endSparseTensorIndexCSF(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 4); // indptrType\n        builder.requiredField(offset, 6); // indptrBuffers\n        builder.requiredField(offset, 8); // indicesType\n        builder.requiredField(offset, 10); // indicesBuffers\n        builder.requiredField(offset, 12); // axisOrder\n        return offset;\n    }\n}\nexports.SparseTensorIndexCSF = SparseTensorIndexCSF;\n\n//# sourceMappingURL=sparse-tensor-index-c-s-f.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/sparse-tensor-index-c-s-f.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/sparse-tensor-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/apache-arrow/fb/sparse-tensor-index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.unionListToSparseTensorIndex = exports.unionToSparseTensorIndex = exports.SparseTensorIndex = void 0;\nconst sparse_matrix_index_c_s_x_js_1 = __webpack_require__(/*! ./sparse-matrix-index-c-s-x.js */ \"./node_modules/apache-arrow/fb/sparse-matrix-index-c-s-x.js\");\nconst sparse_tensor_index_c_o_o_js_1 = __webpack_require__(/*! ./sparse-tensor-index-c-o-o.js */ \"./node_modules/apache-arrow/fb/sparse-tensor-index-c-o-o.js\");\nconst sparse_tensor_index_c_s_f_js_1 = __webpack_require__(/*! ./sparse-tensor-index-c-s-f.js */ \"./node_modules/apache-arrow/fb/sparse-tensor-index-c-s-f.js\");\nvar SparseTensorIndex;\n(function (SparseTensorIndex) {\n    SparseTensorIndex[SparseTensorIndex[\"NONE\"] = 0] = \"NONE\";\n    SparseTensorIndex[SparseTensorIndex[\"SparseTensorIndexCOO\"] = 1] = \"SparseTensorIndexCOO\";\n    SparseTensorIndex[SparseTensorIndex[\"SparseMatrixIndexCSX\"] = 2] = \"SparseMatrixIndexCSX\";\n    SparseTensorIndex[SparseTensorIndex[\"SparseTensorIndexCSF\"] = 3] = \"SparseTensorIndexCSF\";\n})(SparseTensorIndex = exports.SparseTensorIndex || (exports.SparseTensorIndex = {}));\nfunction unionToSparseTensorIndex(type, accessor) {\n    switch (SparseTensorIndex[type]) {\n        case 'NONE': return null;\n        case 'SparseTensorIndexCOO': return accessor(new sparse_tensor_index_c_o_o_js_1.SparseTensorIndexCOO());\n        case 'SparseMatrixIndexCSX': return accessor(new sparse_matrix_index_c_s_x_js_1.SparseMatrixIndexCSX());\n        case 'SparseTensorIndexCSF': return accessor(new sparse_tensor_index_c_s_f_js_1.SparseTensorIndexCSF());\n        default: return null;\n    }\n}\nexports.unionToSparseTensorIndex = unionToSparseTensorIndex;\nfunction unionListToSparseTensorIndex(type, accessor, index) {\n    switch (SparseTensorIndex[type]) {\n        case 'NONE': return null;\n        case 'SparseTensorIndexCOO': return accessor(index, new sparse_tensor_index_c_o_o_js_1.SparseTensorIndexCOO());\n        case 'SparseMatrixIndexCSX': return accessor(index, new sparse_matrix_index_c_s_x_js_1.SparseMatrixIndexCSX());\n        case 'SparseTensorIndexCSF': return accessor(index, new sparse_tensor_index_c_s_f_js_1.SparseTensorIndexCSF());\n        default: return null;\n    }\n}\nexports.unionListToSparseTensorIndex = unionListToSparseTensorIndex;\n\n//# sourceMappingURL=sparse-tensor-index.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/sparse-tensor-index.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/sparse-tensor.js":
/*!*******************************************************!*\
  !*** ./node_modules/apache-arrow/fb/sparse-tensor.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SparseTensor = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/apache-arrow/fb/buffer.js\");\nconst sparse_tensor_index_js_1 = __webpack_require__(/*! ./sparse-tensor-index.js */ \"./node_modules/apache-arrow/fb/sparse-tensor-index.js\");\nconst tensor_dim_js_1 = __webpack_require__(/*! ./tensor-dim.js */ \"./node_modules/apache-arrow/fb/tensor-dim.js\");\nconst type_js_1 = __webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/fb/type.js\");\nclass SparseTensor {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsSparseTensor(bb, obj) {\n        return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsSparseTensor(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    typeType() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readUint8(this.bb_pos + offset) : type_js_1.Type.NONE;\n    }\n    /**\n     * The type of data contained in a value cell.\n     * Currently only fixed-width value types are supported,\n     * no strings or nested types.\n     */\n    // @ts-ignore\n    type(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n    }\n    /**\n     * The dimensions of the tensor, optionally named.\n     */\n    shape(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new tensor_dim_js_1.TensorDim()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    shapeLength() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * The number of non-zero values in a sparse tensor.\n     */\n    nonZeroLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n    }\n    sparseIndexType() {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? this.bb.readUint8(this.bb_pos + offset) : sparse_tensor_index_js_1.SparseTensorIndex.NONE;\n    }\n    /**\n     * Sparse tensor index\n     */\n    // @ts-ignore\n    sparseIndex(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 14);\n        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n    }\n    /**\n     * The location and size of the tensor's data\n     */\n    data(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 16);\n        return offset ? (obj || new buffer_js_1.Buffer()).__init(this.bb_pos + offset, this.bb) : null;\n    }\n    static startSparseTensor(builder) {\n        builder.startObject(7);\n    }\n    static addTypeType(builder, typeType) {\n        builder.addFieldInt8(0, typeType, type_js_1.Type.NONE);\n    }\n    static addType(builder, typeOffset) {\n        builder.addFieldOffset(1, typeOffset, 0);\n    }\n    static addShape(builder, shapeOffset) {\n        builder.addFieldOffset(2, shapeOffset, 0);\n    }\n    static createShapeVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startShapeVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addNonZeroLength(builder, nonZeroLength) {\n        builder.addFieldInt64(3, nonZeroLength, builder.createLong(0, 0));\n    }\n    static addSparseIndexType(builder, sparseIndexType) {\n        builder.addFieldInt8(4, sparseIndexType, sparse_tensor_index_js_1.SparseTensorIndex.NONE);\n    }\n    static addSparseIndex(builder, sparseIndexOffset) {\n        builder.addFieldOffset(5, sparseIndexOffset, 0);\n    }\n    static addData(builder, dataOffset) {\n        builder.addFieldStruct(6, dataOffset, 0);\n    }\n    static endSparseTensor(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 6); // type\n        builder.requiredField(offset, 8); // shape\n        builder.requiredField(offset, 14); // sparseIndex\n        builder.requiredField(offset, 16); // data\n        return offset;\n    }\n    static finishSparseTensorBuffer(builder, offset) {\n        builder.finish(offset);\n    }\n    static finishSizePrefixedSparseTensorBuffer(builder, offset) {\n        builder.finish(offset, undefined, true);\n    }\n}\nexports.SparseTensor = SparseTensor;\n\n//# sourceMappingURL=sparse-tensor.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/sparse-tensor.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/struct_.js":
/*!*************************************************!*\
  !*** ./node_modules/apache-arrow/fb/struct_.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Struct_ = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n */\nclass Struct_ {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsStruct_(bb, obj) {\n        return (obj || new Struct_()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsStruct_(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Struct_()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startStruct_(builder) {\n        builder.startObject(0);\n    }\n    static endStruct_(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createStruct_(builder) {\n        Struct_.startStruct_(builder);\n        return Struct_.endStruct_(builder);\n    }\n}\nexports.Struct_ = Struct_;\n\n//# sourceMappingURL=struct_.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/struct_.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/tensor-dim.js":
/*!****************************************************!*\
  !*** ./node_modules/apache-arrow/fb/tensor-dim.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TensorDim = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\n/**\n * ----------------------------------------------------------------------\n * Data structures for dense tensors\n * Shape data for a single axis in a tensor\n */\nclass TensorDim {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsTensorDim(bb, obj) {\n        return (obj || new TensorDim()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsTensorDim(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new TensorDim()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    /**\n     * Length of dimension\n     */\n    size() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n    }\n    name(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    static startTensorDim(builder) {\n        builder.startObject(2);\n    }\n    static addSize(builder, size) {\n        builder.addFieldInt64(0, size, builder.createLong(0, 0));\n    }\n    static addName(builder, nameOffset) {\n        builder.addFieldOffset(1, nameOffset, 0);\n    }\n    static endTensorDim(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createTensorDim(builder, size, nameOffset) {\n        TensorDim.startTensorDim(builder);\n        TensorDim.addSize(builder, size);\n        TensorDim.addName(builder, nameOffset);\n        return TensorDim.endTensorDim(builder);\n    }\n}\nexports.TensorDim = TensorDim;\n\n//# sourceMappingURL=tensor-dim.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/tensor-dim.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/tensor.js":
/*!************************************************!*\
  !*** ./node_modules/apache-arrow/fb/tensor.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tensor = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/apache-arrow/fb/buffer.js\");\nconst tensor_dim_js_1 = __webpack_require__(/*! ./tensor-dim.js */ \"./node_modules/apache-arrow/fb/tensor-dim.js\");\nconst type_js_1 = __webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/fb/type.js\");\nclass Tensor {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsTensor(bb, obj) {\n        return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsTensor(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    typeType() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readUint8(this.bb_pos + offset) : type_js_1.Type.NONE;\n    }\n    /**\n     * The type of data contained in a value cell. Currently only fixed-width\n     * value types are supported, no strings or nested types\n     */\n    // @ts-ignore\n    type(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n    }\n    /**\n     * The dimensions of the tensor, optionally named\n     */\n    shape(index, obj) {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? (obj || new tensor_dim_js_1.TensorDim()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n    }\n    shapeLength() {\n        const offset = this.bb.__offset(this.bb_pos, 8);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * Non-negative byte offsets to advance one value cell along each dimension\n     * If omitted, default to row-major order (C-like).\n     */\n    strides(index) {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.readInt64(this.bb.__vector(this.bb_pos + offset) + index * 8) : this.bb.createLong(0, 0);\n    }\n    stridesLength() {\n        const offset = this.bb.__offset(this.bb_pos, 10);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    /**\n     * The location and size of the tensor's data\n     */\n    data(obj) {\n        const offset = this.bb.__offset(this.bb_pos, 12);\n        return offset ? (obj || new buffer_js_1.Buffer()).__init(this.bb_pos + offset, this.bb) : null;\n    }\n    static startTensor(builder) {\n        builder.startObject(5);\n    }\n    static addTypeType(builder, typeType) {\n        builder.addFieldInt8(0, typeType, type_js_1.Type.NONE);\n    }\n    static addType(builder, typeOffset) {\n        builder.addFieldOffset(1, typeOffset, 0);\n    }\n    static addShape(builder, shapeOffset) {\n        builder.addFieldOffset(2, shapeOffset, 0);\n    }\n    static createShapeVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addOffset(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startShapeVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static addStrides(builder, stridesOffset) {\n        builder.addFieldOffset(3, stridesOffset, 0);\n    }\n    static createStridesVector(builder, data) {\n        builder.startVector(8, data.length, 8);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addInt64(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startStridesVector(builder, numElems) {\n        builder.startVector(8, numElems, 8);\n    }\n    static addData(builder, dataOffset) {\n        builder.addFieldStruct(4, dataOffset, 0);\n    }\n    static endTensor(builder) {\n        const offset = builder.endObject();\n        builder.requiredField(offset, 6); // type\n        builder.requiredField(offset, 8); // shape\n        builder.requiredField(offset, 12); // data\n        return offset;\n    }\n    static finishTensorBuffer(builder, offset) {\n        builder.finish(offset);\n    }\n    static finishSizePrefixedTensorBuffer(builder, offset) {\n        builder.finish(offset, undefined, true);\n    }\n}\nexports.Tensor = Tensor;\n\n//# sourceMappingURL=tensor.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/tensor.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/time-unit.js":
/*!***************************************************!*\
  !*** ./node_modules/apache-arrow/fb/time-unit.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TimeUnit = void 0;\nvar TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"SECOND\"] = 0] = \"SECOND\";\n    TimeUnit[TimeUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n    TimeUnit[TimeUnit[\"MICROSECOND\"] = 2] = \"MICROSECOND\";\n    TimeUnit[TimeUnit[\"NANOSECOND\"] = 3] = \"NANOSECOND\";\n})(TimeUnit = exports.TimeUnit || (exports.TimeUnit = {}));\n\n//# sourceMappingURL=time-unit.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/time-unit.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/time.js":
/*!**********************************************!*\
  !*** ./node_modules/apache-arrow/fb/time.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Time = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst time_unit_js_1 = __webpack_require__(/*! ./time-unit.js */ \"./node_modules/apache-arrow/fb/time-unit.js\");\n/**\n * Time is either a 32-bit or 64-bit signed integer type representing an\n * elapsed time since midnight, stored in either of four units: seconds,\n * milliseconds, microseconds or nanoseconds.\n *\n * The integer `bitWidth` depends on the `unit` and must be one of the following:\n * * SECOND and MILLISECOND: 32 bits\n * * MICROSECOND and NANOSECOND: 64 bits\n *\n * The allowed values are between 0 (inclusive) and 86400 (=24*60*60) seconds\n * (exclusive), adjusted for the time unit (for example, up to 86400000\n * exclusive for the MILLISECOND unit).\n * This definition doesn't allow for leap seconds. Time values from\n * measurements with leap seconds will need to be corrected when ingesting\n * into Arrow (for example by replacing the value 86400 with 86399).\n */\nclass Time {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsTime(bb, obj) {\n        return (obj || new Time()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsTime(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Time()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    unit() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : time_unit_js_1.TimeUnit.MILLISECOND;\n    }\n    bitWidth() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt32(this.bb_pos + offset) : 32;\n    }\n    static startTime(builder) {\n        builder.startObject(2);\n    }\n    static addUnit(builder, unit) {\n        builder.addFieldInt16(0, unit, time_unit_js_1.TimeUnit.MILLISECOND);\n    }\n    static addBitWidth(builder, bitWidth) {\n        builder.addFieldInt32(1, bitWidth, 32);\n    }\n    static endTime(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createTime(builder, unit, bitWidth) {\n        Time.startTime(builder);\n        Time.addUnit(builder, unit);\n        Time.addBitWidth(builder, bitWidth);\n        return Time.endTime(builder);\n    }\n}\nexports.Time = Time;\n\n//# sourceMappingURL=time.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/time.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/timestamp.js":
/*!***************************************************!*\
  !*** ./node_modules/apache-arrow/fb/timestamp.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Timestamp = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst time_unit_js_1 = __webpack_require__(/*! ./time-unit.js */ \"./node_modules/apache-arrow/fb/time-unit.js\");\n/**\n * Timestamp is a 64-bit signed integer representing an elapsed time since a\n * fixed epoch, stored in either of four units: seconds, milliseconds,\n * microseconds or nanoseconds, and is optionally annotated with a timezone.\n *\n * Timestamp values do not include any leap seconds (in other words, all\n * days are considered 86400 seconds long).\n *\n * Timestamps with a non-empty timezone\n * ------------------------------------\n *\n * If a Timestamp column has a non-empty timezone value, its epoch is\n * 1970-01-01 00:00:00 (January 1st 1970, midnight) in the *UTC* timezone\n * (the Unix epoch), regardless of the Timestamp's own timezone.\n *\n * Therefore, timestamp values with a non-empty timezone correspond to\n * physical points in time together with some additional information about\n * how the data was obtained and/or how to display it (the timezone).\n *\n *   For example, the timestamp value 0 with the timezone string \"Europe/Paris\"\n *   corresponds to \"January 1st 1970, 00h00\" in the UTC timezone, but the\n *   application may prefer to display it as \"January 1st 1970, 01h00\" in\n *   the Europe/Paris timezone (which is the same physical point in time).\n *\n * One consequence is that timestamp values with a non-empty timezone\n * can be compared and ordered directly, since they all share the same\n * well-known point of reference (the Unix epoch).\n *\n * Timestamps with an unset / empty timezone\n * -----------------------------------------\n *\n * If a Timestamp column has no timezone value, its epoch is\n * 1970-01-01 00:00:00 (January 1st 1970, midnight) in an *unknown* timezone.\n *\n * Therefore, timestamp values without a timezone cannot be meaningfully\n * interpreted as physical points in time, but only as calendar / clock\n * indications (\"wall clock time\") in an unspecified timezone.\n *\n *   For example, the timestamp value 0 with an empty timezone string\n *   corresponds to \"January 1st 1970, 00h00\" in an unknown timezone: there\n *   is not enough information to interpret it as a well-defined physical\n *   point in time.\n *\n * One consequence is that timestamp values without a timezone cannot\n * be reliably compared or ordered, since they may have different points of\n * reference.  In particular, it is *not* possible to interpret an unset\n * or empty timezone as the same as \"UTC\".\n *\n * Conversion between timezones\n * ----------------------------\n *\n * If a Timestamp column has a non-empty timezone, changing the timezone\n * to a different non-empty value is a metadata-only operation:\n * the timestamp values need not change as their point of reference remains\n * the same (the Unix epoch).\n *\n * However, if a Timestamp column has no timezone value, changing it to a\n * non-empty value requires to think about the desired semantics.\n * One possibility is to assume that the original timestamp values are\n * relative to the epoch of the timezone being set; timestamp values should\n * then adjusted to the Unix epoch (for example, changing the timezone from\n * empty to \"Europe/Paris\" would require converting the timestamp values\n * from \"Europe/Paris\" to \"UTC\", which seems counter-intuitive but is\n * nevertheless correct).\n *\n * Guidelines for encoding data from external libraries\n * ----------------------------------------------------\n *\n * Date & time libraries often have multiple different data types for temporal\n * data. In order to ease interoperability between different implementations the\n * Arrow project has some recommendations for encoding these types into a Timestamp\n * column.\n *\n * An \"instant\" represents a physical point in time that has no relevant timezone\n * (for example, astronomical data). To encode an instant, use a Timestamp with\n * the timezone string set to \"UTC\", and make sure the Timestamp values\n * are relative to the UTC epoch (January 1st 1970, midnight).\n *\n * A \"zoned date-time\" represents a physical point in time annotated with an\n * informative timezone (for example, the timezone in which the data was\n * recorded).  To encode a zoned date-time, use a Timestamp with the timezone\n * string set to the name of the timezone, and make sure the Timestamp values\n * are relative to the UTC epoch (January 1st 1970, midnight).\n *\n *  (There is some ambiguity between an instant and a zoned date-time with the\n *   UTC timezone.  Both of these are stored the same in Arrow.  Typically,\n *   this distinction does not matter.  If it does, then an application should\n *   use custom metadata or an extension type to distinguish between the two cases.)\n *\n * An \"offset date-time\" represents a physical point in time combined with an\n * explicit offset from UTC.  To encode an offset date-time, use a Timestamp\n * with the timezone string set to the numeric timezone offset string\n * (e.g. \"+03:00\"), and make sure the Timestamp values are relative to\n * the UTC epoch (January 1st 1970, midnight).\n *\n * A \"naive date-time\" (also called \"local date-time\" in some libraries)\n * represents a wall clock time combined with a calendar date, but with\n * no indication of how to map this information to a physical point in time.\n * Naive date-times must be handled with care because of this missing\n * information, and also because daylight saving time (DST) may make\n * some values ambiguous or non-existent. A naive date-time may be\n * stored as a struct with Date and Time fields. However, it may also be\n * encoded into a Timestamp column with an empty timezone. The timestamp\n * values should be computed \"as if\" the timezone of the date-time values\n * was UTC; for example, the naive date-time \"January 1st 1970, 00h00\" would\n * be encoded as timestamp value 0.\n */\nclass Timestamp {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsTimestamp(bb, obj) {\n        return (obj || new Timestamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsTimestamp(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Timestamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    unit() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : time_unit_js_1.TimeUnit.SECOND;\n    }\n    timezone(optionalEncoding) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n    static startTimestamp(builder) {\n        builder.startObject(2);\n    }\n    static addUnit(builder, unit) {\n        builder.addFieldInt16(0, unit, time_unit_js_1.TimeUnit.SECOND);\n    }\n    static addTimezone(builder, timezoneOffset) {\n        builder.addFieldOffset(1, timezoneOffset, 0);\n    }\n    static endTimestamp(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createTimestamp(builder, unit, timezoneOffset) {\n        Timestamp.startTimestamp(builder);\n        Timestamp.addUnit(builder, unit);\n        Timestamp.addTimezone(builder, timezoneOffset);\n        return Timestamp.endTimestamp(builder);\n    }\n}\nexports.Timestamp = Timestamp;\n\n//# sourceMappingURL=timestamp.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/timestamp.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/type.js":
/*!**********************************************!*\
  !*** ./node_modules/apache-arrow/fb/type.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.unionListToType = exports.unionToType = exports.Type = void 0;\nconst binary_js_1 = __webpack_require__(/*! ./binary.js */ \"./node_modules/apache-arrow/fb/binary.js\");\nconst bool_js_1 = __webpack_require__(/*! ./bool.js */ \"./node_modules/apache-arrow/fb/bool.js\");\nconst date_js_1 = __webpack_require__(/*! ./date.js */ \"./node_modules/apache-arrow/fb/date.js\");\nconst decimal_js_1 = __webpack_require__(/*! ./decimal.js */ \"./node_modules/apache-arrow/fb/decimal.js\");\nconst duration_js_1 = __webpack_require__(/*! ./duration.js */ \"./node_modules/apache-arrow/fb/duration.js\");\nconst fixed_size_binary_js_1 = __webpack_require__(/*! ./fixed-size-binary.js */ \"./node_modules/apache-arrow/fb/fixed-size-binary.js\");\nconst fixed_size_list_js_1 = __webpack_require__(/*! ./fixed-size-list.js */ \"./node_modules/apache-arrow/fb/fixed-size-list.js\");\nconst floating_point_js_1 = __webpack_require__(/*! ./floating-point.js */ \"./node_modules/apache-arrow/fb/floating-point.js\");\nconst int_js_1 = __webpack_require__(/*! ./int.js */ \"./node_modules/apache-arrow/fb/int.js\");\nconst interval_js_1 = __webpack_require__(/*! ./interval.js */ \"./node_modules/apache-arrow/fb/interval.js\");\nconst large_binary_js_1 = __webpack_require__(/*! ./large-binary.js */ \"./node_modules/apache-arrow/fb/large-binary.js\");\nconst large_list_js_1 = __webpack_require__(/*! ./large-list.js */ \"./node_modules/apache-arrow/fb/large-list.js\");\nconst large_utf8_js_1 = __webpack_require__(/*! ./large-utf8.js */ \"./node_modules/apache-arrow/fb/large-utf8.js\");\nconst list_js_1 = __webpack_require__(/*! ./list.js */ \"./node_modules/apache-arrow/fb/list.js\");\nconst map_js_1 = __webpack_require__(/*! ./map.js */ \"./node_modules/apache-arrow/fb/map.js\");\nconst null_js_1 = __webpack_require__(/*! ./null.js */ \"./node_modules/apache-arrow/fb/null.js\");\nconst struct__js_1 = __webpack_require__(/*! ./struct_.js */ \"./node_modules/apache-arrow/fb/struct_.js\");\nconst time_js_1 = __webpack_require__(/*! ./time.js */ \"./node_modules/apache-arrow/fb/time.js\");\nconst timestamp_js_1 = __webpack_require__(/*! ./timestamp.js */ \"./node_modules/apache-arrow/fb/timestamp.js\");\nconst union_js_1 = __webpack_require__(/*! ./union.js */ \"./node_modules/apache-arrow/fb/union.js\");\nconst utf8_js_1 = __webpack_require__(/*! ./utf8.js */ \"./node_modules/apache-arrow/fb/utf8.js\");\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n */\nvar Type;\n(function (Type) {\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    Type[Type[\"FloatingPoint\"] = 3] = \"FloatingPoint\";\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    Type[Type[\"List\"] = 12] = \"List\";\n    Type[Type[\"Struct_\"] = 13] = \"Struct_\";\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    Type[Type[\"Duration\"] = 18] = \"Duration\";\n    Type[Type[\"LargeBinary\"] = 19] = \"LargeBinary\";\n    Type[Type[\"LargeUtf8\"] = 20] = \"LargeUtf8\";\n    Type[Type[\"LargeList\"] = 21] = \"LargeList\";\n})(Type = exports.Type || (exports.Type = {}));\nfunction unionToType(type, accessor) {\n    switch (Type[type]) {\n        case 'NONE': return null;\n        case 'Null': return accessor(new null_js_1.Null());\n        case 'Int': return accessor(new int_js_1.Int());\n        case 'FloatingPoint': return accessor(new floating_point_js_1.FloatingPoint());\n        case 'Binary': return accessor(new binary_js_1.Binary());\n        case 'Utf8': return accessor(new utf8_js_1.Utf8());\n        case 'Bool': return accessor(new bool_js_1.Bool());\n        case 'Decimal': return accessor(new decimal_js_1.Decimal());\n        case 'Date': return accessor(new date_js_1.Date());\n        case 'Time': return accessor(new time_js_1.Time());\n        case 'Timestamp': return accessor(new timestamp_js_1.Timestamp());\n        case 'Interval': return accessor(new interval_js_1.Interval());\n        case 'List': return accessor(new list_js_1.List());\n        case 'Struct_': return accessor(new struct__js_1.Struct_());\n        case 'Union': return accessor(new union_js_1.Union());\n        case 'FixedSizeBinary': return accessor(new fixed_size_binary_js_1.FixedSizeBinary());\n        case 'FixedSizeList': return accessor(new fixed_size_list_js_1.FixedSizeList());\n        case 'Map': return accessor(new map_js_1.Map());\n        case 'Duration': return accessor(new duration_js_1.Duration());\n        case 'LargeBinary': return accessor(new large_binary_js_1.LargeBinary());\n        case 'LargeUtf8': return accessor(new large_utf8_js_1.LargeUtf8());\n        case 'LargeList': return accessor(new large_list_js_1.LargeList());\n        default: return null;\n    }\n}\nexports.unionToType = unionToType;\nfunction unionListToType(type, accessor, index) {\n    switch (Type[type]) {\n        case 'NONE': return null;\n        case 'Null': return accessor(index, new null_js_1.Null());\n        case 'Int': return accessor(index, new int_js_1.Int());\n        case 'FloatingPoint': return accessor(index, new floating_point_js_1.FloatingPoint());\n        case 'Binary': return accessor(index, new binary_js_1.Binary());\n        case 'Utf8': return accessor(index, new utf8_js_1.Utf8());\n        case 'Bool': return accessor(index, new bool_js_1.Bool());\n        case 'Decimal': return accessor(index, new decimal_js_1.Decimal());\n        case 'Date': return accessor(index, new date_js_1.Date());\n        case 'Time': return accessor(index, new time_js_1.Time());\n        case 'Timestamp': return accessor(index, new timestamp_js_1.Timestamp());\n        case 'Interval': return accessor(index, new interval_js_1.Interval());\n        case 'List': return accessor(index, new list_js_1.List());\n        case 'Struct_': return accessor(index, new struct__js_1.Struct_());\n        case 'Union': return accessor(index, new union_js_1.Union());\n        case 'FixedSizeBinary': return accessor(index, new fixed_size_binary_js_1.FixedSizeBinary());\n        case 'FixedSizeList': return accessor(index, new fixed_size_list_js_1.FixedSizeList());\n        case 'Map': return accessor(index, new map_js_1.Map());\n        case 'Duration': return accessor(index, new duration_js_1.Duration());\n        case 'LargeBinary': return accessor(index, new large_binary_js_1.LargeBinary());\n        case 'LargeUtf8': return accessor(index, new large_utf8_js_1.LargeUtf8());\n        case 'LargeList': return accessor(index, new large_list_js_1.LargeList());\n        default: return null;\n    }\n}\nexports.unionListToType = unionListToType;\n\n//# sourceMappingURL=type.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/type.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/union-mode.js":
/*!****************************************************!*\
  !*** ./node_modules/apache-arrow/fb/union-mode.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UnionMode = void 0;\nvar UnionMode;\n(function (UnionMode) {\n    UnionMode[UnionMode[\"Sparse\"] = 0] = \"Sparse\";\n    UnionMode[UnionMode[\"Dense\"] = 1] = \"Dense\";\n})(UnionMode = exports.UnionMode || (exports.UnionMode = {}));\n\n//# sourceMappingURL=union-mode.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/union-mode.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/union.js":
/*!***********************************************!*\
  !*** ./node_modules/apache-arrow/fb/union.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Union = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst union_mode_js_1 = __webpack_require__(/*! ./union-mode.js */ \"./node_modules/apache-arrow/fb/union-mode.js\");\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child `typeIds[offset]` is the id used in the type vector\n */\nclass Union {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsUnion(bb, obj) {\n        return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsUnion(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    mode() {\n        const offset = this.bb.__offset(this.bb_pos, 4);\n        return offset ? this.bb.readInt16(this.bb_pos + offset) : union_mode_js_1.UnionMode.Sparse;\n    }\n    typeIds(index) {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n    typeIdsLength() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n    }\n    typeIdsArray() {\n        const offset = this.bb.__offset(this.bb_pos, 6);\n        return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n    }\n    static startUnion(builder) {\n        builder.startObject(2);\n    }\n    static addMode(builder, mode) {\n        builder.addFieldInt16(0, mode, union_mode_js_1.UnionMode.Sparse);\n    }\n    static addTypeIds(builder, typeIdsOffset) {\n        builder.addFieldOffset(1, typeIdsOffset, 0);\n    }\n    static createTypeIdsVector(builder, data) {\n        builder.startVector(4, data.length, 4);\n        for (let i = data.length - 1; i >= 0; i--) {\n            builder.addInt32(data[i]);\n        }\n        return builder.endVector();\n    }\n    static startTypeIdsVector(builder, numElems) {\n        builder.startVector(4, numElems, 4);\n    }\n    static endUnion(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createUnion(builder, mode, typeIdsOffset) {\n        Union.startUnion(builder);\n        Union.addMode(builder, mode);\n        Union.addTypeIds(builder, typeIdsOffset);\n        return Union.endUnion(builder);\n    }\n}\nexports.Union = Union;\n\n//# sourceMappingURL=union.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/union.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/fb/utf8.js":
/*!**********************************************!*\
  !*** ./node_modules/apache-arrow/fb/utf8.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// automatically generated by the FlatBuffers compiler, do not modify\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Utf8 = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\n/**\n * Unicode with UTF-8 encoding\n */\nclass Utf8 {\n    constructor() {\n        this.bb = null;\n        this.bb_pos = 0;\n    }\n    __init(i, bb) {\n        this.bb_pos = i;\n        this.bb = bb;\n        return this;\n    }\n    static getRootAsUtf8(bb, obj) {\n        return (obj || new Utf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static getSizePrefixedRootAsUtf8(bb, obj) {\n        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n        return (obj || new Utf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n    static startUtf8(builder) {\n        builder.startObject(0);\n    }\n    static endUtf8(builder) {\n        const offset = builder.endObject();\n        return offset;\n    }\n    static createUtf8(builder) {\n        Utf8.startUtf8(builder);\n        return Utf8.endUtf8(builder);\n    }\n}\nexports.Utf8 = Utf8;\n\n//# sourceMappingURL=utf8.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/fb/utf8.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/io/adapters.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/io/adapters.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst buffer_js_1 = __webpack_require__(/*! ../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\n/** @ignore */\nexports[\"default\"] = {\n    fromIterable(source) {\n        return pump(fromIterable(source));\n    },\n    fromAsyncIterable(source) {\n        return pump(fromAsyncIterable(source));\n    },\n    fromDOMStream(source) {\n        return pump(fromDOMStream(source));\n    },\n    fromNodeStream(stream) {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream(source, options) {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream(source, options) {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nfunction* fromIterable(source) {\n    let done, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return (0, buffer_js_1.joinUint8Arrays)(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = (0, buffer_js_1.joinUint8Arrays)(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield null);\n    // initialize the iterator\n    const it = (0, buffer_js_1.toUint8ArrayIterator)(source)[Symbol.iterator]();\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = Number.isNaN(size - bufferLength) ?\n                it.next() : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    }\n    finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return(null));\n    }\n    return null;\n}\n/** @ignore */\nfunction fromAsyncIterable(source) {\n    return tslib_1.__asyncGenerator(this, arguments, function* fromAsyncIterable_1() {\n        let done, threw = false;\n        let buffers = [], buffer;\n        let cmd, size, bufferLength = 0;\n        function byteRange() {\n            if (cmd === 'peek') {\n                return (0, buffer_js_1.joinUint8Arrays)(buffers, size)[0];\n            }\n            [buffer, buffers, bufferLength] = (0, buffer_js_1.joinUint8Arrays)(buffers, size);\n            return buffer;\n        }\n        // Yield so the caller can inject the read command before creating the source AsyncIterator\n        ({ cmd, size } = (yield yield tslib_1.__await(null)));\n        // initialize the iterator\n        const it = (0, buffer_js_1.toUint8ArrayAsyncIterator)(source)[Symbol.asyncIterator]();\n        try {\n            do {\n                // read the next value\n                ({ done, value: buffer } = Number.isNaN(size - bufferLength)\n                    ? yield tslib_1.__await(it.next())\n                    : yield tslib_1.__await(it.next(size - bufferLength)));\n                // if chunk is not null or empty, push it onto the queue\n                if (!done && buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n                // If we have enough bytes in our buffer, yield chunks until we don't\n                if (done || size <= bufferLength) {\n                    do {\n                        ({ cmd, size } = yield yield tslib_1.__await(byteRange()));\n                    } while (size < bufferLength);\n                }\n            } while (!done);\n        }\n        catch (e) {\n            (threw = true) && (typeof it.throw === 'function') && (yield tslib_1.__await(it.throw(e)));\n        }\n        finally {\n            (threw === false) && (typeof it.return === 'function') && (yield tslib_1.__await(it.return(new Uint8Array(0))));\n        }\n        return yield tslib_1.__await(null);\n    });\n}\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nfunction fromDOMStream(source) {\n    return tslib_1.__asyncGenerator(this, arguments, function* fromDOMStream_1() {\n        let done = false, threw = false;\n        let buffers = [], buffer;\n        let cmd, size, bufferLength = 0;\n        function byteRange() {\n            if (cmd === 'peek') {\n                return (0, buffer_js_1.joinUint8Arrays)(buffers, size)[0];\n            }\n            [buffer, buffers, bufferLength] = (0, buffer_js_1.joinUint8Arrays)(buffers, size);\n            return buffer;\n        }\n        // Yield so the caller can inject the read command before we establish the ReadableStream lock\n        ({ cmd, size } = yield yield tslib_1.__await(null));\n        // initialize the reader and lock the stream\n        const it = new AdaptiveByteReader(source);\n        try {\n            do {\n                // read the next value\n                ({ done, value: buffer } = Number.isNaN(size - bufferLength)\n                    ? yield tslib_1.__await(it['read']())\n                    : yield tslib_1.__await(it['read'](size - bufferLength)));\n                // if chunk is not null or empty, push it onto the queue\n                if (!done && buffer.byteLength > 0) {\n                    buffers.push((0, buffer_js_1.toUint8Array)(buffer));\n                    bufferLength += buffer.byteLength;\n                }\n                // If we have enough bytes in our buffer, yield chunks until we don't\n                if (done || size <= bufferLength) {\n                    do {\n                        ({ cmd, size } = yield yield tslib_1.__await(byteRange()));\n                    } while (size < bufferLength);\n                }\n            } while (!done);\n        }\n        catch (e) {\n            (threw = true) && (yield tslib_1.__await(it['cancel'](e)));\n        }\n        finally {\n            (threw === false) ? (yield tslib_1.__await(it['cancel']()))\n                : source['locked'] && it.releaseLock();\n        }\n        return yield tslib_1.__await(null);\n    });\n}\n/** @ignore */\nclass AdaptiveByteReader {\n    constructor(source) {\n        this.source = source;\n        this.reader = null;\n        this.reader = this.source['getReader']();\n        // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n        // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n        // about why these errors are raised, but I'm sure there's some important spec reason that\n        // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n        // only solution in this case :/\n        this.reader['closed'].catch(() => { });\n    }\n    get closed() {\n        return this.reader ? this.reader['closed'].catch(() => { }) : Promise.resolve();\n    }\n    releaseLock() {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = null;\n    }\n    cancel(reason) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const { reader, source } = this;\n            reader && (yield reader['cancel'](reason).catch(() => { }));\n            source && (source['locked'] && this.releaseLock());\n        });\n    }\n    read(size) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (size === 0) {\n                return { done: this.reader == null, value: new Uint8Array(0) };\n            }\n            const result = yield this.reader.read();\n            !result.done && (result.value = (0, buffer_js_1.toUint8Array)(result));\n            return result;\n        });\n    }\n}\n/** @ignore */\nconst onEvent = (stream, event) => {\n    const handler = (_) => resolve([event, _]);\n    let resolve;\n    return [event, handler, new Promise((r) => (resolve = r) && stream['once'](event, handler))];\n};\n/** @ignore */\nfunction fromNodeStream(stream) {\n    return tslib_1.__asyncGenerator(this, arguments, function* fromNodeStream_1() {\n        const events = [];\n        let event = 'error';\n        let done = false, err = null;\n        let cmd, size, bufferLength = 0;\n        let buffers = [], buffer;\n        function byteRange() {\n            if (cmd === 'peek') {\n                return (0, buffer_js_1.joinUint8Arrays)(buffers, size)[0];\n            }\n            [buffer, buffers, bufferLength] = (0, buffer_js_1.joinUint8Arrays)(buffers, size);\n            return buffer;\n        }\n        // Yield so the caller can inject the read command before we\n        // add the listener for the source stream's 'readable' event.\n        ({ cmd, size } = yield yield tslib_1.__await(null));\n        // ignore stdin if it's a TTY\n        if (stream['isTTY']) {\n            yield yield tslib_1.__await(new Uint8Array(0));\n            return yield tslib_1.__await(null);\n        }\n        try {\n            // initialize the stream event handlers\n            events[0] = onEvent(stream, 'end');\n            events[1] = onEvent(stream, 'error');\n            do {\n                events[2] = onEvent(stream, 'readable');\n                // wait on the first message event from the stream\n                [event, err] = yield tslib_1.__await(Promise.race(events.map((x) => x[2])));\n                // if the stream emitted an Error, rethrow it\n                if (event === 'error') {\n                    break;\n                }\n                if (!(done = event === 'end')) {\n                    // If the size is NaN, request to read everything in the stream's internal buffer\n                    if (!Number.isFinite(size - bufferLength)) {\n                        buffer = (0, buffer_js_1.toUint8Array)(stream['read']());\n                    }\n                    else {\n                        buffer = (0, buffer_js_1.toUint8Array)(stream['read'](size - bufferLength));\n                        // If the byteLength is 0, then the requested amount is more than the stream has\n                        // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                        // continue emitting readable events, so request to read everything the stream\n                        // has in its internal buffer right now.\n                        if (buffer.byteLength < (size - bufferLength)) {\n                            buffer = (0, buffer_js_1.toUint8Array)(stream['read']());\n                        }\n                    }\n                    // if chunk is not null or empty, push it onto the queue\n                    if (buffer.byteLength > 0) {\n                        buffers.push(buffer);\n                        bufferLength += buffer.byteLength;\n                    }\n                }\n                // If we have enough bytes in our buffer, yield chunks until we don't\n                if (done || size <= bufferLength) {\n                    do {\n                        ({ cmd, size } = yield yield tslib_1.__await(byteRange()));\n                    } while (size < bufferLength);\n                }\n            } while (!done);\n        }\n        finally {\n            yield tslib_1.__await(cleanup(events, event === 'error' ? err : null));\n        }\n        return yield tslib_1.__await(null);\n        function cleanup(events, err) {\n            buffer = buffers = null;\n            return new Promise((resolve, reject) => {\n                for (const [evt, fn] of events) {\n                    stream['off'](evt, fn);\n                }\n                try {\n                    // Some stream implementations don't call the destroy callback,\n                    // because it's really a node-internal API. Just calling `destroy`\n                    // here should be enough to conform to the ReadableStream contract\n                    const destroy = stream['destroy'];\n                    destroy && destroy.call(stream, err);\n                    err = undefined;\n                }\n                catch (e) {\n                    err = e || err;\n                }\n                finally {\n                    err != null ? reject(err) : resolve();\n                }\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=adapters.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/io/adapters.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/io/file.js":
/*!**********************************************!*\
  !*** ./node_modules/apache-arrow/io/file.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AsyncRandomAccessFile = exports.RandomAccessFile = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst stream_js_1 = __webpack_require__(/*! ./stream.js */ \"./node_modules/apache-arrow/io/stream.js\");\nconst buffer_js_1 = __webpack_require__(/*! ../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\n/** @ignore */\nclass RandomAccessFile extends stream_js_1.ByteStream {\n    constructor(buffer, byteLength) {\n        super();\n        this.position = 0;\n        this.buffer = (0, buffer_js_1.toUint8Array)(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    readInt32(position) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    seek(position) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    read(nBytes) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') {\n                nBytes = Number.POSITIVE_INFINITY;\n            }\n            this.position = Math.min(size, position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    readAt(position, nBytes) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    close() { this.buffer && (this.buffer = null); }\n    throw(value) { this.close(); return { done: true, value }; }\n    return(value) { this.close(); return { done: true, value }; }\n}\nexports.RandomAccessFile = RandomAccessFile;\n/** @ignore */\nclass AsyncRandomAccessFile extends stream_js_1.AsyncByteStream {\n    constructor(file, byteLength) {\n        super();\n        this.position = 0;\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        }\n        else {\n            this._pending = (() => tslib_1.__awaiter(this, void 0, void 0, function* () {\n                this.size = (yield file.stat()).size;\n                delete this._pending;\n            }))();\n        }\n    }\n    readInt32(position) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const { buffer, byteOffset } = yield this.readAt(position, 4);\n            return new DataView(buffer, byteOffset).getInt32(0, true);\n        });\n    }\n    seek(position) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this._pending && (yield this._pending);\n            this.position = Math.min(position, this.size);\n            return position < this.size;\n        });\n    }\n    read(nBytes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this._pending && (yield this._pending);\n            const { _handle: file, size, position } = this;\n            if (file && position < size) {\n                if (typeof nBytes !== 'number') {\n                    nBytes = Number.POSITIVE_INFINITY;\n                }\n                let pos = position, offset = 0, bytesRead = 0;\n                const end = Math.min(size, pos + Math.min(size - pos, nBytes));\n                const buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n                while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                    ({ bytesRead } = yield file.read(buffer, offset, buffer.byteLength - offset, pos));\n                }\n                return buffer;\n            }\n            return null;\n        });\n    }\n    readAt(position, nBytes) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this._pending && (yield this._pending);\n            const { _handle: file, size } = this;\n            if (file && (position + nBytes) < size) {\n                const end = Math.min(size, position + nBytes);\n                const buffer = new Uint8Array(end - position);\n                return (yield file.read(buffer, 0, nBytes, position)).buffer;\n            }\n            return new Uint8Array(nBytes);\n        });\n    }\n    close() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { const f = this._handle; this._handle = null; f && (yield f.close()); });\n    }\n    throw(value) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { yield this.close(); return { done: true, value }; });\n    }\n    return(value) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { yield this.close(); return { done: true, value }; });\n    }\n}\nexports.AsyncRandomAccessFile = AsyncRandomAccessFile;\n\n//# sourceMappingURL=file.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/io/file.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/io/interfaces.js":
/*!****************************************************!*\
  !*** ./node_modules/apache-arrow/io/interfaces.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AsyncQueue = exports.ReadableInterop = exports.ArrowJSON = exports.ITERATOR_DONE = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst adapters_js_1 = tslib_1.__importDefault(__webpack_require__(/*! ./adapters.js */ \"./node_modules/apache-arrow/io/adapters.js\"));\n/** @ignore */\nexports.ITERATOR_DONE = Object.freeze({ done: true, value: void (0) });\n/** @ignore */\nclass ArrowJSON {\n    constructor(_json) {\n        this._json = _json;\n    }\n    get schema() { return this._json['schema']; }\n    get batches() { return (this._json['batches'] || []); }\n    get dictionaries() { return (this._json['dictionaries'] || []); }\n}\nexports.ArrowJSON = ArrowJSON;\n/** @ignore */\nclass ReadableInterop {\n    tee() {\n        return this._getDOMStream().tee();\n    }\n    pipe(writable, options) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    pipeTo(writable, options) { return this._getDOMStream().pipeTo(writable, options); }\n    pipeThrough(duplex, options) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n    _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n    _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\nexports.ReadableInterop = ReadableInterop;\n/** @ignore */\nclass AsyncQueue extends ReadableInterop {\n    constructor() {\n        super();\n        this._values = [];\n        this.resolvers = [];\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    get closed() { return this._closedPromise; }\n    cancel(reason) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { yield this.return(reason); });\n    }\n    write(value) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift().resolve({ done: false, value }));\n        }\n    }\n    abort(value) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift().reject({ done: true, value }));\n        }\n    }\n    close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift().resolve(exports.ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    toDOMStream(options) {\n        return adapters_js_1.default.toDOMStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    toNodeStream(options) {\n        return adapters_js_1.default.toNodeStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    throw(_) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { yield this.abort(_); return exports.ITERATOR_DONE; });\n    }\n    return(_) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { yield this.close(); return exports.ITERATOR_DONE; });\n    }\n    read(size) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { return (yield this.next(size, 'read')).value; });\n    }\n    peek(size) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { return (yield this.next(size, 'peek')).value; });\n    }\n    next(..._args) {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift() });\n        }\n        else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        }\n        else if (!this._closedPromiseResolve) {\n            return Promise.resolve(exports.ITERATOR_DONE);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n    _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`AsyncQueue is closed`);\n    }\n}\nexports.AsyncQueue = AsyncQueue;\n\n//# sourceMappingURL=interfaces.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/io/interfaces.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/io/stream.js":
/*!************************************************!*\
  !*** ./node_modules/apache-arrow/io/stream.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AsyncByteStream = exports.ByteStream = exports.AsyncByteQueue = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst adapters_js_1 = tslib_1.__importDefault(__webpack_require__(/*! ./adapters.js */ \"./node_modules/apache-arrow/io/adapters.js\"));\nconst utf8_js_1 = __webpack_require__(/*! ../util/utf8.js */ \"./node_modules/apache-arrow/util/utf8.js\");\nconst interfaces_js_1 = __webpack_require__(/*! ./interfaces.js */ \"./node_modules/apache-arrow/io/interfaces.js\");\nconst buffer_js_1 = __webpack_require__(/*! ../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\nconst compat_js_1 = __webpack_require__(/*! ../util/compat.js */ \"./node_modules/apache-arrow/util/compat.js\");\n/** @ignore */\nclass AsyncByteQueue extends interfaces_js_1.AsyncQueue {\n    write(value) {\n        if ((value = (0, buffer_js_1.toUint8Array)(value)).byteLength > 0) {\n            return super.write(value);\n        }\n    }\n    toString(sync = false) {\n        return sync\n            ? (0, utf8_js_1.decodeUtf8)(this.toUint8Array(true))\n            : this.toUint8Array(false).then(utf8_js_1.decodeUtf8);\n    }\n    toUint8Array(sync = false) {\n        return sync ? (0, buffer_js_1.joinUint8Arrays)(this._values)[0] : (() => tslib_1.__awaiter(this, void 0, void 0, function* () {\n            var e_1, _a;\n            const buffers = [];\n            let byteLength = 0;\n            try {\n                for (var _b = tslib_1.__asyncValues(this), _c; _c = yield _b.next(), !_c.done;) {\n                    const chunk = _c.value;\n                    buffers.push(chunk);\n                    byteLength += chunk.byteLength;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return (0, buffer_js_1.joinUint8Arrays)(buffers, byteLength)[0];\n        }))();\n    }\n}\nexports.AsyncByteQueue = AsyncByteQueue;\n/** @ignore */\nclass ByteStream {\n    constructor(source) {\n        if (source) {\n            this.source = new ByteStreamSource(adapters_js_1.default.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\nexports.ByteStream = ByteStream;\n/** @ignore */\nclass AsyncByteStream {\n    constructor(source) {\n        if (source instanceof AsyncByteStream) {\n            this.source = source.source;\n        }\n        else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(adapters_js_1.default.fromAsyncIterable(source));\n        }\n        else if ((0, compat_js_1.isReadableNodeStream)(source)) {\n            this.source = new AsyncByteStreamSource(adapters_js_1.default.fromNodeStream(source));\n        }\n        else if ((0, compat_js_1.isReadableDOMStream)(source)) {\n            this.source = new AsyncByteStreamSource(adapters_js_1.default.fromDOMStream(source));\n        }\n        else if ((0, compat_js_1.isFetchResponse)(source)) {\n            this.source = new AsyncByteStreamSource(adapters_js_1.default.fromDOMStream(source.body));\n        }\n        else if ((0, compat_js_1.isIterable)(source)) {\n            this.source = new AsyncByteStreamSource(adapters_js_1.default.fromIterable(source));\n        }\n        else if ((0, compat_js_1.isPromise)(source)) {\n            this.source = new AsyncByteStreamSource(adapters_js_1.default.fromAsyncIterable(source));\n        }\n        else if ((0, compat_js_1.isAsyncIterable)(source)) {\n            this.source = new AsyncByteStreamSource(adapters_js_1.default.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    get closed() { return this.source.closed; }\n    cancel(reason) { return this.source.cancel(reason); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\nexports.AsyncByteStream = AsyncByteStream;\n/** @ignore */\nclass ByteStreamSource {\n    constructor(source) {\n        this.source = source;\n    }\n    cancel(reason) { this.return(reason); }\n    peek(size) { return this.next(size, 'peek').value; }\n    read(size) { return this.next(size, 'read').value; }\n    next(size, cmd = 'read') { return this.source.next({ cmd, size }); }\n    throw(value) { return Object.create((this.source.throw && this.source.throw(value)) || interfaces_js_1.ITERATOR_DONE); }\n    return(value) { return Object.create((this.source.return && this.source.return(value)) || interfaces_js_1.ITERATOR_DONE); }\n}\n/** @ignore */\nclass AsyncByteStreamSource {\n    constructor(source) {\n        this.source = source;\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    cancel(reason) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { yield this.return(reason); });\n    }\n    get closed() { return this._closedPromise; }\n    read(size) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { return (yield this.next(size, 'read')).value; });\n    }\n    peek(size) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { return (yield this.next(size, 'peek')).value; });\n    }\n    next(size, cmd = 'read') {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { return (yield this.source.next({ cmd, size })); });\n    }\n    throw(value) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const result = (this.source.throw && (yield this.source.throw(value))) || interfaces_js_1.ITERATOR_DONE;\n            this._closedPromiseResolve && this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n            return Object.create(result);\n        });\n    }\n    return(value) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const result = (this.source.return && (yield this.source.return(value))) || interfaces_js_1.ITERATOR_DONE;\n            this._closedPromiseResolve && this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n            return Object.create(result);\n        });\n    }\n}\n\n//# sourceMappingURL=stream.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/io/stream.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/io/whatwg/builder.js":
/*!********************************************************!*\
  !*** ./node_modules/apache-arrow/io/whatwg/builder.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BuilderTransform = exports.builderThroughDOMStream = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst factories_js_1 = __webpack_require__(/*! ../../factories.js */ \"./node_modules/apache-arrow/factories.js\");\n/** @ignore */\nfunction builderThroughDOMStream(options) {\n    return new BuilderTransform(options);\n}\nexports.builderThroughDOMStream = builderThroughDOMStream;\n/** @ignore */\nclass BuilderTransform {\n    constructor(options) {\n        // Access properties by string indexers to defeat closure compiler\n        this._numChunks = 0;\n        this._finished = false;\n        this._bufferedSize = 0;\n        const { ['readableStrategy']: readableStrategy, ['writableStrategy']: writableStrategy, ['queueingStrategy']: queueingStrategy = 'count' } = options, builderOptions = tslib_1.__rest(options, ['readableStrategy', 'writableStrategy', 'queueingStrategy']);\n        this._controller = null;\n        this._builder = (0, factories_js_1.makeBuilder)(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? Math.pow(2, 14) : 1000 } = Object.assign({}, readableStrategy);\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? Math.pow(2, 14) : 1000 } = Object.assign({}, writableStrategy);\n        this['readable'] = new ReadableStream({\n            ['cancel']: () => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n    _writeValueAndReturnChunkSize(value) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n    _maybeFlush(builder, controller) {\n        if (controller == null) {\n            return;\n        }\n        if (this._bufferedSize >= controller.desiredSize) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n    _enqueue(controller, chunk) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk == null ? controller.close() : controller.enqueue(chunk);\n    }\n}\nexports.BuilderTransform = BuilderTransform;\n/** @ignore */ const chunkLength = (chunk) => { var _a; return (_a = chunk === null || chunk === void 0 ? void 0 : chunk.length) !== null && _a !== void 0 ? _a : 0; };\n/** @ignore */ const chunkByteLength = (chunk) => { var _a; return (_a = chunk === null || chunk === void 0 ? void 0 : chunk.byteLength) !== null && _a !== void 0 ? _a : 0; };\n\n//# sourceMappingURL=builder.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/io/whatwg/builder.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/io/whatwg/iterable.js":
/*!*********************************************************!*\
  !*** ./node_modules/apache-arrow/io/whatwg/iterable.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toDOMStream = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst buffer_js_1 = __webpack_require__(/*! ../../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\nconst compat_js_1 = __webpack_require__(/*! ../../util/compat.js */ \"./node_modules/apache-arrow/util/compat.js\");\n/** @ignore */\nfunction toDOMStream(source, options) {\n    if ((0, compat_js_1.isAsyncIterable)(source)) {\n        return asyncIterableAsReadableDOMStream(source, options);\n    }\n    if ((0, compat_js_1.isIterable)(source)) {\n        return iterableAsReadableDOMStream(source, options);\n    }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\nexports.toDOMStream = toDOMStream;\n/** @ignore */\nfunction iterableAsReadableDOMStream(source, options) {\n    let it = null;\n    const bm = ((options === null || options === void 0 ? void 0 : options.type) === 'bytes') || false;\n    const hwm = (options === null || options === void 0 ? void 0 : options.highWaterMark) || (Math.pow(2, 24));\n    return new ReadableStream(Object.assign(Object.assign({}, options), { start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { ((it === null || it === void 0 ? void 0 : it.return) && it.return() || true) && (it = null); } }), Object.assign({ highWaterMark: bm ? hwm : undefined }, options));\n    function next(controller, it) {\n        let buf;\n        let r = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = (0, buffer_js_1.toUint8Array)(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream(source, options) {\n    let it = null;\n    const bm = ((options === null || options === void 0 ? void 0 : options.type) === 'bytes') || false;\n    const hwm = (options === null || options === void 0 ? void 0 : options.highWaterMark) || (Math.pow(2, 24));\n    return new ReadableStream(Object.assign(Object.assign({}, options), { start(controller) {\n            return tslib_1.__awaiter(this, void 0, void 0, function* () { yield next(controller, it || (it = source[Symbol.asyncIterator]())); });\n        },\n        pull(controller) {\n            return tslib_1.__awaiter(this, void 0, void 0, function* () { it ? (yield next(controller, it)) : controller.close(); });\n        },\n        cancel() {\n            return tslib_1.__awaiter(this, void 0, void 0, function* () { ((it === null || it === void 0 ? void 0 : it.return) && (yield it.return()) || true) && (it = null); });\n        } }), Object.assign({ highWaterMark: bm ? hwm : undefined }, options));\n    function next(controller, it) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            let buf;\n            let r = null;\n            let size = controller.desiredSize || null;\n            while (!(r = yield it.next(bm ? size : null)).done) {\n                if (ArrayBuffer.isView(r.value) && (buf = (0, buffer_js_1.toUint8Array)(r.value))) {\n                    size != null && bm && (size = size - buf.byteLength + 1);\n                    r.value = buf;\n                }\n                controller.enqueue(r.value);\n                if (size != null && --size <= 0) {\n                    return;\n                }\n            }\n            controller.close();\n        });\n    }\n}\n\n//# sourceMappingURL=iterable.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/io/whatwg/iterable.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/io/whatwg/reader.js":
/*!*******************************************************!*\
  !*** ./node_modules/apache-arrow/io/whatwg/reader.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.recordBatchReaderThroughDOMStream = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst stream_js_1 = __webpack_require__(/*! ../../io/stream.js */ \"./node_modules/apache-arrow/io/stream.js\");\nconst reader_js_1 = __webpack_require__(/*! ../../ipc/reader.js */ \"./node_modules/apache-arrow/ipc/reader.js\");\n/** @ignore */\nfunction recordBatchReaderThroughDOMStream(writableStrategy, readableStrategy) {\n    const queue = new stream_js_1.AsyncByteQueue();\n    let reader = null;\n    const readable = new ReadableStream({\n        cancel() {\n            return tslib_1.__awaiter(this, void 0, void 0, function* () { yield queue.close(); });\n        },\n        start(controller) {\n            return tslib_1.__awaiter(this, void 0, void 0, function* () { yield next(controller, reader || (reader = yield open())); });\n        },\n        pull(controller) {\n            return tslib_1.__awaiter(this, void 0, void 0, function* () { reader ? yield next(controller, reader) : controller.close(); });\n        }\n    });\n    return { writable: new WritableStream(queue, Object.assign({ 'highWaterMark': Math.pow(2, 14) }, writableStrategy)), readable };\n    function open() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return yield (yield reader_js_1.RecordBatchReader.from(queue)).open(readableStrategy);\n        });\n    }\n    function next(controller, reader) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            let size = controller.desiredSize;\n            let r = null;\n            while (!(r = yield reader.next()).done) {\n                controller.enqueue(r.value);\n                if (size != null && --size <= 0) {\n                    return;\n                }\n            }\n            controller.close();\n        });\n    }\n}\nexports.recordBatchReaderThroughDOMStream = recordBatchReaderThroughDOMStream;\n\n//# sourceMappingURL=reader.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/io/whatwg/reader.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/io/whatwg/writer.js":
/*!*******************************************************!*\
  !*** ./node_modules/apache-arrow/io/whatwg/writer.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.recordBatchWriterThroughDOMStream = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst stream_js_1 = __webpack_require__(/*! ../../io/stream.js */ \"./node_modules/apache-arrow/io/stream.js\");\n/** @ignore */\nfunction recordBatchWriterThroughDOMStream(writableStrategy, readableStrategy) {\n    const writer = new this(writableStrategy);\n    const reader = new stream_js_1.AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        // type: 'bytes',\n        cancel() {\n            return tslib_1.__awaiter(this, void 0, void 0, function* () { yield reader.cancel(); });\n        },\n        pull(controller) {\n            return tslib_1.__awaiter(this, void 0, void 0, function* () { yield next(controller); });\n        },\n        start(controller) {\n            return tslib_1.__awaiter(this, void 0, void 0, function* () { yield next(controller); });\n        },\n    }, Object.assign({ 'highWaterMark': Math.pow(2, 14) }, readableStrategy));\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n    function next(controller) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            let buf = null;\n            let size = controller.desiredSize;\n            while (buf = yield reader.read(size || null)) {\n                controller.enqueue(buf);\n                if (size != null && (size -= buf.byteLength) <= 0) {\n                    return;\n                }\n            }\n            controller.close();\n        });\n    }\n}\nexports.recordBatchWriterThroughDOMStream = recordBatchWriterThroughDOMStream;\n\n//# sourceMappingURL=writer.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/io/whatwg/writer.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/ipc/message.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/ipc/message.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.magicX2AndPadding = exports.magicAndPadding = exports.magicLength = exports.checkForMagicArrowString = exports.MAGIC = exports.MAGIC_STR = exports.PADDING = exports.JSONMessageReader = exports.AsyncMessageReader = exports.MessageReader = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst enum_js_1 = __webpack_require__(/*! ../enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst flatbuffers_1 = __webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\");\nconst message_js_1 = __webpack_require__(/*! ./metadata/message.js */ \"./node_modules/apache-arrow/ipc/metadata/message.js\");\nconst compat_js_1 = __webpack_require__(/*! ../util/compat.js */ \"./node_modules/apache-arrow/util/compat.js\");\nconst file_js_1 = __webpack_require__(/*! ../io/file.js */ \"./node_modules/apache-arrow/io/file.js\");\nconst buffer_js_1 = __webpack_require__(/*! ../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\nconst stream_js_1 = __webpack_require__(/*! ../io/stream.js */ \"./node_modules/apache-arrow/io/stream.js\");\nconst interfaces_js_1 = __webpack_require__(/*! ../io/interfaces.js */ \"./node_modules/apache-arrow/io/interfaces.js\");\n/** @ignore */ const invalidMessageType = (type) => `Expected ${enum_js_1.MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage = (type) => `Header pointer of flatbuffer-encoded ${enum_js_1.MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata = (expected, actual) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected, actual) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n/** @ignore */\nclass MessageReader {\n    constructor(source) {\n        this.source = source instanceof stream_js_1.ByteStream ? source : new stream_js_1.ByteStream(source);\n    }\n    [Symbol.iterator]() { return this; }\n    next() {\n        let r;\n        if ((r = this.readMetadataLength()).done) {\n            return interfaces_js_1.ITERATOR_DONE;\n        }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) {\n            return interfaces_js_1.ITERATOR_DONE;\n        }\n        if ((r = this.readMetadata(r.value)).done) {\n            return interfaces_js_1.ITERATOR_DONE;\n        }\n        return r;\n    }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readMessageBody(bodyLength) {\n        if (bodyLength <= 0) {\n            return new Uint8Array(0);\n        }\n        const buf = (0, buffer_js_1.toUint8Array)(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n            /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    readSchema(throwIfNull = false) {\n        const type = enum_js_1.MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message === null || message === void 0 ? void 0 : message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    readMetadataLength() {\n        const buf = this.source.read(exports.PADDING);\n        const bb = buf && new flatbuffers_1.ByteBuffer(buf);\n        const len = (bb === null || bb === void 0 ? void 0 : bb.readInt32(0)) || 0;\n        return { done: len === 0, value: len };\n    }\n    readMetadata(metadataLength) {\n        const buf = this.source.read(metadataLength);\n        if (!buf) {\n            return interfaces_js_1.ITERATOR_DONE;\n        }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: message_js_1.Message.decode(buf) };\n    }\n}\nexports.MessageReader = MessageReader;\n/** @ignore */\nclass AsyncMessageReader {\n    constructor(source, byteLength) {\n        this.source = source instanceof stream_js_1.AsyncByteStream ? source\n            : (0, compat_js_1.isFileHandle)(source)\n                ? new file_js_1.AsyncRandomAccessFile(source, byteLength)\n                : new stream_js_1.AsyncByteStream(source);\n    }\n    [Symbol.asyncIterator]() { return this; }\n    next() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            let r;\n            if ((r = yield this.readMetadataLength()).done) {\n                return interfaces_js_1.ITERATOR_DONE;\n            }\n            // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n            // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n            // pre-v0.15 message, where the first 4 bytes are the metadata length.\n            if ((r.value === -1) &&\n                (r = yield this.readMetadataLength()).done) {\n                return interfaces_js_1.ITERATOR_DONE;\n            }\n            if ((r = yield this.readMetadata(r.value)).done) {\n                return interfaces_js_1.ITERATOR_DONE;\n            }\n            return r;\n        });\n    }\n    throw(value) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { return yield this.source.throw(value); });\n    }\n    return(value) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () { return yield this.source.return(value); });\n    }\n    readMessage(type) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            let r;\n            if ((r = yield this.next()).done) {\n                return null;\n            }\n            if ((type != null) && r.value.headerType !== type) {\n                throw new Error(invalidMessageType(type));\n            }\n            return r.value;\n        });\n    }\n    readMessageBody(bodyLength) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (bodyLength <= 0) {\n                return new Uint8Array(0);\n            }\n            const buf = (0, buffer_js_1.toUint8Array)(yield this.source.read(bodyLength));\n            if (buf.byteLength < bodyLength) {\n                throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n            }\n            // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n            // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n            return /* 1. */ (buf.byteOffset % 8 === 0) &&\n                /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n        });\n    }\n    readSchema(throwIfNull = false) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const type = enum_js_1.MessageHeader.Schema;\n            const message = yield this.readMessage(type);\n            const schema = message === null || message === void 0 ? void 0 : message.header();\n            if (throwIfNull && !schema) {\n                throw new Error(nullMessage(type));\n            }\n            return schema;\n        });\n    }\n    readMetadataLength() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const buf = yield this.source.read(exports.PADDING);\n            const bb = buf && new flatbuffers_1.ByteBuffer(buf);\n            const len = (bb === null || bb === void 0 ? void 0 : bb.readInt32(0)) || 0;\n            return { done: len === 0, value: len };\n        });\n    }\n    readMetadata(metadataLength) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const buf = yield this.source.read(metadataLength);\n            if (!buf) {\n                return interfaces_js_1.ITERATOR_DONE;\n            }\n            if (buf.byteLength < metadataLength) {\n                throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n            }\n            return { done: false, value: message_js_1.Message.decode(buf) };\n        });\n    }\n}\nexports.AsyncMessageReader = AsyncMessageReader;\n/** @ignore */\nclass JSONMessageReader extends MessageReader {\n    constructor(source) {\n        super(new Uint8Array(0));\n        this._schema = false;\n        this._body = [];\n        this._batchIndex = 0;\n        this._dictionaryIndex = 0;\n        this._json = source instanceof interfaces_js_1.ArrowJSON ? source : new interfaces_js_1.ArrowJSON(source);\n    }\n    next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = message_js_1.Message.fromJSON(_json.schema, enum_js_1.MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = message_js_1.Message.fromJSON(batch, enum_js_1.MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = message_js_1.Message.fromJSON(batch, enum_js_1.MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return interfaces_js_1.ITERATOR_DONE;\n    }\n    readMessageBody(_bodyLength) {\n        return flattenDataSources(this._body);\n        function flattenDataSources(xs) {\n            return (xs || []).reduce((buffers, column) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], []);\n        }\n    }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readSchema() {\n        const type = enum_js_1.MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message === null || message === void 0 ? void 0 : message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\nexports.JSONMessageReader = JSONMessageReader;\n/** @ignore */\nexports.PADDING = 4;\n/** @ignore */\nexports.MAGIC_STR = 'ARROW1';\n/** @ignore */\nexports.MAGIC = new Uint8Array(exports.MAGIC_STR.length);\nfor (let i = 0; i < exports.MAGIC_STR.length; i += 1) {\n    exports.MAGIC[i] = exports.MAGIC_STR.codePointAt(i);\n}\n/** @ignore */\nfunction checkForMagicArrowString(buffer, index = 0) {\n    for (let i = -1, n = exports.MAGIC.length; ++i < n;) {\n        if (exports.MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.checkForMagicArrowString = checkForMagicArrowString;\n/** @ignore */\nexports.magicLength = exports.MAGIC.length;\n/** @ignore */\nexports.magicAndPadding = exports.magicLength + exports.PADDING;\n/** @ignore */\nexports.magicX2AndPadding = exports.magicLength * 2 + exports.PADDING;\n\n//# sourceMappingURL=message.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/ipc/message.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/ipc/metadata/file.js":
/*!********************************************************!*\
  !*** ./node_modules/apache-arrow/ipc/metadata/file.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FileBlock = exports.Footer = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* eslint-disable @typescript-eslint/naming-convention */\nconst block_js_1 = __webpack_require__(/*! ../../fb/block.js */ \"./node_modules/apache-arrow/fb/block.js\");\nconst footer_js_1 = __webpack_require__(/*! ../../fb/footer.js */ \"./node_modules/apache-arrow/fb/footer.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nconst schema_js_1 = __webpack_require__(/*! ../../schema.js */ \"./node_modules/apache-arrow/schema.js\");\nconst enum_js_1 = __webpack_require__(/*! ../../enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst buffer_js_1 = __webpack_require__(/*! ../../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\n/** @ignore */\nclass Footer_ {\n    constructor(schema, version = enum_js_1.MetadataVersion.V4, recordBatches, dictionaryBatches) {\n        this.schema = schema;\n        this.version = version;\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer((0, buffer_js_1.toUint8Array)(buf));\n        const footer = footer_js_1.Footer.getRootAsFooter(buf);\n        const schema = schema_js_1.Schema.decode(footer.schema());\n        return new OffHeapFooter(schema, footer);\n    }\n    /** @nocollapse */\n    static encode(footer) {\n        const b = new Builder();\n        const schemaOffset = schema_js_1.Schema.encode(b, footer.schema);\n        footer_js_1.Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        for (const rb of [...footer.recordBatches()].slice().reverse()) {\n            FileBlock.encode(b, rb);\n        }\n        const recordBatchesOffset = b.endVector();\n        footer_js_1.Footer.startDictionariesVector(b, footer.numDictionaries);\n        for (const db of [...footer.dictionaryBatches()].slice().reverse()) {\n            FileBlock.encode(b, db);\n        }\n        const dictionaryBatchesOffset = b.endVector();\n        footer_js_1.Footer.startFooter(b);\n        footer_js_1.Footer.addSchema(b, schemaOffset);\n        footer_js_1.Footer.addVersion(b, enum_js_1.MetadataVersion.V4);\n        footer_js_1.Footer.addRecordBatches(b, recordBatchesOffset);\n        footer_js_1.Footer.addDictionaries(b, dictionaryBatchesOffset);\n        footer_js_1.Footer.finishFooterBuffer(b, footer_js_1.Footer.endFooter(b));\n        return b.asUint8Array();\n    }\n    get numRecordBatches() { return this._recordBatches.length; }\n    get numDictionaries() { return this._dictionaryBatches.length; }\n    *recordBatches() {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    *dictionaryBatches() {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    getRecordBatch(index) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n    getDictionaryBatch(index) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\nexports.Footer = Footer_;\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n    constructor(schema, _footer) {\n        super(schema, _footer.version());\n        this._footer = _footer;\n    }\n    get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    get numDictionaries() { return this._footer.dictionariesLength(); }\n    getRecordBatch(index) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n    getDictionaryBatch(index) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass FileBlock {\n    constructor(metaDataLength, bodyLength, offset) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n    /** @nocollapse */\n    static decode(block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n    /** @nocollapse */\n    static encode(b, fileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return block_js_1.Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n}\nexports.FileBlock = FileBlock;\n\n//# sourceMappingURL=file.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/ipc/metadata/file.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/ipc/metadata/json.js":
/*!********************************************************!*\
  !*** ./node_modules/apache-arrow/ipc/metadata/json.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fieldFromJSON = exports.dictionaryBatchFromJSON = exports.recordBatchFromJSON = exports.schemaFromJSON = void 0;\n/* eslint-disable brace-style */\nconst schema_js_1 = __webpack_require__(/*! ../../schema.js */ \"./node_modules/apache-arrow/schema.js\");\nconst type_js_1 = __webpack_require__(/*! ../../type.js */ \"./node_modules/apache-arrow/type.js\");\nconst message_js_1 = __webpack_require__(/*! ./message.js */ \"./node_modules/apache-arrow/ipc/metadata/message.js\");\nconst enum_js_1 = __webpack_require__(/*! ../../enum.js */ \"./node_modules/apache-arrow/enum.js\");\n/** @ignore */\nfunction schemaFromJSON(_schema, dictionaries = new Map()) {\n    return new schema_js_1.Schema(schemaFieldsFromJSON(_schema, dictionaries), customMetadataFromJSON(_schema['customMetadata']), dictionaries);\n}\nexports.schemaFromJSON = schemaFromJSON;\n/** @ignore */\nfunction recordBatchFromJSON(b) {\n    return new message_js_1.RecordBatch(b['count'], fieldNodesFromJSON(b['columns']), buffersFromJSON(b['columns']));\n}\nexports.recordBatchFromJSON = recordBatchFromJSON;\n/** @ignore */\nfunction dictionaryBatchFromJSON(b) {\n    return new message_js_1.DictionaryBatch(recordBatchFromJSON(b['data']), b['id'], b['isDelta']);\n}\nexports.dictionaryBatchFromJSON = dictionaryBatchFromJSON;\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema, dictionaries) {\n    return (_schema['fields'] || []).filter(Boolean).map((f) => schema_js_1.Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldChildrenFromJSON(_field, dictionaries) {\n    return (_field['children'] || []).filter(Boolean).map((f) => schema_js_1.Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldNodesFromJSON(xs) {\n    return (xs || []).reduce((fieldNodes, column) => [\n        ...fieldNodes,\n        new message_js_1.FieldNode(column['count'], nullCountFromJSON(column['VALIDITY'])),\n        ...fieldNodesFromJSON(column['children'])\n    ], []);\n}\n/** @ignore */\nfunction buffersFromJSON(xs, buffers = []) {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new message_js_1.BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new message_js_1.BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new message_js_1.BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new message_js_1.BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n/** @ignore */\nfunction nullCountFromJSON(validity) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n/** @ignore */\nfunction fieldFromJSON(_field, dictionaries) {\n    let id;\n    let keys;\n    let field;\n    let dictMeta;\n    let type;\n    let dictType;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new schema_js_1.Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new type_js_1.Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new type_js_1.Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new schema_js_1.Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new type_js_1.Int32();\n        dictType = new type_js_1.Dictionary(dictionaries.get(id), keys, id, dictMeta['isOrdered']);\n        field = new schema_js_1.Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\nexports.fieldFromJSON = fieldFromJSON;\n/** @ignore */\nfunction customMetadataFromJSON(_metadata) {\n    return new Map(Object.entries(_metadata || {}));\n}\n/** @ignore */\nfunction indexTypeFromJSON(_type) {\n    return new type_js_1.Int(_type['isSigned'], _type['bitWidth']);\n}\n/** @ignore */\nfunction typeFromJSON(f, children) {\n    const typeId = f['type']['name'];\n    switch (typeId) {\n        case 'NONE': return new type_js_1.Null();\n        case 'null': return new type_js_1.Null();\n        case 'binary': return new type_js_1.Binary();\n        case 'utf8': return new type_js_1.Utf8();\n        case 'bool': return new type_js_1.Bool();\n        case 'list': return new type_js_1.List((children || [])[0]);\n        case 'struct': return new type_js_1.Struct(children || []);\n        case 'struct_': return new type_js_1.Struct(children || []);\n    }\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new type_js_1.Int(t['isSigned'], t['bitWidth']);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new type_js_1.Float(enum_js_1.Precision[t['precision']]);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new type_js_1.Decimal(t['scale'], t['precision'], t['bitWidth']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new type_js_1.Date_(enum_js_1.DateUnit[t['unit']]);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new type_js_1.Time(enum_js_1.TimeUnit[t['unit']], t['bitWidth']);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new type_js_1.Timestamp(enum_js_1.TimeUnit[t['unit']], t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new type_js_1.Interval(enum_js_1.IntervalUnit[t['unit']]);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new type_js_1.Union(enum_js_1.UnionMode[t['mode']], (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new type_js_1.FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new type_js_1.FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new type_js_1.Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n\n//# sourceMappingURL=json.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/ipc/metadata/json.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/ipc/metadata/message.js":
/*!***********************************************************!*\
  !*** ./node_modules/apache-arrow/ipc/metadata/message.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FieldNode = exports.BufferRegion = exports.DictionaryBatch = exports.RecordBatch = exports.Message = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* eslint-disable brace-style */\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nconst schema_js_1 = __webpack_require__(/*! ../../fb/schema.js */ \"./node_modules/apache-arrow/fb/schema.js\");\nconst int_js_1 = __webpack_require__(/*! ../../fb/int.js */ \"./node_modules/apache-arrow/fb/int.js\");\nconst record_batch_js_1 = __webpack_require__(/*! ../../fb/record-batch.js */ \"./node_modules/apache-arrow/fb/record-batch.js\");\nconst dictionary_batch_js_1 = __webpack_require__(/*! ../../fb/dictionary-batch.js */ \"./node_modules/apache-arrow/fb/dictionary-batch.js\");\nconst buffer_js_1 = __webpack_require__(/*! ../../fb/buffer.js */ \"./node_modules/apache-arrow/fb/buffer.js\");\nconst field_js_1 = __webpack_require__(/*! ../../fb/field.js */ \"./node_modules/apache-arrow/fb/field.js\");\nconst field_node_js_1 = __webpack_require__(/*! ../../fb/field-node.js */ \"./node_modules/apache-arrow/fb/field-node.js\");\nconst type_js_1 = __webpack_require__(/*! ../../fb/type.js */ \"./node_modules/apache-arrow/fb/type.js\");\nconst key_value_js_1 = __webpack_require__(/*! ../../fb/key-value.js */ \"./node_modules/apache-arrow/fb/key-value.js\");\nconst endianness_js_1 = __webpack_require__(/*! ../../fb/endianness.js */ \"./node_modules/apache-arrow/fb/endianness.js\");\nconst floating_point_js_1 = __webpack_require__(/*! ../../fb/floating-point.js */ \"./node_modules/apache-arrow/fb/floating-point.js\");\nconst decimal_js_1 = __webpack_require__(/*! ../../fb/decimal.js */ \"./node_modules/apache-arrow/fb/decimal.js\");\nconst date_js_1 = __webpack_require__(/*! ../../fb/date.js */ \"./node_modules/apache-arrow/fb/date.js\");\nconst time_js_1 = __webpack_require__(/*! ../../fb/time.js */ \"./node_modules/apache-arrow/fb/time.js\");\nconst timestamp_js_1 = __webpack_require__(/*! ../../fb/timestamp.js */ \"./node_modules/apache-arrow/fb/timestamp.js\");\nconst interval_js_1 = __webpack_require__(/*! ../../fb/interval.js */ \"./node_modules/apache-arrow/fb/interval.js\");\nconst union_js_1 = __webpack_require__(/*! ../../fb/union.js */ \"./node_modules/apache-arrow/fb/union.js\");\nconst fixed_size_binary_js_1 = __webpack_require__(/*! ../../fb/fixed-size-binary.js */ \"./node_modules/apache-arrow/fb/fixed-size-binary.js\");\nconst fixed_size_list_js_1 = __webpack_require__(/*! ../../fb/fixed-size-list.js */ \"./node_modules/apache-arrow/fb/fixed-size-list.js\");\nconst map_js_1 = __webpack_require__(/*! ../../fb/map.js */ \"./node_modules/apache-arrow/fb/map.js\");\nconst message_js_1 = __webpack_require__(/*! ../../fb/message.js */ \"./node_modules/apache-arrow/fb/message.js\");\nconst schema_js_2 = __webpack_require__(/*! ../../schema.js */ \"./node_modules/apache-arrow/schema.js\");\nconst buffer_js_2 = __webpack_require__(/*! ../../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\nconst enum_js_1 = __webpack_require__(/*! ../../enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst typeassembler_js_1 = __webpack_require__(/*! ../../visitor/typeassembler.js */ \"./node_modules/apache-arrow/visitor/typeassembler.js\");\nconst json_js_1 = __webpack_require__(/*! ./json.js */ \"./node_modules/apache-arrow/ipc/metadata/json.js\");\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nconst type_js_2 = __webpack_require__(/*! ../../type.js */ \"./node_modules/apache-arrow/type.js\");\n/**\n * @ignore\n * @private\n **/\nclass Message {\n    constructor(bodyLength, version, headerType, header) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n    /** @nocollapse */\n    static fromJSON(msg, headerType) {\n        const message = new Message(0, enum_js_1.MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer((0, buffer_js_2.toUint8Array)(buf));\n        const _message = message_js_1.Message.getRootAsMessage(buf);\n        const bodyLength = _message.bodyLength();\n        const version = _message.version();\n        const headerType = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static encode(message) {\n        const b = new Builder();\n        let headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = schema_js_2.Schema.encode(b, message.header());\n        }\n        else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header());\n        }\n        else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header());\n        }\n        message_js_1.Message.startMessage(b);\n        message_js_1.Message.addVersion(b, enum_js_1.MetadataVersion.V4);\n        message_js_1.Message.addHeader(b, headerOffset);\n        message_js_1.Message.addHeaderType(b, message.headerType);\n        message_js_1.Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        message_js_1.Message.finishMessageBuffer(b, message_js_1.Message.endMessage(b));\n        return b.asUint8Array();\n    }\n    /** @nocollapse */\n    static from(header, bodyLength = 0) {\n        if (header instanceof schema_js_2.Schema) {\n            return new Message(0, enum_js_1.MetadataVersion.V4, enum_js_1.MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, enum_js_1.MetadataVersion.V4, enum_js_1.MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, enum_js_1.MetadataVersion.V4, enum_js_1.MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n    get type() { return this.headerType; }\n    get version() { return this._version; }\n    get headerType() { return this._headerType; }\n    get bodyLength() { return this._bodyLength; }\n    header() { return this._createHeader(); }\n    isSchema() { return this.headerType === enum_js_1.MessageHeader.Schema; }\n    isRecordBatch() { return this.headerType === enum_js_1.MessageHeader.RecordBatch; }\n    isDictionaryBatch() { return this.headerType === enum_js_1.MessageHeader.DictionaryBatch; }\n}\nexports.Message = Message;\n/**\n * @ignore\n * @private\n **/\nclass RecordBatch {\n    constructor(length, nodes, buffers) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n    get nodes() { return this._nodes; }\n    get length() { return this._length; }\n    get buffers() { return this._buffers; }\n}\nexports.RecordBatch = RecordBatch;\n/**\n * @ignore\n * @private\n **/\nclass DictionaryBatch {\n    constructor(data, id, isDelta = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n    get id() { return this._id; }\n    get data() { return this._data; }\n    get isDelta() { return this._isDelta; }\n    get length() { return this.data.length; }\n    get nodes() { return this.data.nodes; }\n    get buffers() { return this.data.buffers; }\n}\nexports.DictionaryBatch = DictionaryBatch;\n/**\n * @ignore\n * @private\n **/\nclass BufferRegion {\n    constructor(offset, length) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\nexports.BufferRegion = BufferRegion;\n/**\n * @ignore\n * @private\n **/\nclass FieldNode {\n    constructor(length, nullCount) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\nexports.FieldNode = FieldNode;\n/** @ignore */\nfunction messageHeaderFromJSON(message, type) {\n    return (() => {\n        switch (type) {\n            case enum_js_1.MessageHeader.Schema: return schema_js_2.Schema.fromJSON(message);\n            case enum_js_1.MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case enum_js_1.MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${enum_js_1.MessageHeader[type]}, type: ${type} }`);\n    });\n}\n/** @ignore */\nfunction decodeMessageHeader(message, type) {\n    return (() => {\n        switch (type) {\n            case enum_js_1.MessageHeader.Schema: return schema_js_2.Schema.decode(message.header(new schema_js_1.Schema()));\n            case enum_js_1.MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new record_batch_js_1.RecordBatch()), message.version());\n            case enum_js_1.MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new dictionary_batch_js_1.DictionaryBatch()), message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${enum_js_1.MessageHeader[type]}, type: ${type} }`);\n    });\n}\nschema_js_2.Field['encode'] = encodeField;\nschema_js_2.Field['decode'] = decodeField;\nschema_js_2.Field['fromJSON'] = json_js_1.fieldFromJSON;\nschema_js_2.Schema['encode'] = encodeSchema;\nschema_js_2.Schema['decode'] = decodeSchema;\nschema_js_2.Schema['fromJSON'] = json_js_1.schemaFromJSON;\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = json_js_1.recordBatchFromJSON;\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = json_js_1.dictionaryBatchFromJSON;\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n/** @ignore */\nfunction decodeSchema(_schema, dictionaries = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new schema_js_2.Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n/** @ignore */\nfunction decodeRecordBatch(batch, version = enum_js_1.MetadataVersion.V4) {\n    if (batch.compression() !== null) {\n        throw new Error('Record batch compression not implemented');\n    }\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n/** @ignore */\nfunction decodeDictionaryBatch(batch, version = enum_js_1.MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data(), version), batch.id(), batch.isDelta());\n}\n/** @ignore */\nfunction decodeBufferRegion(b) {\n    return new BufferRegion(b.offset(), b.length());\n}\n/** @ignore */\nfunction decodeFieldNode(f) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n/** @ignore */\nfunction decodeFieldNodes(batch) {\n    const nodes = [];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n/** @ignore */\nfunction decodeBuffers(batch, version) {\n    const bufferRegions = [];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n            // If this Arrow buffer was written before version 4,\n            // advance the buffer's bb_pos 8 bytes to skip past\n            // the now-removed page_id field\n            if (version < enum_js_1.MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n/** @ignore */\nfunction decodeSchemaFields(schema, dictionaries) {\n    const fields = [];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = schema_js_2.Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n/** @ignore */\nfunction decodeFieldChildren(field, dictionaries) {\n    const children = [];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = schema_js_2.Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n/** @ignore */\nfunction decodeField(f, dictionaries) {\n    let id;\n    let field;\n    let type;\n    let keys;\n    let dictType;\n    let dictMeta;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new schema_js_2.Field(f.name(), type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new type_js_2.Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new type_js_2.Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new schema_js_2.Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new type_js_2.Int32();\n        dictType = new type_js_2.Dictionary(dictionaries.get(id), keys, id, dictMeta.isOrdered());\n        field = new schema_js_2.Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction decodeCustomMetadata(parent) {\n    const data = new Map();\n    if (parent) {\n        for (let entry, key, i = -1, n = Math.trunc(parent.customMetadataLength()); ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value());\n            }\n        }\n    }\n    return data;\n}\n/** @ignore */\nfunction decodeIndexType(_type) {\n    return new type_js_2.Int(_type.isSigned(), _type.bitWidth());\n}\n/** @ignore */\nfunction decodeFieldType(f, children) {\n    const typeId = f.typeType();\n    switch (typeId) {\n        case type_js_1.Type['NONE']: return new type_js_2.Null();\n        case type_js_1.Type['Null']: return new type_js_2.Null();\n        case type_js_1.Type['Binary']: return new type_js_2.Binary();\n        case type_js_1.Type['Utf8']: return new type_js_2.Utf8();\n        case type_js_1.Type['Bool']: return new type_js_2.Bool();\n        case type_js_1.Type['List']: return new type_js_2.List((children || [])[0]);\n        case type_js_1.Type['Struct_']: return new type_js_2.Struct(children || []);\n    }\n    switch (typeId) {\n        case type_js_1.Type['Int']: {\n            const t = f.type(new int_js_1.Int());\n            return new type_js_2.Int(t.isSigned(), t.bitWidth());\n        }\n        case type_js_1.Type['FloatingPoint']: {\n            const t = f.type(new floating_point_js_1.FloatingPoint());\n            return new type_js_2.Float(t.precision());\n        }\n        case type_js_1.Type['Decimal']: {\n            const t = f.type(new decimal_js_1.Decimal());\n            return new type_js_2.Decimal(t.scale(), t.precision(), t.bitWidth());\n        }\n        case type_js_1.Type['Date']: {\n            const t = f.type(new date_js_1.Date());\n            return new type_js_2.Date_(t.unit());\n        }\n        case type_js_1.Type['Time']: {\n            const t = f.type(new time_js_1.Time());\n            return new type_js_2.Time(t.unit(), t.bitWidth());\n        }\n        case type_js_1.Type['Timestamp']: {\n            const t = f.type(new timestamp_js_1.Timestamp());\n            return new type_js_2.Timestamp(t.unit(), t.timezone());\n        }\n        case type_js_1.Type['Interval']: {\n            const t = f.type(new interval_js_1.Interval());\n            return new type_js_2.Interval(t.unit());\n        }\n        case type_js_1.Type['Union']: {\n            const t = f.type(new union_js_1.Union());\n            return new type_js_2.Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case type_js_1.Type['FixedSizeBinary']: {\n            const t = f.type(new fixed_size_binary_js_1.FixedSizeBinary());\n            return new type_js_2.FixedSizeBinary(t.byteWidth());\n        }\n        case type_js_1.Type['FixedSizeList']: {\n            const t = f.type(new fixed_size_list_js_1.FixedSizeList());\n            return new type_js_2.FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case type_js_1.Type['Map']: {\n            const t = f.type(new map_js_1.Map());\n            return new type_js_2.Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${type_js_1.Type[typeId]}\" (${typeId})`);\n}\n/** @ignore */\nfunction encodeSchema(b, schema) {\n    const fieldOffsets = schema.fields.map((f) => schema_js_2.Field.encode(b, f));\n    schema_js_1.Schema.startFieldsVector(b, fieldOffsets.length);\n    const fieldsVectorOffset = schema_js_1.Schema.createFieldsVector(b, fieldOffsets);\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        schema_js_1.Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            key_value_js_1.KeyValue.startKeyValue(b);\n            key_value_js_1.KeyValue.addKey(b, key);\n            key_value_js_1.KeyValue.addValue(b, val);\n            return key_value_js_1.KeyValue.endKeyValue(b);\n        }));\n    schema_js_1.Schema.startSchema(b);\n    schema_js_1.Schema.addFields(b, fieldsVectorOffset);\n    schema_js_1.Schema.addEndianness(b, platformIsLittleEndian ? endianness_js_1.Endianness.Little : endianness_js_1.Endianness.Big);\n    if (metadataOffset !== -1) {\n        schema_js_1.Schema.addCustomMetadata(b, metadataOffset);\n    }\n    return schema_js_1.Schema.endSchema(b);\n}\n/** @ignore */\nfunction encodeField(b, field) {\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n    const type = field.type;\n    let typeId = field.typeId;\n    if (!type_js_2.DataType.isDictionary(type)) {\n        typeOffset = typeassembler_js_1.instance.visit(type, b);\n    }\n    else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeassembler_js_1.instance.visit(type, b);\n        typeOffset = typeassembler_js_1.instance.visit(type.dictionary, b);\n    }\n    const childOffsets = (type.children || []).map((f) => schema_js_2.Field.encode(b, f));\n    const childrenVectorOffset = field_js_1.Field.createChildrenVector(b, childOffsets);\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        field_js_1.Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            key_value_js_1.KeyValue.startKeyValue(b);\n            key_value_js_1.KeyValue.addKey(b, key);\n            key_value_js_1.KeyValue.addValue(b, val);\n            return key_value_js_1.KeyValue.endKeyValue(b);\n        }));\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n    field_js_1.Field.startField(b);\n    field_js_1.Field.addType(b, typeOffset);\n    field_js_1.Field.addTypeType(b, typeId);\n    field_js_1.Field.addChildren(b, childrenVectorOffset);\n    field_js_1.Field.addNullable(b, !!field.nullable);\n    if (nameOffset !== -1) {\n        field_js_1.Field.addName(b, nameOffset);\n    }\n    if (dictionaryOffset !== -1) {\n        field_js_1.Field.addDictionary(b, dictionaryOffset);\n    }\n    if (metadataOffset !== -1) {\n        field_js_1.Field.addCustomMetadata(b, metadataOffset);\n    }\n    return field_js_1.Field.endField(b);\n}\n/** @ignore */\nfunction encodeRecordBatch(b, recordBatch) {\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n    record_batch_js_1.RecordBatch.startNodesVector(b, nodes.length);\n    for (const n of nodes.slice().reverse())\n        FieldNode.encode(b, n);\n    const nodesVectorOffset = b.endVector();\n    record_batch_js_1.RecordBatch.startBuffersVector(b, buffers.length);\n    for (const b_ of buffers.slice().reverse())\n        BufferRegion.encode(b, b_);\n    const buffersVectorOffset = b.endVector();\n    record_batch_js_1.RecordBatch.startRecordBatch(b);\n    record_batch_js_1.RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    record_batch_js_1.RecordBatch.addNodes(b, nodesVectorOffset);\n    record_batch_js_1.RecordBatch.addBuffers(b, buffersVectorOffset);\n    return record_batch_js_1.RecordBatch.endRecordBatch(b);\n}\n/** @ignore */\nfunction encodeDictionaryBatch(b, dictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    dictionary_batch_js_1.DictionaryBatch.startDictionaryBatch(b);\n    dictionary_batch_js_1.DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    dictionary_batch_js_1.DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    dictionary_batch_js_1.DictionaryBatch.addData(b, dataOffset);\n    return dictionary_batch_js_1.DictionaryBatch.endDictionaryBatch(b);\n}\n/** @ignore */\nfunction encodeFieldNode(b, node) {\n    return field_node_js_1.FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n/** @ignore */\nfunction encodeBufferRegion(b, node) {\n    return buffer_js_1.Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n/** @ignore */\nconst platformIsLittleEndian = (() => {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n//# sourceMappingURL=message.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/ipc/metadata/message.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/ipc/reader.js":
/*!*************************************************!*\
  !*** ./node_modules/apache-arrow/ipc/reader.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AsyncRecordBatchFileReader = exports.RecordBatchFileReader = exports.AsyncRecordBatchStreamReader = exports.RecordBatchStreamReader = exports.RecordBatchReader = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst data_js_1 = __webpack_require__(/*! ../data.js */ \"./node_modules/apache-arrow/data.js\");\nconst vector_js_1 = __webpack_require__(/*! ../vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\nconst enum_js_1 = __webpack_require__(/*! ../enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst file_js_1 = __webpack_require__(/*! ./metadata/file.js */ \"./node_modules/apache-arrow/ipc/metadata/file.js\");\nconst adapters_js_1 = tslib_1.__importDefault(__webpack_require__(/*! ../io/adapters.js */ \"./node_modules/apache-arrow/io/adapters.js\"));\nconst stream_js_1 = __webpack_require__(/*! ../io/stream.js */ \"./node_modules/apache-arrow/io/stream.js\");\nconst file_js_2 = __webpack_require__(/*! ../io/file.js */ \"./node_modules/apache-arrow/io/file.js\");\nconst vectorloader_js_1 = __webpack_require__(/*! ../visitor/vectorloader.js */ \"./node_modules/apache-arrow/visitor/vectorloader.js\");\nconst recordbatch_js_1 = __webpack_require__(/*! ../recordbatch.js */ \"./node_modules/apache-arrow/recordbatch.js\");\nconst interfaces_js_1 = __webpack_require__(/*! ../io/interfaces.js */ \"./node_modules/apache-arrow/io/interfaces.js\");\nconst message_js_1 = __webpack_require__(/*! ./message.js */ \"./node_modules/apache-arrow/ipc/message.js\");\nconst compat_js_1 = __webpack_require__(/*! ../util/compat.js */ \"./node_modules/apache-arrow/util/compat.js\");\nclass RecordBatchReader extends interfaces_js_1.ReadableInterop {\n    constructor(impl) {\n        super();\n        this._impl = impl;\n    }\n    get closed() { return this._impl.closed; }\n    get schema() { return this._impl.schema; }\n    get autoDestroy() { return this._impl.autoDestroy; }\n    get dictionaries() { return this._impl.dictionaries; }\n    get numDictionaries() { return this._impl.numDictionaries; }\n    get numRecordBatches() { return this._impl.numRecordBatches; }\n    get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n    isSync() { return this._impl.isSync(); }\n    isAsync() { return this._impl.isAsync(); }\n    isFile() { return this._impl.isFile(); }\n    isStream() { return this._impl.isStream(); }\n    next() {\n        return this._impl.next();\n    }\n    throw(value) {\n        return this._impl.throw(value);\n    }\n    return(value) {\n        return this._impl.return(value);\n    }\n    cancel() {\n        return this._impl.cancel();\n    }\n    reset(schema) {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    open(options) {\n        const opening = this._impl.open(options);\n        return (0, compat_js_1.isPromise)(opening) ? opening.then(() => this) : this;\n    }\n    readRecordBatch(index) {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    [Symbol.iterator]() {\n        return this._impl[Symbol.iterator]();\n    }\n    [Symbol.asyncIterator]() {\n        return this._impl[Symbol.asyncIterator]();\n    }\n    toDOMStream() {\n        return adapters_js_1.default.toDOMStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }));\n    }\n    toNodeStream() {\n        return adapters_js_1.default.toNodeStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }), { objectMode: true });\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static from(source) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        }\n        else if ((0, compat_js_1.isArrowJSON)(source)) {\n            return fromArrowJSON(source);\n        }\n        else if ((0, compat_js_1.isFileHandle)(source)) {\n            return fromFileHandle(source);\n        }\n        else if ((0, compat_js_1.isPromise)(source)) {\n            return (() => tslib_1.__awaiter(this, void 0, void 0, function* () { return yield RecordBatchReader.from(yield source); }))();\n        }\n        else if ((0, compat_js_1.isFetchResponse)(source) || (0, compat_js_1.isReadableDOMStream)(source) || (0, compat_js_1.isReadableNodeStream)(source) || (0, compat_js_1.isAsyncIterable)(source)) {\n            return fromAsyncByteStream(new stream_js_1.AsyncByteStream(source));\n        }\n        return fromByteStream(new stream_js_1.ByteStream(source));\n    }\n    /** @nocollapse */\n    static readAll(source) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source);\n        }\n        else if ((0, compat_js_1.isArrowJSON)(source) || ArrayBuffer.isView(source) || (0, compat_js_1.isIterable)(source) || (0, compat_js_1.isIteratorResult)(source)) {\n            return readAllSync(source);\n        }\n        return readAllAsync(source);\n    }\n}\nexports.RecordBatchReader = RecordBatchReader;\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n/** @ignore */\nclass RecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    readAll() { return [...this]; }\n    [Symbol.iterator]() { return this._impl[Symbol.iterator](); }\n    [Symbol.asyncIterator]() { return tslib_1.__asyncGenerator(this, arguments, function* _a() { yield tslib_1.__await(yield* tslib_1.__asyncDelegator(tslib_1.__asyncValues(this[Symbol.iterator]()))); }); }\n}\nexports.RecordBatchStreamReader = RecordBatchStreamReader;\n/** @ignore */\nclass AsyncRecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    readAll() {\n        var e_1, _a;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const batches = new Array();\n            try {\n                for (var _b = tslib_1.__asyncValues(this), _c; _c = yield _b.next(), !_c.done;) {\n                    const batch = _c.value;\n                    batches.push(batch);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return batches;\n        });\n    }\n    [Symbol.iterator]() { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    [Symbol.asyncIterator]() { return this._impl[Symbol.asyncIterator](); }\n}\nexports.AsyncRecordBatchStreamReader = AsyncRecordBatchStreamReader;\n/** @ignore */\nclass RecordBatchFileReader extends RecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\nexports.RecordBatchFileReader = RecordBatchFileReader;\n/** @ignore */\nclass AsyncRecordBatchFileReader extends AsyncRecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\nexports.AsyncRecordBatchFileReader = AsyncRecordBatchFileReader;\n/** @ignore */\nclass RecordBatchReaderImpl {\n    constructor(dictionaries = new Map()) {\n        this.closed = false;\n        this.autoDestroy = true;\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.dictionaries = dictionaries;\n    }\n    get numDictionaries() { return this._dictionaryIndex; }\n    get numRecordBatches() { return this._recordBatchIndex; }\n    isSync() { return false; }\n    isAsync() { return false; }\n    isFile() { return false; }\n    isStream() { return false; }\n    reset(schema) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n    _loadRecordBatch(header, body) {\n        const children = this._loadVectors(header, body, this.schema.fields);\n        const data = (0, data_js_1.makeData)({ type: new type_js_1.Struct(this.schema.fields), length: header.length, children });\n        return new recordbatch_js_1.RecordBatch(this.schema, data);\n    }\n    _loadDictionaryBatch(header, body) {\n        const { id, isDelta } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id);\n            const data = this._loadVectors(header.data, body, [type]);\n            return (dictionary && isDelta ? dictionary.concat(new vector_js_1.Vector(data)) :\n                new vector_js_1.Vector(data)).memoize();\n        }\n        return dictionary.memoize();\n    }\n    _loadVectors(header, body, types) {\n        return new vectorloader_js_1.VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n/** @ignore */\nclass RecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = !(0, compat_js_1.isArrowJSON)(source)\n            ? new message_js_1.MessageReader(this._handle = source)\n            : new message_js_1.JSONMessageReader(this._handle = source);\n    }\n    isSync() { return true; }\n    isStream() { return true; }\n    [Symbol.iterator]() {\n        return this;\n    }\n    cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = null;\n            this.dictionaries = null;\n        }\n    }\n    open(options) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    throw(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return interfaces_js_1.ITERATOR_DONE;\n    }\n    return(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return interfaces_js_1.ITERATOR_DONE;\n    }\n    next() {\n        if (this.closed) {\n            return interfaces_js_1.ITERATOR_DONE;\n        }\n        let message;\n        const { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            }\n            else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            }\n            else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new recordbatch_js_1._InternalEmptyPlaceholderRecordBatch(this.schema) };\n        }\n        return this.return();\n    }\n    _readNextMessageAndValidate(type) {\n        return this._reader.readMessage(type);\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = new message_js_1.AsyncMessageReader(this._handle = source);\n    }\n    isAsync() { return true; }\n    isStream() { return true; }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    cancel() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this.closed && (this.closed = true)) {\n                yield this.reset()._reader.return();\n                this._reader = null;\n                this.dictionaries = null;\n            }\n        });\n    }\n    open(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this.closed) {\n                this.autoDestroy = shouldAutoDestroy(this, options);\n                if (!(this.schema || (this.schema = (yield this._reader.readSchema())))) {\n                    yield this.cancel();\n                }\n            }\n            return this;\n        });\n    }\n    throw(value) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this.closed && this.autoDestroy && (this.closed = true)) {\n                return yield this.reset()._reader.throw(value);\n            }\n            return interfaces_js_1.ITERATOR_DONE;\n        });\n    }\n    return(value) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this.closed && this.autoDestroy && (this.closed = true)) {\n                return yield this.reset()._reader.return(value);\n            }\n            return interfaces_js_1.ITERATOR_DONE;\n        });\n    }\n    next() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.closed) {\n                return interfaces_js_1.ITERATOR_DONE;\n            }\n            let message;\n            const { _reader: reader } = this;\n            while (message = yield this._readNextMessageAndValidate()) {\n                if (message.isSchema()) {\n                    yield this.reset(message.header());\n                }\n                else if (message.isRecordBatch()) {\n                    this._recordBatchIndex++;\n                    const header = message.header();\n                    const buffer = yield reader.readMessageBody(message.bodyLength);\n                    const recordBatch = this._loadRecordBatch(header, buffer);\n                    return { done: false, value: recordBatch };\n                }\n                else if (message.isDictionaryBatch()) {\n                    this._dictionaryIndex++;\n                    const header = message.header();\n                    const buffer = yield reader.readMessageBody(message.bodyLength);\n                    const vector = this._loadDictionaryBatch(header, buffer);\n                    this.dictionaries.set(header.id, vector);\n                }\n            }\n            if (this.schema && this._recordBatchIndex === 0) {\n                this._recordBatchIndex++;\n                return { done: false, value: new recordbatch_js_1._InternalEmptyPlaceholderRecordBatch(this.schema) };\n            }\n            return yield this.return();\n        });\n    }\n    _readNextMessageAndValidate(type) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return yield this._reader.readMessage(type);\n        });\n    }\n}\n/** @ignore */\nclass RecordBatchFileReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source instanceof file_js_2.RandomAccessFile ? source : new file_js_2.RandomAccessFile(source), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isSync() { return true; }\n    isFile() { return true; }\n    open(options) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    readRecordBatch(index) {\n        var _a;\n        if (this.closed) {\n            return null;\n        }\n        if (!this._footer) {\n            this.open();\n        }\n        const block = (_a = this._footer) === null || _a === void 0 ? void 0 : _a.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(enum_js_1.MessageHeader.RecordBatch);\n            if (message === null || message === void 0 ? void 0 : message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    _readDictionaryBatch(index) {\n        var _a;\n        const block = (_a = this._footer) === null || _a === void 0 ? void 0 : _a.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(enum_js_1.MessageHeader.DictionaryBatch);\n            if (message === null || message === void 0 ? void 0 : message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - message_js_1.magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return file_js_1.Footer.decode(buffer);\n    }\n    _readNextMessageAndValidate(type) {\n        var _a;\n        if (!this._footer) {\n            this.open();\n        }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = (_a = this._footer) === null || _a === void 0 ? void 0 : _a.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl extends AsyncRecordBatchStreamReaderImpl {\n    constructor(source, ...rest) {\n        const byteLength = typeof rest[0] !== 'number' ? rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? rest.shift() : undefined;\n        super(source instanceof file_js_2.AsyncRandomAccessFile ? source : new file_js_2.AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isFile() { return true; }\n    isAsync() { return true; }\n    open(options) {\n        const _super = Object.create(null, {\n            open: { get: () => super.open }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this.closed && !this._footer) {\n                this.schema = (this._footer = yield this._readFooter()).schema;\n                for (const block of this._footer.dictionaryBatches()) {\n                    block && (yield this._readDictionaryBatch(this._dictionaryIndex++));\n                }\n            }\n            return yield _super.open.call(this, options);\n        });\n    }\n    readRecordBatch(index) {\n        var _a;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.closed) {\n                return null;\n            }\n            if (!this._footer) {\n                yield this.open();\n            }\n            const block = (_a = this._footer) === null || _a === void 0 ? void 0 : _a.getRecordBatch(index);\n            if (block && (yield this._handle.seek(block.offset))) {\n                const message = yield this._reader.readMessage(enum_js_1.MessageHeader.RecordBatch);\n                if (message === null || message === void 0 ? void 0 : message.isRecordBatch()) {\n                    const header = message.header();\n                    const buffer = yield this._reader.readMessageBody(message.bodyLength);\n                    const recordBatch = this._loadRecordBatch(header, buffer);\n                    return recordBatch;\n                }\n            }\n            return null;\n        });\n    }\n    _readDictionaryBatch(index) {\n        var _a;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const block = (_a = this._footer) === null || _a === void 0 ? void 0 : _a.getDictionaryBatch(index);\n            if (block && (yield this._handle.seek(block.offset))) {\n                const message = yield this._reader.readMessage(enum_js_1.MessageHeader.DictionaryBatch);\n                if (message === null || message === void 0 ? void 0 : message.isDictionaryBatch()) {\n                    const header = message.header();\n                    const buffer = yield this._reader.readMessageBody(message.bodyLength);\n                    const vector = this._loadDictionaryBatch(header, buffer);\n                    this.dictionaries.set(header.id, vector);\n                }\n            }\n        });\n    }\n    _readFooter() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const { _handle } = this;\n            _handle._pending && (yield _handle._pending);\n            const offset = _handle.size - message_js_1.magicAndPadding;\n            const length = yield _handle.readInt32(offset);\n            const buffer = yield _handle.readAt(offset - length, length);\n            return file_js_1.Footer.decode(buffer);\n        });\n    }\n    _readNextMessageAndValidate(type) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this._footer) {\n                yield this.open();\n            }\n            if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n                const block = this._footer.getRecordBatch(this._recordBatchIndex);\n                if (block && (yield this._handle.seek(block.offset))) {\n                    return yield this._reader.readMessage(type);\n                }\n            }\n            return null;\n        });\n    }\n}\n/** @ignore */\nclass RecordBatchJSONReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source, dictionaries);\n    }\n    _loadVectors(header, body, types) {\n        return new vectorloader_js_1.JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n/** @ignore */\nfunction shouldAutoDestroy(self, options) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n/** @ignore */\nfunction* readAllSync(source) {\n    const reader = RecordBatchReader.from(source);\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do {\n                yield reader;\n            } while (!(reader.reset().open()).closed);\n        }\n    }\n    finally {\n        reader.cancel();\n    }\n}\n/** @ignore */\nfunction readAllAsync(source) {\n    return tslib_1.__asyncGenerator(this, arguments, function* readAllAsync_1() {\n        const reader = yield tslib_1.__await(RecordBatchReader.from(source));\n        try {\n            if (!(yield tslib_1.__await(reader.open({ autoDestroy: false }))).closed) {\n                do {\n                    yield yield tslib_1.__await(reader);\n                } while (!(yield tslib_1.__await(reader.reset().open())).closed);\n            }\n        }\n        finally {\n            yield tslib_1.__await(reader.cancel());\n        }\n    });\n}\n/** @ignore */\nfunction fromArrowJSON(source) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl(source));\n}\n/** @ignore */\nfunction fromByteStream(source) {\n    const bytes = source.peek((message_js_1.magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !(0, message_js_1.checkForMagicArrowString)(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(function* () { }()));\n}\n/** @ignore */\nfunction fromAsyncByteStream(source) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const bytes = yield source.peek((message_js_1.magicLength + 7) & ~7);\n        return bytes && bytes.byteLength >= 4 ? !(0, message_js_1.checkForMagicArrowString)(bytes)\n            ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(source))\n            : new RecordBatchFileReader(new RecordBatchFileReaderImpl(yield source.read()))\n            : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(function () { return tslib_1.__asyncGenerator(this, arguments, function* () { }); }()));\n    });\n}\n/** @ignore */\nfunction fromFileHandle(source) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const { size } = yield source.stat();\n        const file = new file_js_2.AsyncRandomAccessFile(source, size);\n        if (size >= message_js_1.magicX2AndPadding && (0, message_js_1.checkForMagicArrowString)(yield file.readAt(0, (message_js_1.magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl(file));\n        }\n        return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(file));\n    });\n}\n\n//# sourceMappingURL=reader.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/ipc/reader.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/ipc/serialization.js":
/*!********************************************************!*\
  !*** ./node_modules/apache-arrow/ipc/serialization.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.tableToIPC = exports.tableFromIPC = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst table_js_1 = __webpack_require__(/*! ../table.js */ \"./node_modules/apache-arrow/table.js\");\nconst compat_js_1 = __webpack_require__(/*! ../util/compat.js */ \"./node_modules/apache-arrow/util/compat.js\");\nconst reader_js_1 = __webpack_require__(/*! ./reader.js */ \"./node_modules/apache-arrow/ipc/reader.js\");\nconst writer_js_1 = __webpack_require__(/*! ./writer.js */ \"./node_modules/apache-arrow/ipc/writer.js\");\nfunction tableFromIPC(input) {\n    const reader = reader_js_1.RecordBatchReader.from(input);\n    if ((0, compat_js_1.isPromise)(reader)) {\n        return (() => tslib_1.__awaiter(this, void 0, void 0, function* () { return new table_js_1.Table(yield (yield reader).readAll()); }))();\n    }\n    return new table_js_1.Table(reader.readAll());\n}\nexports.tableFromIPC = tableFromIPC;\n/**\n * Serialize a {@link Table} to the IPC format. This function is a convenience\n * wrapper for {@link RecordBatchStreamWriter} and {@link RecordBatchFileWriter}.\n * Opposite of {@link tableFromIPC}.\n *\n * @param table The Table to serialize.\n * @param type Whether to serialize the Table as a file or a stream.\n */\nfunction tableToIPC(table, type = 'stream') {\n    return (type === 'stream' ? writer_js_1.RecordBatchStreamWriter : writer_js_1.RecordBatchFileWriter)\n        .writeAll(table)\n        .toUint8Array(true);\n}\nexports.tableToIPC = tableToIPC;\n\n//# sourceMappingURL=serialization.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/ipc/serialization.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/ipc/writer.js":
/*!*************************************************!*\
  !*** ./node_modules/apache-arrow/ipc/writer.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RecordBatchJSONWriter = exports.RecordBatchFileWriter = exports.RecordBatchStreamWriter = exports.RecordBatchWriter = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst table_js_1 = __webpack_require__(/*! ../table.js */ \"./node_modules/apache-arrow/table.js\");\nconst message_js_1 = __webpack_require__(/*! ./message.js */ \"./node_modules/apache-arrow/ipc/message.js\");\nconst vector_js_1 = __webpack_require__(/*! ../vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\nconst message_js_2 = __webpack_require__(/*! ./metadata/message.js */ \"./node_modules/apache-arrow/ipc/metadata/message.js\");\nconst metadata = tslib_1.__importStar(__webpack_require__(/*! ./metadata/message.js */ \"./node_modules/apache-arrow/ipc/metadata/message.js\"));\nconst file_js_1 = __webpack_require__(/*! ./metadata/file.js */ \"./node_modules/apache-arrow/ipc/metadata/file.js\");\nconst enum_js_1 = __webpack_require__(/*! ../enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst typecomparator_js_1 = __webpack_require__(/*! ../visitor/typecomparator.js */ \"./node_modules/apache-arrow/visitor/typecomparator.js\");\nconst stream_js_1 = __webpack_require__(/*! ../io/stream.js */ \"./node_modules/apache-arrow/io/stream.js\");\nconst vectorassembler_js_1 = __webpack_require__(/*! ../visitor/vectorassembler.js */ \"./node_modules/apache-arrow/visitor/vectorassembler.js\");\nconst jsontypeassembler_js_1 = __webpack_require__(/*! ../visitor/jsontypeassembler.js */ \"./node_modules/apache-arrow/visitor/jsontypeassembler.js\");\nconst jsonvectorassembler_js_1 = __webpack_require__(/*! ../visitor/jsonvectorassembler.js */ \"./node_modules/apache-arrow/visitor/jsonvectorassembler.js\");\nconst buffer_js_1 = __webpack_require__(/*! ../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\nconst recordbatch_js_1 = __webpack_require__(/*! ../recordbatch.js */ \"./node_modules/apache-arrow/recordbatch.js\");\nconst interfaces_js_1 = __webpack_require__(/*! ../io/interfaces.js */ \"./node_modules/apache-arrow/io/interfaces.js\");\nconst compat_js_1 = __webpack_require__(/*! ../util/compat.js */ \"./node_modules/apache-arrow/util/compat.js\");\nclass RecordBatchWriter extends interfaces_js_1.ReadableInterop {\n    constructor(options) {\n        super();\n        this._position = 0;\n        this._started = false;\n        // @ts-ignore\n        this._sink = new stream_js_1.AsyncByteQueue();\n        this._schema = null;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n        (0, compat_js_1.isObject)(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    toString(sync = false) {\n        return this._sink.toString(sync);\n    }\n    toUint8Array(sync = false) {\n        return this._sink.toUint8Array(sync);\n    }\n    writeAll(input) {\n        if ((0, compat_js_1.isPromise)(input)) {\n            return input.then((x) => this.writeAll(x));\n        }\n        else if ((0, compat_js_1.isAsyncIterable)(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, input);\n    }\n    get closed() { return this._sink.closed; }\n    [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    toDOMStream(options) { return this._sink.toDOMStream(options); }\n    toNodeStream(options) { return this._sink.toNodeStream(options); }\n    close() {\n        return this.reset()._sink.close();\n    }\n    abort(reason) {\n        return this.reset()._sink.abort(reason);\n    }\n    finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    reset(sink = this._sink, schema = null) {\n        if ((sink === this._sink) || (sink instanceof stream_js_1.AsyncByteQueue)) {\n            this._sink = sink;\n        }\n        else {\n            this._sink = new stream_js_1.AsyncByteQueue();\n            if (sink && (0, compat_js_1.isWritableDOMStream)(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            }\n            else if (sink && (0, compat_js_1.isWritableNodeStream)(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n        if (!schema || !((0, typecomparator_js_1.compareSchemas)(schema, this._schema))) {\n            if (schema == null) {\n                this._position = 0;\n                this._schema = null;\n            }\n            else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n        return this;\n    }\n    write(payload) {\n        let schema = null;\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        }\n        else if (payload == null) {\n            return this.finish() && undefined;\n        }\n        else if (payload instanceof table_js_1.Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n        else if (payload instanceof recordbatch_js_1.RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n        if (schema && !(0, typecomparator_js_1.compareSchemas)(schema, this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n        if (payload instanceof recordbatch_js_1.RecordBatch) {\n            if (!(payload instanceof recordbatch_js_1._InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        }\n        else if (payload instanceof table_js_1.Table) {\n            this.writeAll(payload.batches);\n        }\n        else if ((0, compat_js_1.isIterable)(payload)) {\n            this.writeAll(payload);\n        }\n    }\n    _writeMessage(message, alignment = 8) {\n        const a = alignment - 1;\n        const buffer = message_js_2.Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n        if (message.headerType === enum_js_1.MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new file_js_1.FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n        else if (message.headerType === enum_js_1.MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new file_js_1.FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) {\n            this._write(buffer);\n        }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n    _write(chunk) {\n        if (this._started) {\n            const buffer = (0, buffer_js_1.toUint8Array)(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n    _writeSchema(schema) {\n        return this._writeMessage(message_js_2.Message.from(schema));\n    }\n    // @ts-ignore\n    _writeFooter(schema) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n    _writeMagic() {\n        return this._write(message_js_1.MAGIC);\n    }\n    _writePadding(nBytes) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n    _writeRecordBatch(batch) {\n        const { byteLength, nodes, bufferRegions, buffers } = vectorassembler_js_1.VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.numRows, nodes, bufferRegions);\n        const message = message_js_2.Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n    _writeDictionaryBatch(dictionary, id, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = vectorassembler_js_1.VectorAssembler.assemble(new vector_js_1.Vector([dictionary]));\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = message_js_2.Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n    _writeBodyBuffers(buffers) {\n        let buffer;\n        let size, padding;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n    _writeDictionaries(batch) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary === null || dictionary === void 0 ? void 0 : dictionary.slice(offset)).length > 0) {\n                for (const data of dictionary.data) {\n                    this._writeDictionaryBatch(data, id, offset > 0);\n                    offset += data.length;\n                }\n            }\n        }\n        return this;\n    }\n}\nexports.RecordBatchWriter = RecordBatchWriter;\n/** @ignore */\nclass RecordBatchStreamWriter extends RecordBatchWriter {\n    /** @nocollapse */\n    static writeAll(input, options) {\n        const writer = new RecordBatchStreamWriter(options);\n        if ((0, compat_js_1.isPromise)(input)) {\n            return input.then((x) => writer.writeAll(x));\n        }\n        else if ((0, compat_js_1.isAsyncIterable)(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\nexports.RecordBatchStreamWriter = RecordBatchStreamWriter;\n/** @ignore */\nclass RecordBatchFileWriter extends RecordBatchWriter {\n    /** @nocollapse */\n    static writeAll(input) {\n        const writer = new RecordBatchFileWriter();\n        if ((0, compat_js_1.isPromise)(input)) {\n            return input.then((x) => writer.writeAll(x));\n        }\n        else if ((0, compat_js_1.isAsyncIterable)(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n    // @ts-ignore\n    _writeSchema(schema) {\n        return this._writeMagic()._writePadding(2);\n    }\n    _writeFooter(schema) {\n        const buffer = file_js_1.Footer.encode(new file_js_1.Footer(schema, enum_js_1.MetadataVersion.V4, this._recordBatchBlocks, this._dictionaryBlocks));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\nexports.RecordBatchFileWriter = RecordBatchFileWriter;\n/** @ignore */\nclass RecordBatchJSONWriter extends RecordBatchWriter {\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n    /** @nocollapse */\n    static writeAll(input) {\n        return new RecordBatchJSONWriter().writeAll(input);\n    }\n    _writeMessage() { return this; }\n    // @ts-ignore\n    _writeFooter(schema) { return this; }\n    _writeSchema(schema) {\n        return this._write(`{\\n  \"schema\": ${JSON.stringify({ fields: schema.fields.map(field => fieldToJSON(field)) }, null, 2)}`);\n    }\n    _writeDictionaries(batch) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    _writeDictionaryBatch(dictionary, id, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new file_js_1.FileBlock(0, 0, 0));\n        return this;\n    }\n    _writeRecordBatch(batch) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    close() {\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new file_js_1.FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n        this._dictionaries = [];\n        this._recordBatches = [];\n        return super.close();\n    }\n}\nexports.RecordBatchJSONWriter = RecordBatchJSONWriter;\n/** @ignore */\nfunction writeAll(writer, input) {\n    let chunks = input;\n    if (input instanceof table_js_1.Table) {\n        chunks = input.batches;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n/** @ignore */\nfunction writeAllAsync(writer, batches) {\n    var batches_1, batches_1_1;\n    var e_1, _a;\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        try {\n            for (batches_1 = tslib_1.__asyncValues(batches); batches_1_1 = yield batches_1.next(), !batches_1_1.done;) {\n                const batch = batches_1_1.value;\n                writer.write(batch);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (batches_1_1 && !batches_1_1.done && (_a = batches_1.return)) yield _a.call(batches_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return writer.finish();\n    });\n}\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }) {\n    const assembler = new jsontypeassembler_js_1.JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map((field) => fieldToJSON(field)),\n        'dictionary': !type_js_1.DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary, id, isDelta = false) {\n    const [columns] = jsonvectorassembler_js_1.JSONVectorAssembler.assemble(new recordbatch_js_1.RecordBatch({ [id]: dictionary }));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n/** @ignore */\nfunction recordBatchToJSON(records) {\n    const [columns] = jsonvectorassembler_js_1.JSONVectorAssembler.assemble(records);\n    return JSON.stringify({\n        'count': records.numRows,\n        'columns': columns\n    }, null, 2);\n}\n\n//# sourceMappingURL=writer.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/ipc/writer.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/recordbatch.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/recordbatch.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports._InternalEmptyPlaceholderRecordBatch = exports.RecordBatch = void 0;\nconst data_js_1 = __webpack_require__(/*! ./data.js */ \"./node_modules/apache-arrow/data.js\");\nconst table_js_1 = __webpack_require__(/*! ./table.js */ \"./node_modules/apache-arrow/table.js\");\nconst vector_js_1 = __webpack_require__(/*! ./vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst schema_js_1 = __webpack_require__(/*! ./schema.js */ \"./node_modules/apache-arrow/schema.js\");\nconst type_js_1 = __webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/type.js\");\nconst get_js_1 = __webpack_require__(/*! ./visitor/get.js */ \"./node_modules/apache-arrow/visitor/get.js\");\nconst set_js_1 = __webpack_require__(/*! ./visitor/set.js */ \"./node_modules/apache-arrow/visitor/set.js\");\nconst indexof_js_1 = __webpack_require__(/*! ./visitor/indexof.js */ \"./node_modules/apache-arrow/visitor/indexof.js\");\nconst iterator_js_1 = __webpack_require__(/*! ./visitor/iterator.js */ \"./node_modules/apache-arrow/visitor/iterator.js\");\nconst bytelength_js_1 = __webpack_require__(/*! ./visitor/bytelength.js */ \"./node_modules/apache-arrow/visitor/bytelength.js\");\n/** @ignore */\nclass RecordBatch {\n    constructor(...args) {\n        switch (args.length) {\n            case 2: {\n                [this.schema] = args;\n                if (!(this.schema instanceof schema_js_1.Schema)) {\n                    throw new TypeError('RecordBatch constructor expects a [Schema, Data] pair.');\n                }\n                [,\n                    this.data = (0, data_js_1.makeData)({\n                        nullCount: 0,\n                        type: new type_js_1.Struct(this.schema.fields),\n                        children: this.schema.fields.map((f) => (0, data_js_1.makeData)({ type: f.type, nullCount: 0 }))\n                    })\n                ] = args;\n                if (!(this.data instanceof data_js_1.Data)) {\n                    throw new TypeError('RecordBatch constructor expects a [Schema, Data] pair.');\n                }\n                [this.schema, this.data] = ensureSameLengthData(this.schema, this.data.children);\n                break;\n            }\n            case 1: {\n                const [obj] = args;\n                const { fields, children, length } = Object.keys(obj).reduce((memo, name, i) => {\n                    memo.children[i] = obj[name];\n                    memo.length = Math.max(memo.length, obj[name].length);\n                    memo.fields[i] = schema_js_1.Field.new({ name, type: obj[name].type, nullable: true });\n                    return memo;\n                }, {\n                    length: 0,\n                    fields: new Array(),\n                    children: new Array(),\n                });\n                const schema = new schema_js_1.Schema(fields);\n                const data = (0, data_js_1.makeData)({ type: new type_js_1.Struct(fields), length, children, nullCount: 0 });\n                [this.schema, this.data] = ensureSameLengthData(schema, data.children, length);\n                break;\n            }\n            default: throw new TypeError('RecordBatch constructor expects an Object mapping names to child Data, or a [Schema, Data] pair.');\n        }\n    }\n    get dictionaries() {\n        return this._dictionaries || (this._dictionaries = collectDictionaries(this.schema.fields, this.data.children));\n    }\n    /**\n     * The number of columns in this RecordBatch.\n     */\n    get numCols() { return this.schema.fields.length; }\n    /**\n     * The number of rows in this RecordBatch.\n     */\n    get numRows() { return this.data.length; }\n    /**\n     * The number of null rows in this RecordBatch.\n     */\n    get nullCount() {\n        return this.data.nullCount;\n    }\n    /**\n     * Check whether an element is null.\n     * @param index The index at which to read the validity bitmap.\n     */\n    isValid(index) {\n        return this.data.getValid(index);\n    }\n    /**\n     * Get a row by position.\n     * @param index The index of the element to read.\n     */\n    get(index) {\n        return get_js_1.instance.visit(this.data, index);\n    }\n    /**\n     * Set a row by position.\n     * @param index The index of the element to write.\n     * @param value The value to set.\n     */\n    set(index, value) {\n        return set_js_1.instance.visit(this.data, index, value);\n    }\n    /**\n     * Retrieve the index of the first occurrence of a row in an RecordBatch.\n     * @param element The row to locate in the RecordBatch.\n     * @param offset The index at which to begin the search. If offset is omitted, the search starts at index 0.\n     */\n    indexOf(element, offset) {\n        return indexof_js_1.instance.visit(this.data, element, offset);\n    }\n    /**\n     * Get the size (in bytes) of a row by index.\n     * @param index The row index for which to compute the byteLength.\n     */\n    getByteLength(index) {\n        return bytelength_js_1.instance.visit(this.data, index);\n    }\n    /**\n     * Iterator for rows in this RecordBatch.\n     */\n    [Symbol.iterator]() {\n        return iterator_js_1.instance.visit(new vector_js_1.Vector([this.data]));\n    }\n    /**\n     * Return a JavaScript Array of the RecordBatch rows.\n     * @returns An Array of RecordBatch rows.\n     */\n    toArray() {\n        return [...this];\n    }\n    /**\n     * Combines two or more RecordBatch of the same schema.\n     * @param others Additional RecordBatch to add to the end of this RecordBatch.\n     */\n    concat(...others) {\n        return new table_js_1.Table(this.schema, [this, ...others]);\n    }\n    /**\n     * Return a zero-copy sub-section of this RecordBatch.\n     * @param start The beginning of the specified portion of the RecordBatch.\n     * @param end The end of the specified portion of the RecordBatch. This is exclusive of the element at the index 'end'.\n     */\n    slice(begin, end) {\n        const [slice] = new vector_js_1.Vector([this.data]).slice(begin, end).data;\n        return new RecordBatch(this.schema, slice);\n    }\n    /**\n     * Returns a child Vector by name, or null if this Vector has no child with the given name.\n     * @param name The name of the child to retrieve.\n     */\n    getChild(name) {\n        var _b;\n        return this.getChildAt((_b = this.schema.fields) === null || _b === void 0 ? void 0 : _b.findIndex((f) => f.name === name));\n    }\n    /**\n     * Returns a child Vector by index, or null if this Vector has no child at the supplied index.\n     * @param index The index of the child to retrieve.\n     */\n    getChildAt(index) {\n        if (index > -1 && index < this.schema.fields.length) {\n            return new vector_js_1.Vector([this.data.children[index]]);\n        }\n        return null;\n    }\n    /**\n     * Sets a child Vector by name.\n     * @param name The name of the child to overwrite.\n     * @returns A new RecordBatch with the new child for the specified name.\n     */\n    setChild(name, child) {\n        var _b;\n        return this.setChildAt((_b = this.schema.fields) === null || _b === void 0 ? void 0 : _b.findIndex((f) => f.name === name), child);\n    }\n    setChildAt(index, child) {\n        let schema = this.schema;\n        let data = this.data;\n        if (index > -1 && index < this.numCols) {\n            if (!child) {\n                child = new vector_js_1.Vector([(0, data_js_1.makeData)({ type: new type_js_1.Null, length: this.numRows })]);\n            }\n            const fields = schema.fields.slice();\n            const children = data.children.slice();\n            const field = fields[index].clone({ type: child.type });\n            [fields[index], children[index]] = [field, child.data[0]];\n            schema = new schema_js_1.Schema(fields, new Map(this.schema.metadata));\n            data = (0, data_js_1.makeData)({ type: new type_js_1.Struct(fields), children });\n        }\n        return new RecordBatch(schema, data);\n    }\n    /**\n     * Construct a new RecordBatch containing only specified columns.\n     *\n     * @param columnNames Names of columns to keep.\n     * @returns A new RecordBatch of columns matching the specified names.\n     */\n    select(columnNames) {\n        const schema = this.schema.select(columnNames);\n        const type = new type_js_1.Struct(schema.fields);\n        const children = [];\n        for (const name of columnNames) {\n            const index = this.schema.fields.findIndex((f) => f.name === name);\n            if (~index) {\n                children[index] = this.data.children[index];\n            }\n        }\n        return new RecordBatch(schema, (0, data_js_1.makeData)({ type, length: this.numRows, children }));\n    }\n    /**\n     * Construct a new RecordBatch containing only columns at the specified indices.\n     *\n     * @param columnIndices Indices of columns to keep.\n     * @returns A new RecordBatch of columns matching at the specified indices.\n     */\n    selectAt(columnIndices) {\n        const schema = this.schema.selectAt(columnIndices);\n        const children = columnIndices.map((i) => this.data.children[i]).filter(Boolean);\n        const subset = (0, data_js_1.makeData)({ type: new type_js_1.Struct(schema.fields), length: this.numRows, children });\n        return new RecordBatch(schema, subset);\n    }\n}\nexports.RecordBatch = RecordBatch;\n_a = Symbol.toStringTag;\n// Initialize this static property via an IIFE so bundlers don't tree-shake\n// out this logic, but also so we're still compliant with `\"sideEffects\": false`\nRecordBatch[_a] = ((proto) => {\n    proto._nullCount = -1;\n    proto[Symbol.isConcatSpreadable] = true;\n    return 'RecordBatch';\n})(RecordBatch.prototype);\n/** @ignore */\nfunction ensureSameLengthData(schema, chunks, maxLength = chunks.reduce((max, col) => Math.max(max, col.length), 0)) {\n    var _b;\n    const fields = [...schema.fields];\n    const children = [...chunks];\n    const nullBitmapSize = ((maxLength + 63) & ~63) >> 3;\n    for (const [idx, field] of schema.fields.entries()) {\n        const chunk = chunks[idx];\n        if (!chunk || chunk.length !== maxLength) {\n            fields[idx] = field.clone({ nullable: true });\n            children[idx] = (_b = chunk === null || chunk === void 0 ? void 0 : chunk._changeLengthAndBackfillNullBitmap(maxLength)) !== null && _b !== void 0 ? _b : (0, data_js_1.makeData)({\n                type: field.type,\n                length: maxLength,\n                nullCount: maxLength,\n                nullBitmap: new Uint8Array(nullBitmapSize)\n            });\n        }\n    }\n    return [\n        schema.assign(fields),\n        (0, data_js_1.makeData)({ type: new type_js_1.Struct(fields), length: maxLength, children })\n    ];\n}\n/** @ignore */\nfunction collectDictionaries(fields, children, dictionaries = new Map()) {\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        const data = children[i];\n        if (type_js_1.DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                if (data.dictionary) {\n                    dictionaries.set(type.id, data.dictionary);\n                }\n            }\n            else if (dictionaries.get(type.id) !== data.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            collectDictionaries(type.children, data.children, dictionaries);\n        }\n    }\n    return dictionaries;\n}\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\nclass _InternalEmptyPlaceholderRecordBatch extends RecordBatch {\n    constructor(schema) {\n        const children = schema.fields.map((f) => (0, data_js_1.makeData)({ type: f.type }));\n        const data = (0, data_js_1.makeData)({ type: new type_js_1.Struct(schema.fields), nullCount: 0, children });\n        super(schema, data);\n    }\n}\nexports._InternalEmptyPlaceholderRecordBatch = _InternalEmptyPlaceholderRecordBatch;\n\n//# sourceMappingURL=recordbatch.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/recordbatch.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/row/map.js":
/*!**********************************************!*\
  !*** ./node_modules/apache-arrow/row/map.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MapRow = exports.kVals = exports.kKeys = void 0;\nconst vector_js_1 = __webpack_require__(/*! ../vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst pretty_js_1 = __webpack_require__(/*! ../util/pretty.js */ \"./node_modules/apache-arrow/util/pretty.js\");\nconst get_js_1 = __webpack_require__(/*! ../visitor/get.js */ \"./node_modules/apache-arrow/visitor/get.js\");\nconst set_js_1 = __webpack_require__(/*! ../visitor/set.js */ \"./node_modules/apache-arrow/visitor/set.js\");\n/** @ignore */ exports.kKeys = Symbol.for('keys');\n/** @ignore */ exports.kVals = Symbol.for('vals');\nclass MapRow {\n    constructor(slice) {\n        this[exports.kKeys] = new vector_js_1.Vector([slice.children[0]]).memoize();\n        this[exports.kVals] = slice.children[1];\n        return new Proxy(this, new MapRowProxyHandler());\n    }\n    [Symbol.iterator]() {\n        return new MapRowIterator(this[exports.kKeys], this[exports.kVals]);\n    }\n    get size() { return this[exports.kKeys].length; }\n    toArray() { return Object.values(this.toJSON()); }\n    toJSON() {\n        const keys = this[exports.kKeys];\n        const vals = this[exports.kVals];\n        const json = {};\n        for (let i = -1, n = keys.length; ++i < n;) {\n            json[keys.get(i)] = get_js_1.instance.visit(vals, i);\n        }\n        return json;\n    }\n    toString() {\n        return `{${[...this].map(([key, val]) => `${(0, pretty_js_1.valueToString)(key)}: ${(0, pretty_js_1.valueToString)(val)}`).join(', ')}}`;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.toString();\n    }\n}\nexports.MapRow = MapRow;\nclass MapRowIterator {\n    constructor(keys, vals) {\n        this.keys = keys;\n        this.vals = vals;\n        this.keyIndex = 0;\n        this.numKeys = keys.length;\n    }\n    [Symbol.iterator]() { return this; }\n    next() {\n        const i = this.keyIndex;\n        if (i === this.numKeys) {\n            return { done: true, value: null };\n        }\n        this.keyIndex++;\n        return {\n            done: false,\n            value: [\n                this.keys.get(i),\n                get_js_1.instance.visit(this.vals, i),\n            ]\n        };\n    }\n}\n/** @ignore */\nclass MapRowProxyHandler {\n    isExtensible() { return false; }\n    deleteProperty() { return false; }\n    preventExtensions() { return true; }\n    ownKeys(row) {\n        return row[exports.kKeys].toArray().map(String);\n    }\n    has(row, key) {\n        return row[exports.kKeys].includes(key);\n    }\n    getOwnPropertyDescriptor(row, key) {\n        const idx = row[exports.kKeys].indexOf(key);\n        if (idx !== -1) {\n            return { writable: true, enumerable: true, configurable: true };\n        }\n        return;\n    }\n    get(row, key) {\n        // Look up key in row first\n        if (Reflect.has(row, key)) {\n            return row[key];\n        }\n        const idx = row[exports.kKeys].indexOf(key);\n        if (idx !== -1) {\n            const val = get_js_1.instance.visit(Reflect.get(row, exports.kVals), idx);\n            // Cache key/val lookups\n            Reflect.set(row, key, val);\n            return val;\n        }\n    }\n    set(row, key, val) {\n        const idx = row[exports.kKeys].indexOf(key);\n        if (idx !== -1) {\n            set_js_1.instance.visit(Reflect.get(row, exports.kVals), idx, val);\n            // Cache key/val lookups\n            return Reflect.set(row, key, val);\n        }\n        else if (Reflect.has(row, key)) {\n            return Reflect.set(row, key, val);\n        }\n        return false;\n    }\n}\nObject.defineProperties(MapRow.prototype, {\n    [Symbol.toStringTag]: { enumerable: false, configurable: false, value: 'Row' },\n    [exports.kKeys]: { writable: true, enumerable: false, configurable: false, value: null },\n    [exports.kVals]: { writable: true, enumerable: false, configurable: false, value: null },\n});\n\n//# sourceMappingURL=map.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/row/map.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/row/struct.js":
/*!*************************************************!*\
  !*** ./node_modules/apache-arrow/row/struct.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StructRow = void 0;\nconst pretty_js_1 = __webpack_require__(/*! ../util/pretty.js */ \"./node_modules/apache-arrow/util/pretty.js\");\nconst get_js_1 = __webpack_require__(/*! ../visitor/get.js */ \"./node_modules/apache-arrow/visitor/get.js\");\nconst set_js_1 = __webpack_require__(/*! ../visitor/set.js */ \"./node_modules/apache-arrow/visitor/set.js\");\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\nclass StructRow {\n    constructor(parent, rowIndex) {\n        this[kParent] = parent;\n        this[kRowIndex] = rowIndex;\n        return new Proxy(this, new StructRowProxyHandler());\n    }\n    toArray() { return Object.values(this.toJSON()); }\n    toJSON() {\n        const i = this[kRowIndex];\n        const parent = this[kParent];\n        const keys = parent.type.children;\n        const json = {};\n        for (let j = -1, n = keys.length; ++j < n;) {\n            json[keys[j].name] = get_js_1.instance.visit(parent.children[j], i);\n        }\n        return json;\n    }\n    toString() {\n        return `{${[...this].map(([key, val]) => `${(0, pretty_js_1.valueToString)(key)}: ${(0, pretty_js_1.valueToString)(val)}`).join(', ')}}`;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.toString();\n    }\n    [Symbol.iterator]() {\n        return new StructRowIterator(this[kParent], this[kRowIndex]);\n    }\n}\nexports.StructRow = StructRow;\nclass StructRowIterator {\n    constructor(data, rowIndex) {\n        this.childIndex = 0;\n        this.children = data.children;\n        this.rowIndex = rowIndex;\n        this.childFields = data.type.children;\n        this.numChildren = this.childFields.length;\n    }\n    [Symbol.iterator]() { return this; }\n    next() {\n        const i = this.childIndex;\n        if (i < this.numChildren) {\n            this.childIndex = i + 1;\n            return {\n                done: false,\n                value: [\n                    this.childFields[i].name,\n                    get_js_1.instance.visit(this.children[i], this.rowIndex)\n                ]\n            };\n        }\n        return { done: true, value: null };\n    }\n}\nObject.defineProperties(StructRow.prototype, {\n    [Symbol.toStringTag]: { enumerable: false, configurable: false, value: 'Row' },\n    [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n    [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n});\nclass StructRowProxyHandler {\n    isExtensible() { return false; }\n    deleteProperty() { return false; }\n    preventExtensions() { return true; }\n    ownKeys(row) {\n        return row[kParent].type.children.map((f) => f.name);\n    }\n    has(row, key) {\n        return row[kParent].type.children.findIndex((f) => f.name === key) !== -1;\n    }\n    getOwnPropertyDescriptor(row, key) {\n        if (row[kParent].type.children.findIndex((f) => f.name === key) !== -1) {\n            return { writable: true, enumerable: true, configurable: true };\n        }\n        return;\n    }\n    get(row, key) {\n        // Look up key in row first\n        if (Reflect.has(row, key)) {\n            return row[key];\n        }\n        const idx = row[kParent].type.children.findIndex((f) => f.name === key);\n        if (idx !== -1) {\n            const val = get_js_1.instance.visit(row[kParent].children[idx], row[kRowIndex]);\n            // Cache key/val lookups\n            Reflect.set(row, key, val);\n            return val;\n        }\n    }\n    set(row, key, val) {\n        const idx = row[kParent].type.children.findIndex((f) => f.name === key);\n        if (idx !== -1) {\n            set_js_1.instance.visit(row[kParent].children[idx], row[kRowIndex], val);\n            // Cache key/val lookups\n            return Reflect.set(row, key, val);\n        }\n        else if (Reflect.has(row, key) || typeof key === 'symbol') {\n            return Reflect.set(row, key, val);\n        }\n        return false;\n    }\n}\n\n//# sourceMappingURL=struct.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/row/struct.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/schema.js":
/*!*********************************************!*\
  !*** ./node_modules/apache-arrow/schema.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Field = exports.Schema = void 0;\nconst type_js_1 = __webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/type.js\");\nclass Schema {\n    constructor(fields = [], metadata, dictionaries) {\n        this.fields = (fields || []);\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    get [Symbol.toStringTag]() { return 'Schema'; }\n    get names() { return this.fields.map((f) => f.name); }\n    toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n    /**\n     * Construct a new Schema containing only specified fields.\n     *\n     * @param fieldNames Names of fields to keep.\n     * @returns A new Schema of fields matching the specified names.\n     */\n    select(fieldNames) {\n        const names = new Set(fieldNames);\n        const fields = this.fields.filter((f) => names.has(f.name));\n        return new Schema(fields, this.metadata);\n    }\n    /**\n     * Construct a new Schema containing only fields at the specified indices.\n     *\n     * @param fieldIndices Indices of fields to keep.\n     * @returns A new Schema of fields at the specified indices.\n     */\n    selectAt(fieldIndices) {\n        const fields = fieldIndices.map((i) => this.fields[i]).filter(Boolean);\n        return new Schema(fields, this.metadata);\n    }\n    assign(...args) {\n        const other = (args[0] instanceof Schema\n            ? args[0]\n            : Array.isArray(args[0])\n                ? new Schema(args[0])\n                : new Schema(args));\n        const curFields = [...this.fields];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        });\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n        return new Schema([...curFields, ...newFields], metadata, new Map([...this.dictionaries, ...newDictionaries]));\n    }\n}\nexports.Schema = Schema;\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nSchema.prototype.fields = null;\nSchema.prototype.metadata = null;\nSchema.prototype.dictionaries = null;\nclass Field {\n    constructor(name, type, nullable = false, metadata) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n    /** @nocollapse */\n    static new(...args) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field(`${name}`, type, nullable, metadata);\n    }\n    get typeId() { return this.type.typeId; }\n    get [Symbol.toStringTag]() { return 'Field'; }\n    toString() { return `${this.name}: ${this.type}`; }\n    clone(...args) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({ name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata } = args[0]);\n        return Field.new(name, type, nullable, metadata);\n    }\n}\nexports.Field = Field;\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nField.prototype.type = null;\nField.prototype.name = null;\nField.prototype.nullable = null;\nField.prototype.metadata = null;\n/** @ignore */\nfunction mergeMaps(m1, m2) {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n/** @ignore */\nfunction generateDictionaryMap(fields, dictionaries = new Map()) {\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (type_js_1.DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            }\n            else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n    return dictionaries;\n}\n\n//# sourceMappingURL=schema.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/schema.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/table.js":
/*!********************************************!*\
  !*** ./node_modules/apache-arrow/table.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.tableFromArrays = exports.makeTable = exports.Table = void 0;\nconst enum_js_1 = __webpack_require__(/*! ./enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst data_js_1 = __webpack_require__(/*! ./data.js */ \"./node_modules/apache-arrow/data.js\");\nconst factories_js_1 = __webpack_require__(/*! ./factories.js */ \"./node_modules/apache-arrow/factories.js\");\nconst vector_js_1 = __webpack_require__(/*! ./vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst schema_js_1 = __webpack_require__(/*! ./schema.js */ \"./node_modules/apache-arrow/schema.js\");\nconst type_js_1 = __webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/type.js\");\nconst typecomparator_js_1 = __webpack_require__(/*! ./visitor/typecomparator.js */ \"./node_modules/apache-arrow/visitor/typecomparator.js\");\nconst recordbatch_js_1 = __webpack_require__(/*! ./util/recordbatch.js */ \"./node_modules/apache-arrow/util/recordbatch.js\");\nconst chunk_js_1 = __webpack_require__(/*! ./util/chunk.js */ \"./node_modules/apache-arrow/util/chunk.js\");\nconst get_js_1 = __webpack_require__(/*! ./visitor/get.js */ \"./node_modules/apache-arrow/visitor/get.js\");\nconst set_js_1 = __webpack_require__(/*! ./visitor/set.js */ \"./node_modules/apache-arrow/visitor/set.js\");\nconst indexof_js_1 = __webpack_require__(/*! ./visitor/indexof.js */ \"./node_modules/apache-arrow/visitor/indexof.js\");\nconst iterator_js_1 = __webpack_require__(/*! ./visitor/iterator.js */ \"./node_modules/apache-arrow/visitor/iterator.js\");\nconst bytelength_js_1 = __webpack_require__(/*! ./visitor/bytelength.js */ \"./node_modules/apache-arrow/visitor/bytelength.js\");\nconst vector_js_2 = __webpack_require__(/*! ./util/vector.js */ \"./node_modules/apache-arrow/util/vector.js\");\nconst recordbatch_js_2 = __webpack_require__(/*! ./recordbatch.js */ \"./node_modules/apache-arrow/recordbatch.js\");\n/**\n * Tables are collections of {@link Vector}s and have a {@link Schema}. Use the convenience methods {@link makeTable}\n * or {@link tableFromArrays} to create a table in JavaScript. To create a table from the IPC format, use\n * {@link tableFromIPC}.\n */\nclass Table {\n    constructor(...args) {\n        var _b, _c;\n        if (args.length === 0) {\n            this.batches = [];\n            this.schema = new schema_js_1.Schema([]);\n            this._offsets = [0];\n            return this;\n        }\n        let schema;\n        let offsets;\n        if (args[0] instanceof schema_js_1.Schema) {\n            schema = args.shift();\n        }\n        if (args[args.length - 1] instanceof Uint32Array) {\n            offsets = args.pop();\n        }\n        const unwrap = (x) => {\n            if (x) {\n                if (x instanceof recordbatch_js_2.RecordBatch) {\n                    return [x];\n                }\n                else if (x instanceof Table) {\n                    return x.batches;\n                }\n                else if (x instanceof data_js_1.Data) {\n                    if (x.type instanceof type_js_1.Struct) {\n                        return [new recordbatch_js_2.RecordBatch(new schema_js_1.Schema(x.type.children), x)];\n                    }\n                }\n                else if (Array.isArray(x)) {\n                    return x.flatMap(v => unwrap(v));\n                }\n                else if (typeof x[Symbol.iterator] === 'function') {\n                    return [...x].flatMap(v => unwrap(v));\n                }\n                else if (typeof x === 'object') {\n                    const keys = Object.keys(x);\n                    const vecs = keys.map((k) => new vector_js_1.Vector([x[k]]));\n                    const schema = new schema_js_1.Schema(keys.map((k, i) => new schema_js_1.Field(String(k), vecs[i].type)));\n                    const [, batches] = (0, recordbatch_js_1.distributeVectorsIntoRecordBatches)(schema, vecs);\n                    return batches.length === 0 ? [new recordbatch_js_2.RecordBatch(x)] : batches;\n                }\n            }\n            return [];\n        };\n        const batches = args.flatMap(v => unwrap(v));\n        schema = (_c = schema !== null && schema !== void 0 ? schema : (_b = batches[0]) === null || _b === void 0 ? void 0 : _b.schema) !== null && _c !== void 0 ? _c : new schema_js_1.Schema([]);\n        if (!(schema instanceof schema_js_1.Schema)) {\n            throw new TypeError('Table constructor expects a [Schema, RecordBatch[]] pair.');\n        }\n        for (const batch of batches) {\n            if (!(batch instanceof recordbatch_js_2.RecordBatch)) {\n                throw new TypeError('Table constructor expects a [Schema, RecordBatch[]] pair.');\n            }\n            if (!(0, typecomparator_js_1.compareSchemas)(schema, batch.schema)) {\n                throw new TypeError('Table and inner RecordBatch schemas must be equivalent.');\n            }\n        }\n        this.schema = schema;\n        this.batches = batches;\n        this._offsets = offsets !== null && offsets !== void 0 ? offsets : (0, chunk_js_1.computeChunkOffsets)(this.data);\n    }\n    /**\n     * The contiguous {@link RecordBatch `RecordBatch`} chunks of the Table rows.\n     */\n    get data() { return this.batches.map(({ data }) => data); }\n    /**\n     * The number of columns in this Table.\n     */\n    get numCols() { return this.schema.fields.length; }\n    /**\n     * The number of rows in this Table.\n     */\n    get numRows() {\n        return this.data.reduce((numRows, data) => numRows + data.length, 0);\n    }\n    /**\n     * The number of null rows in this Table.\n     */\n    get nullCount() {\n        if (this._nullCount === -1) {\n            this._nullCount = (0, chunk_js_1.computeChunkNullCounts)(this.data);\n        }\n        return this._nullCount;\n    }\n    /**\n     * Check whether an element is null.\n     *\n     * @param index The index at which to read the validity bitmap.\n     */\n    // @ts-ignore\n    isValid(index) { return false; }\n    /**\n     * Get an element value by position.\n     *\n     * @param index The index of the element to read.\n     */\n    // @ts-ignore\n    get(index) { return null; }\n    /**\n     * Set an element value by position.\n     *\n     * @param index The index of the element to write.\n     * @param value The value to set.\n     */\n    // @ts-ignore\n    set(index, value) { return; }\n    /**\n     * Retrieve the index of the first occurrence of a value in an Vector.\n     *\n     * @param element The value to locate in the Vector.\n     * @param offset The index at which to begin the search. If offset is omitted, the search starts at index 0.\n     */\n    // @ts-ignore\n    indexOf(element, offset) { return -1; }\n    /**\n     * Get the size in bytes of an element by index.\n     * @param index The index at which to get the byteLength.\n     */\n    // @ts-ignore\n    getByteLength(index) { return 0; }\n    /**\n     * Iterator for rows in this Table.\n     */\n    [Symbol.iterator]() {\n        return iterator_js_1.instance.visit(new vector_js_1.Vector(this.data));\n    }\n    /**\n     * Return a JavaScript Array of the Table rows.\n     *\n     * @returns An Array of Table rows.\n     */\n    toArray() {\n        return [...this];\n    }\n    /**\n     * Returns a string representation of the Table rows.\n     *\n     * @returns A string representation of the Table rows.\n     */\n    toString() {\n        return `[\\n  ${this.toArray().join(',\\n  ')}\\n]`;\n    }\n    /**\n     * Combines two or more Tables of the same schema.\n     *\n     * @param others Additional Tables to add to the end of this Tables.\n     */\n    concat(...others) {\n        const schema = this.schema;\n        const data = this.data.concat(others.flatMap(({ data }) => data));\n        return new Table(schema, data.map((data) => new recordbatch_js_2.RecordBatch(schema, data)));\n    }\n    /**\n     * Return a zero-copy sub-section of this Table.\n     *\n     * @param begin The beginning of the specified portion of the Table.\n     * @param end The end of the specified portion of the Table. This is exclusive of the element at the index 'end'.\n     */\n    slice(begin, end) {\n        const schema = this.schema;\n        [begin, end] = (0, vector_js_2.clampRange)({ length: this.numRows }, begin, end);\n        const data = (0, chunk_js_1.sliceChunks)(this.data, this._offsets, begin, end);\n        return new Table(schema, data.map((chunk) => new recordbatch_js_2.RecordBatch(schema, chunk)));\n    }\n    /**\n     * Returns a child Vector by name, or null if this Vector has no child with the given name.\n     *\n     * @param name The name of the child to retrieve.\n     */\n    getChild(name) {\n        return this.getChildAt(this.schema.fields.findIndex((f) => f.name === name));\n    }\n    /**\n     * Returns a child Vector by index, or null if this Vector has no child at the supplied index.\n     *\n     * @param index The index of the child to retrieve.\n     */\n    getChildAt(index) {\n        if (index > -1 && index < this.schema.fields.length) {\n            const data = this.data.map((data) => data.children[index]);\n            if (data.length === 0) {\n                const { type } = this.schema.fields[index];\n                const empty = (0, data_js_1.makeData)({ type, length: 0, nullCount: 0 });\n                data.push(empty._changeLengthAndBackfillNullBitmap(this.numRows));\n            }\n            return new vector_js_1.Vector(data);\n        }\n        return null;\n    }\n    /**\n     * Sets a child Vector by name.\n     *\n     * @param name The name of the child to overwrite.\n     * @returns A new Table with the supplied child for the specified name.\n     */\n    setChild(name, child) {\n        var _b;\n        return this.setChildAt((_b = this.schema.fields) === null || _b === void 0 ? void 0 : _b.findIndex((f) => f.name === name), child);\n    }\n    setChildAt(index, child) {\n        let schema = this.schema;\n        let batches = [...this.batches];\n        if (index > -1 && index < this.numCols) {\n            if (!child) {\n                child = new vector_js_1.Vector([(0, data_js_1.makeData)({ type: new type_js_1.Null, length: this.numRows })]);\n            }\n            const fields = schema.fields.slice();\n            const field = fields[index].clone({ type: child.type });\n            const children = this.schema.fields.map((_, i) => this.getChildAt(i));\n            [fields[index], children[index]] = [field, child];\n            [schema, batches] = (0, recordbatch_js_1.distributeVectorsIntoRecordBatches)(schema, children);\n        }\n        return new Table(schema, batches);\n    }\n    /**\n     * Construct a new Table containing only specified columns.\n     *\n     * @param columnNames Names of columns to keep.\n     * @returns A new Table of columns matching the specified names.\n     */\n    select(columnNames) {\n        const nameToIndex = this.schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n        return this.selectAt(columnNames.map((columnName) => nameToIndex.get(columnName)).filter((x) => x > -1));\n    }\n    /**\n     * Construct a new Table containing only columns at the specified indices.\n     *\n     * @param columnIndices Indices of columns to keep.\n     * @returns A new Table of columns at the specified indices.\n     */\n    selectAt(columnIndices) {\n        const schema = this.schema.selectAt(columnIndices);\n        const data = this.batches.map((batch) => batch.selectAt(columnIndices));\n        return new Table(schema, data);\n    }\n    assign(other) {\n        const fields = this.schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []]);\n        const schema = this.schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_, i) => [i, oldToNew[i]]).map(([i, j]) => (j === undefined ? this.getChildAt(i) : other.getChildAt(j))),\n            ...indices.map((i) => other.getChildAt(i))\n        ].filter(Boolean);\n        return new Table(...(0, recordbatch_js_1.distributeVectorsIntoRecordBatches)(schema, columns));\n    }\n}\nexports.Table = Table;\n_a = Symbol.toStringTag;\n// Initialize this static property via an IIFE so bundlers don't tree-shake\n// out this logic, but also so we're still compliant with `\"sideEffects\": false`\nTable[_a] = ((proto) => {\n    proto.schema = null;\n    proto.batches = [];\n    proto._offsets = new Uint32Array([0]);\n    proto._nullCount = -1;\n    proto[Symbol.isConcatSpreadable] = true;\n    proto['isValid'] = (0, chunk_js_1.wrapChunkedCall1)(chunk_js_1.isChunkedValid);\n    proto['get'] = (0, chunk_js_1.wrapChunkedCall1)(get_js_1.instance.getVisitFn(enum_js_1.Type.Struct));\n    proto['set'] = (0, chunk_js_1.wrapChunkedCall2)(set_js_1.instance.getVisitFn(enum_js_1.Type.Struct));\n    proto['indexOf'] = (0, chunk_js_1.wrapChunkedIndexOf)(indexof_js_1.instance.getVisitFn(enum_js_1.Type.Struct));\n    proto['getByteLength'] = (0, chunk_js_1.wrapChunkedCall1)(bytelength_js_1.instance.getVisitFn(enum_js_1.Type.Struct));\n    return 'Table';\n})(Table.prototype);\n/**\n * Creates a new Table from an object of typed arrays.\n *\n*  @example\n * ```ts\n * const table = makeTable({\n *   a: new Int8Array([1, 2, 3]),\n * })\n * ```\n *\n * @param input Input an object of typed arrays.\n * @returns A new Table.\n */\nfunction makeTable(input) {\n    const vecs = {};\n    const inputs = Object.entries(input);\n    for (const [key, col] of inputs) {\n        vecs[key] = (0, vector_js_1.makeVector)(col);\n    }\n    return new Table(vecs);\n}\nexports.makeTable = makeTable;\n/**\n * Creates a new Table from an object of typed arrays or JavaScript arrays.\n *\n *  @example\n * ```ts\n * const table = tableFromArrays({\n *   a: [1, 2, 3],\n *   b: new Int8Array([1, 2, 3]),\n * })\n * ```\n *\n * @param input Input an object of typed arrays or JavaScript arrays.\n * @returns A new Table.\n */\nfunction tableFromArrays(input) {\n    const vecs = {};\n    const inputs = Object.entries(input);\n    for (const [key, col] of inputs) {\n        vecs[key] = (0, factories_js_1.vectorFromArray)(col);\n    }\n    return new Table(vecs);\n}\nexports.tableFromArrays = tableFromArrays;\n\n//# sourceMappingURL=table.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/table.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/type.js":
/*!*******************************************!*\
  !*** ./node_modules/apache-arrow/type.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.strideForType = exports.Dictionary = exports.Map_ = exports.FixedSizeList = exports.FixedSizeBinary = exports.SparseUnion = exports.DenseUnion = exports.Union = exports.Struct = exports.List = exports.IntervalYearMonth = exports.IntervalDayTime = exports.Interval = exports.TimestampNanosecond = exports.TimestampMicrosecond = exports.TimestampMillisecond = exports.TimestampSecond = exports.Timestamp = exports.TimeNanosecond = exports.TimeMicrosecond = exports.TimeMillisecond = exports.TimeSecond = exports.Time = exports.DateMillisecond = exports.DateDay = exports.Date_ = exports.Decimal = exports.Bool = exports.Utf8 = exports.Binary = exports.Float64 = exports.Float32 = exports.Float16 = exports.Float = exports.Uint64 = exports.Uint32 = exports.Uint16 = exports.Uint8 = exports.Int64 = exports.Int32 = exports.Int16 = exports.Int8 = exports.Int = exports.Null = exports.DataType = void 0;\nconst enum_js_1 = __webpack_require__(/*! ./enum.js */ \"./node_modules/apache-arrow/enum.js\");\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nclass DataType {\n    /** @nocollapse */ static isNull(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Null; }\n    /** @nocollapse */ static isInt(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Int; }\n    /** @nocollapse */ static isFloat(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Float; }\n    /** @nocollapse */ static isBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Binary; }\n    /** @nocollapse */ static isUtf8(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Utf8; }\n    /** @nocollapse */ static isBool(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Bool; }\n    /** @nocollapse */ static isDecimal(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Decimal; }\n    /** @nocollapse */ static isDate(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Date; }\n    /** @nocollapse */ static isTime(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Time; }\n    /** @nocollapse */ static isTimestamp(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Timestamp; }\n    /** @nocollapse */ static isInterval(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Interval; }\n    /** @nocollapse */ static isList(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.List; }\n    /** @nocollapse */ static isStruct(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Struct; }\n    /** @nocollapse */ static isUnion(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Union; }\n    /** @nocollapse */ static isFixedSizeBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.FixedSizeBinary; }\n    /** @nocollapse */ static isFixedSizeList(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.FixedSizeList; }\n    /** @nocollapse */ static isMap(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Map; }\n    /** @nocollapse */ static isDictionary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === enum_js_1.Type.Dictionary; }\n    /** @nocollapse */ static isDenseUnion(x) { return DataType.isUnion(x) && x.mode === enum_js_1.UnionMode.Dense; }\n    /** @nocollapse */ static isSparseUnion(x) { return DataType.isUnion(x) && x.mode === enum_js_1.UnionMode.Sparse; }\n    get typeId() { return enum_js_1.Type.NONE; }\n}\nexports.DataType = DataType;\n_a = Symbol.toStringTag;\nDataType[_a] = ((proto) => {\n    proto.children = null;\n    proto.ArrayType = Array;\n    return proto[Symbol.toStringTag] = 'DataType';\n})(DataType.prototype);\n/** @ignore */\nclass Null extends DataType {\n    toString() { return `Null`; }\n    get typeId() { return enum_js_1.Type.Null; }\n}\nexports.Null = Null;\n_b = Symbol.toStringTag;\nNull[_b] = ((proto) => proto[Symbol.toStringTag] = 'Null')(Null.prototype);\n/** @ignore */\nclass Int_ extends DataType {\n    constructor(isSigned, bitWidth) {\n        super();\n        this.isSigned = isSigned;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return enum_js_1.Type.Int; }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 8: return this.isSigned ? Int8Array : Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? BigInt64Array : BigUint64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n}\nexports.Int = Int_;\n_c = Symbol.toStringTag;\nInt_[_c] = ((proto) => {\n    proto.isSigned = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Int';\n})(Int_.prototype);\n/** @ignore */\nclass Int8 extends Int_ {\n    constructor() { super(true, 8); }\n    get ArrayType() { return Int8Array; }\n}\nexports.Int8 = Int8;\n/** @ignore */\nclass Int16 extends Int_ {\n    constructor() { super(true, 16); }\n    get ArrayType() { return Int16Array; }\n}\nexports.Int16 = Int16;\n/** @ignore */\nclass Int32 extends Int_ {\n    constructor() { super(true, 32); }\n    get ArrayType() { return Int32Array; }\n}\nexports.Int32 = Int32;\n/** @ignore */\nclass Int64 extends Int_ {\n    constructor() { super(true, 64); }\n    get ArrayType() { return BigInt64Array; }\n}\nexports.Int64 = Int64;\n/** @ignore */\nclass Uint8 extends Int_ {\n    constructor() { super(false, 8); }\n    get ArrayType() { return Uint8Array; }\n}\nexports.Uint8 = Uint8;\n/** @ignore */\nclass Uint16 extends Int_ {\n    constructor() { super(false, 16); }\n    get ArrayType() { return Uint16Array; }\n}\nexports.Uint16 = Uint16;\n/** @ignore */\nclass Uint32 extends Int_ {\n    constructor() { super(false, 32); }\n    get ArrayType() { return Uint32Array; }\n}\nexports.Uint32 = Uint32;\n/** @ignore */\nclass Uint64 extends Int_ {\n    constructor() { super(false, 64); }\n    get ArrayType() { return BigUint64Array; }\n}\nexports.Uint64 = Uint64;\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: BigInt64Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: BigUint64Array });\n/** @ignore */\nclass Float extends DataType {\n    constructor(precision) {\n        super();\n        this.precision = precision;\n    }\n    get typeId() { return enum_js_1.Type.Float; }\n    get ArrayType() {\n        switch (this.precision) {\n            case enum_js_1.Precision.HALF: return Uint16Array;\n            case enum_js_1.Precision.SINGLE: return Float32Array;\n            case enum_js_1.Precision.DOUBLE: return Float64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `Float${(this.precision << 5) || 16}`; }\n}\nexports.Float = Float;\n_d = Symbol.toStringTag;\nFloat[_d] = ((proto) => {\n    proto.precision = null;\n    return proto[Symbol.toStringTag] = 'Float';\n})(Float.prototype);\n/** @ignore */\nclass Float16 extends Float {\n    constructor() { super(enum_js_1.Precision.HALF); }\n}\nexports.Float16 = Float16;\n/** @ignore */\nclass Float32 extends Float {\n    constructor() { super(enum_js_1.Precision.SINGLE); }\n}\nexports.Float32 = Float32;\n/** @ignore */\nclass Float64 extends Float {\n    constructor() { super(enum_js_1.Precision.DOUBLE); }\n}\nexports.Float64 = Float64;\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n/** @ignore */\nclass Binary extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return enum_js_1.Type.Binary; }\n    toString() { return `Binary`; }\n}\nexports.Binary = Binary;\n_e = Symbol.toStringTag;\nBinary[_e] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Binary';\n})(Binary.prototype);\n/** @ignore */\nclass Utf8 extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return enum_js_1.Type.Utf8; }\n    toString() { return `Utf8`; }\n}\nexports.Utf8 = Utf8;\n_f = Symbol.toStringTag;\nUtf8[_f] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Utf8';\n})(Utf8.prototype);\n/** @ignore */\nclass Bool extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return enum_js_1.Type.Bool; }\n    toString() { return `Bool`; }\n}\nexports.Bool = Bool;\n_g = Symbol.toStringTag;\nBool[_g] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Bool';\n})(Bool.prototype);\n/** @ignore */\nclass Decimal extends DataType {\n    constructor(scale, precision, bitWidth = 128) {\n        super();\n        this.scale = scale;\n        this.precision = precision;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return enum_js_1.Type.Decimal; }\n    toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n}\nexports.Decimal = Decimal;\n_h = Symbol.toStringTag;\nDecimal[_h] = ((proto) => {\n    proto.scale = null;\n    proto.precision = null;\n    proto.ArrayType = Uint32Array;\n    return proto[Symbol.toStringTag] = 'Decimal';\n})(Decimal.prototype);\n/** @ignore */\nclass Date_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return enum_js_1.Type.Date; }\n    toString() { return `Date${(this.unit + 1) * 32}<${enum_js_1.DateUnit[this.unit]}>`; }\n}\nexports.Date_ = Date_;\n_j = Symbol.toStringTag;\nDate_[_j] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Date';\n})(Date_.prototype);\n/** @ignore */\nclass DateDay extends Date_ {\n    constructor() { super(enum_js_1.DateUnit.DAY); }\n}\nexports.DateDay = DateDay;\n/** @ignore */\nclass DateMillisecond extends Date_ {\n    constructor() { super(enum_js_1.DateUnit.MILLISECOND); }\n}\nexports.DateMillisecond = DateMillisecond;\n/** @ignore */\nclass Time_ extends DataType {\n    constructor(unit, bitWidth) {\n        super();\n        this.unit = unit;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return enum_js_1.Type.Time; }\n    toString() { return `Time${this.bitWidth}<${enum_js_1.TimeUnit[this.unit]}>`; }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 32: return Int32Array;\n            case 64: return BigInt64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n}\nexports.Time = Time_;\n_k = Symbol.toStringTag;\nTime_[_k] = ((proto) => {\n    proto.unit = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Time';\n})(Time_.prototype);\n/** @ignore */\nclass TimeSecond extends Time_ {\n    constructor() { super(enum_js_1.TimeUnit.SECOND, 32); }\n}\nexports.TimeSecond = TimeSecond;\n/** @ignore */\nclass TimeMillisecond extends Time_ {\n    constructor() { super(enum_js_1.TimeUnit.MILLISECOND, 32); }\n}\nexports.TimeMillisecond = TimeMillisecond;\n/** @ignore */\nclass TimeMicrosecond extends Time_ {\n    constructor() { super(enum_js_1.TimeUnit.MICROSECOND, 64); }\n}\nexports.TimeMicrosecond = TimeMicrosecond;\n/** @ignore */\nclass TimeNanosecond extends Time_ {\n    constructor() { super(enum_js_1.TimeUnit.NANOSECOND, 64); }\n}\nexports.TimeNanosecond = TimeNanosecond;\n/** @ignore */\nclass Timestamp_ extends DataType {\n    constructor(unit, timezone) {\n        super();\n        this.unit = unit;\n        this.timezone = timezone;\n    }\n    get typeId() { return enum_js_1.Type.Timestamp; }\n    toString() { return `Timestamp<${enum_js_1.TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n}\nexports.Timestamp = Timestamp_;\n_l = Symbol.toStringTag;\nTimestamp_[_l] = ((proto) => {\n    proto.unit = null;\n    proto.timezone = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Timestamp';\n})(Timestamp_.prototype);\n/** @ignore */\nclass TimestampSecond extends Timestamp_ {\n    constructor(timezone) { super(enum_js_1.TimeUnit.SECOND, timezone); }\n}\nexports.TimestampSecond = TimestampSecond;\n/** @ignore */\nclass TimestampMillisecond extends Timestamp_ {\n    constructor(timezone) { super(enum_js_1.TimeUnit.MILLISECOND, timezone); }\n}\nexports.TimestampMillisecond = TimestampMillisecond;\n/** @ignore */\nclass TimestampMicrosecond extends Timestamp_ {\n    constructor(timezone) { super(enum_js_1.TimeUnit.MICROSECOND, timezone); }\n}\nexports.TimestampMicrosecond = TimestampMicrosecond;\n/** @ignore */\nclass TimestampNanosecond extends Timestamp_ {\n    constructor(timezone) { super(enum_js_1.TimeUnit.NANOSECOND, timezone); }\n}\nexports.TimestampNanosecond = TimestampNanosecond;\n/** @ignore */\nclass Interval_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return enum_js_1.Type.Interval; }\n    toString() { return `Interval<${enum_js_1.IntervalUnit[this.unit]}>`; }\n}\nexports.Interval = Interval_;\n_m = Symbol.toStringTag;\nInterval_[_m] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Interval';\n})(Interval_.prototype);\n/** @ignore */\nclass IntervalDayTime extends Interval_ {\n    constructor() { super(enum_js_1.IntervalUnit.DAY_TIME); }\n}\nexports.IntervalDayTime = IntervalDayTime;\n/** @ignore */\nclass IntervalYearMonth extends Interval_ {\n    constructor() { super(enum_js_1.IntervalUnit.YEAR_MONTH); }\n}\nexports.IntervalYearMonth = IntervalYearMonth;\n/** @ignore */\nclass List extends DataType {\n    constructor(child) {\n        super();\n        this.children = [child];\n    }\n    get typeId() { return enum_js_1.Type.List; }\n    toString() { return `List<${this.valueType}>`; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n}\nexports.List = List;\n_o = Symbol.toStringTag;\nList[_o] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'List';\n})(List.prototype);\n/** @ignore */\nclass Struct extends DataType {\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    get typeId() { return enum_js_1.Type.Struct; }\n    toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\nexports.Struct = Struct;\n_p = Symbol.toStringTag;\nStruct[_p] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'Struct';\n})(Struct.prototype);\n/** @ignore */\nclass Union_ extends DataType {\n    constructor(mode, typeIds, children) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex, Object.create(null));\n    }\n    get typeId() { return enum_js_1.Type.Union; }\n    toString() {\n        return `${this[Symbol.toStringTag]}<${this.children.map((x) => `${x.type}`).join(` | `)}>`;\n    }\n}\nexports.Union = Union_;\n_q = Symbol.toStringTag;\nUnion_[_q] = ((proto) => {\n    proto.mode = null;\n    proto.typeIds = null;\n    proto.children = null;\n    proto.typeIdToChildIndex = null;\n    proto.ArrayType = Int8Array;\n    return proto[Symbol.toStringTag] = 'Union';\n})(Union_.prototype);\n/** @ignore */\nclass DenseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(enum_js_1.UnionMode.Dense, typeIds, children);\n    }\n}\nexports.DenseUnion = DenseUnion;\n/** @ignore */\nclass SparseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(enum_js_1.UnionMode.Sparse, typeIds, children);\n    }\n}\nexports.SparseUnion = SparseUnion;\n/** @ignore */\nclass FixedSizeBinary extends DataType {\n    constructor(byteWidth) {\n        super();\n        this.byteWidth = byteWidth;\n    }\n    get typeId() { return enum_js_1.Type.FixedSizeBinary; }\n    toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n}\nexports.FixedSizeBinary = FixedSizeBinary;\n_r = Symbol.toStringTag;\nFixedSizeBinary[_r] = ((proto) => {\n    proto.byteWidth = null;\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n})(FixedSizeBinary.prototype);\n/** @ignore */\nclass FixedSizeList extends DataType {\n    constructor(listSize, child) {\n        super();\n        this.listSize = listSize;\n        this.children = [child];\n    }\n    get typeId() { return enum_js_1.Type.FixedSizeList; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n    toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n}\nexports.FixedSizeList = FixedSizeList;\n_s = Symbol.toStringTag;\nFixedSizeList[_s] = ((proto) => {\n    proto.children = null;\n    proto.listSize = null;\n    return proto[Symbol.toStringTag] = 'FixedSizeList';\n})(FixedSizeList.prototype);\n/** @ignore */\nclass Map_ extends DataType {\n    constructor(child, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    get typeId() { return enum_js_1.Type.Map; }\n    get keyType() { return this.children[0].type.children[0].type; }\n    get valueType() { return this.children[0].type.children[1].type; }\n    get childType() { return this.children[0].type; }\n    toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\nexports.Map_ = Map_;\n_t = Symbol.toStringTag;\nMap_[_t] = ((proto) => {\n    proto.children = null;\n    proto.keysSorted = null;\n    return proto[Symbol.toStringTag] = 'Map_';\n})(Map_.prototype);\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n/** @ignore */\nclass Dictionary extends DataType {\n    constructor(dictionary, indices, id, isOrdered) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : (typeof id === 'number' ? id : id.low);\n    }\n    get typeId() { return enum_js_1.Type.Dictionary; }\n    get children() { return this.dictionary.children; }\n    get valueType() { return this.dictionary; }\n    get ArrayType() { return this.dictionary.ArrayType; }\n    toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n}\nexports.Dictionary = Dictionary;\n_u = Symbol.toStringTag;\nDictionary[_u] = ((proto) => {\n    proto.id = null;\n    proto.indices = null;\n    proto.isOrdered = null;\n    proto.dictionary = null;\n    return proto[Symbol.toStringTag] = 'Dictionary';\n})(Dictionary.prototype);\n/** @ignore */\nfunction strideForType(type) {\n    const t = type;\n    switch (type.typeId) {\n        case enum_js_1.Type.Decimal: return type.bitWidth / 32;\n        case enum_js_1.Type.Timestamp: return 2;\n        case enum_js_1.Type.Date: return 1 + t.unit;\n        case enum_js_1.Type.Interval: return 1 + t.unit;\n        // case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        // case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case enum_js_1.Type.FixedSizeList: return t.listSize;\n        case enum_js_1.Type.FixedSizeBinary: return t.byteWidth;\n        default: return 1;\n    }\n}\nexports.strideForType = strideForType;\n\n//# sourceMappingURL=type.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/type.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/util/bit.js":
/*!***********************************************!*\
  !*** ./node_modules/apache-arrow/util/bit.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.popcnt_uint32 = exports.popcnt_array = exports.popcnt_bit_range = exports.BitIterator = exports.packBools = exports.truncateBitmap = exports.setBool = exports.getBit = exports.getBool = void 0;\n/** @ignore */\nfunction getBool(_data, _index, byte, bit) {\n    return (byte & 1 << bit) !== 0;\n}\nexports.getBool = getBool;\n/** @ignore */\nfunction getBit(_data, _index, byte, bit) {\n    return (byte & 1 << bit) >> bit;\n}\nexports.getBit = getBit;\n/** @ignore */\nfunction setBool(bytes, index, value) {\n    return value ?\n        !!(bytes[index >> 3] |= (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false;\n}\nexports.setBool = setBool;\n/** @ignore */\nfunction truncateBitmap(offset, length, bitmap) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(new BitIterator(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\nexports.truncateBitmap = truncateBitmap;\n/** @ignore */\nfunction packBools(values) {\n    const xs = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) {\n        xs[i++] = byte;\n    }\n    const b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\nexports.packBools = packBools;\n/** @ignore */\nclass BitIterator {\n    constructor(bytes, begin, length, context, get) {\n        this.bytes = bytes;\n        this.length = length;\n        this.context = context;\n        this.get = get;\n        this.bit = begin % 8;\n        this.byteIndex = begin >> 3;\n        this.byte = bytes[this.byteIndex++];\n        this.index = 0;\n    }\n    next() {\n        if (this.index < this.length) {\n            if (this.bit === 8) {\n                this.bit = 0;\n                this.byte = this.bytes[this.byteIndex++];\n            }\n            return {\n                value: this.get(this.context, this.index++, this.byte, this.bit++)\n            };\n        }\n        return { done: true, value: null };\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\nexports.BitIterator = BitIterator;\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nfunction popcnt_bit_range(data, lhs, rhs) {\n    if (rhs - lhs <= 0) {\n        return 0;\n    }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of new BitIterator(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n    // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n    popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3));\n}\nexports.popcnt_bit_range = popcnt_bit_range;\n/** @ignore */\nfunction popcnt_array(arr, byteOffset, byteLength) {\n    let cnt = 0, pos = Math.trunc(byteOffset);\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len = byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\nexports.popcnt_array = popcnt_array;\n/** @ignore */\nfunction popcnt_uint32(uint32) {\n    let i = Math.trunc(uint32);\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\nexports.popcnt_uint32 = popcnt_uint32;\n\n//# sourceMappingURL=bit.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/util/bit.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/util/bn.js":
/*!**********************************************!*\
  !*** ./node_modules/apache-arrow/util/bn.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BN = exports.bignumToBigInt = exports.bignumToString = exports.isArrowBigNumSymbol = void 0;\nconst buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\nconst compat_js_1 = __webpack_require__(/*! ./compat.js */ \"./node_modules/apache-arrow/util/compat.js\");\n/** @ignore */\nexports.isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n/** @ignore */\nfunction BigNum(x, ...xs) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf((0, buffer_js_1.toArrayBufferView)(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\nBigNum.prototype[exports.isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function () { return `\"${(0, exports.bignumToString)(this)}\"`; };\nBigNum.prototype.valueOf = function () { return bignumToNumber(this); };\nBigNum.prototype.toString = function () { return (0, exports.bignumToString)(this); };\nBigNum.prototype[Symbol.toPrimitive] = function (hint = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return (0, exports.bignumToString)(this);\n        case 'default': return (0, exports.bignumToBigInt)(this);\n    }\n    // @ts-ignore\n    return (0, exports.bignumToString)(this);\n};\n/** @ignore */\nfunction SignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(...args) { return BigNum.apply(this, args); }\nObject.setPrototypeOf(SignedBigNum.prototype, Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype, BigNum.prototype, { 'constructor': SignedBigNum, 'signed': true, 'TypedArray': Int32Array, 'BigIntArray': compat_js_1.BigInt64Array });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': compat_js_1.BigUint64Array });\nObject.assign(DecimalBigNum.prototype, BigNum.prototype, { 'constructor': DecimalBigNum, 'signed': true, 'TypedArray': Uint32Array, 'BigIntArray': compat_js_1.BigUint64Array });\n/** @ignore */\nfunction bignumToNumber(bn) {\n    const { buffer, byteOffset, length, 'signed': signed } = bn;\n    const words = new compat_js_1.BigUint64Array(buffer, byteOffset, length);\n    const negative = signed && words[words.length - 1] & (BigInt(1) << BigInt(63));\n    let number = negative ? BigInt(1) : BigInt(0);\n    let i = BigInt(0);\n    if (!negative) {\n        for (const word of words) {\n            number += word * (BigInt(1) << (BigInt(32) * i++));\n        }\n    }\n    else {\n        for (const word of words) {\n            number += ~word * (BigInt(1) << (BigInt(32) * i++));\n        }\n        number *= BigInt(-1);\n    }\n    return number;\n}\nif (!compat_js_1.BigIntAvailable) {\n    exports.bignumToString = decimalToString;\n    exports.bignumToBigInt = exports.bignumToString;\n}\nelse {\n    exports.bignumToBigInt = ((a) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : decimalToString(a));\n    exports.bignumToString = ((a) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n/** @ignore */\nfunction decimalToString(a) {\n    let digits = '';\n    const base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    const checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1;\n    const n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n/** @ignore */\nclass BN {\n    /** @nocollapse */\n    static new(num, isSigned) {\n        switch (isSigned) {\n            case true: return new SignedBigNum(num);\n            case false: return new UnsignedBigNum(num);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case compat_js_1.BigInt64Array:\n                return new SignedBigNum(num);\n        }\n        if (num.byteLength === 16) {\n            return new DecimalBigNum(num);\n        }\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static signed(num) {\n        return new SignedBigNum(num);\n    }\n    /** @nocollapse */\n    static unsigned(num) {\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static decimal(num) {\n        return new DecimalBigNum(num);\n    }\n    constructor(num, isSigned) {\n        return BN.new(num, isSigned);\n    }\n}\nexports.BN = BN;\n\n//# sourceMappingURL=bn.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/util/bn.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/util/buffer.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/util/buffer.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.compareArrayLike = exports.rebaseValueOffsets = exports.toUint8ClampedArrayAsyncIterator = exports.toFloat64ArrayAsyncIterator = exports.toFloat32ArrayAsyncIterator = exports.toUint32ArrayAsyncIterator = exports.toUint16ArrayAsyncIterator = exports.toUint8ArrayAsyncIterator = exports.toInt32ArrayAsyncIterator = exports.toInt16ArrayAsyncIterator = exports.toInt8ArrayAsyncIterator = exports.toArrayBufferViewAsyncIterator = exports.toUint8ClampedArrayIterator = exports.toFloat64ArrayIterator = exports.toFloat32ArrayIterator = exports.toUint32ArrayIterator = exports.toUint16ArrayIterator = exports.toUint8ArrayIterator = exports.toInt32ArrayIterator = exports.toInt16ArrayIterator = exports.toInt8ArrayIterator = exports.toArrayBufferViewIterator = exports.toUint8ClampedArray = exports.toFloat64Array = exports.toFloat32Array = exports.toBigUint64Array = exports.toUint32Array = exports.toUint16Array = exports.toUint8Array = exports.toBigInt64Array = exports.toInt32Array = exports.toInt16Array = exports.toInt8Array = exports.toArrayBufferView = exports.joinUint8Arrays = exports.memcpy = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst utf8_js_1 = __webpack_require__(/*! ../util/utf8.js */ \"./node_modules/apache-arrow/util/utf8.js\");\nconst compat_js_1 = __webpack_require__(/*! ./compat.js */ \"./node_modules/apache-arrow/util/compat.js\");\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks) {\n    const result = chunks[0] ? [chunks[0]] : [];\n    let xOffset, yOffset, xLen, yLen;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n/** @ignore */\nfunction memcpy(target, source, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\nexports.memcpy = memcpy;\n/** @ignore */\nfunction joinUint8Arrays(chunks, size) {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    const result = collapseContiguousByteRanges(chunks);\n    const byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source, sliced, buffer;\n    let offset = 0, index = -1;\n    const length = Math.min(size || Number.POSITIVE_INFINITY, byteLength);\n    for (const n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            }\n            else if (sliced.length === source.length) {\n                index++;\n            }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\nexports.joinUint8Arrays = joinUint8Arrays;\n/** @ignore */\nfunction toArrayBufferView(ArrayBufferViewCtor, input) {\n    let value = (0, compat_js_1.isIteratorResult)(input) ? input.value : input;\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) {\n        return new ArrayBufferViewCtor(0);\n    }\n    if (typeof value === 'string') {\n        value = (0, utf8_js_1.encodeUtf8)(value);\n    }\n    if (value instanceof ArrayBuffer) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (value instanceof SharedArrayBuf) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if ((0, compat_js_1.isFlatbuffersByteBuffer)(value)) {\n        return toArrayBufferView(ArrayBufferViewCtor, value.bytes());\n    }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : (value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT));\n}\nexports.toArrayBufferView = toArrayBufferView;\n/** @ignore */ const toInt8Array = (input) => toArrayBufferView(Int8Array, input);\nexports.toInt8Array = toInt8Array;\n/** @ignore */ const toInt16Array = (input) => toArrayBufferView(Int16Array, input);\nexports.toInt16Array = toInt16Array;\n/** @ignore */ const toInt32Array = (input) => toArrayBufferView(Int32Array, input);\nexports.toInt32Array = toInt32Array;\n/** @ignore */ const toBigInt64Array = (input) => toArrayBufferView(compat_js_1.BigInt64Array, input);\nexports.toBigInt64Array = toBigInt64Array;\n/** @ignore */ const toUint8Array = (input) => toArrayBufferView(Uint8Array, input);\nexports.toUint8Array = toUint8Array;\n/** @ignore */ const toUint16Array = (input) => toArrayBufferView(Uint16Array, input);\nexports.toUint16Array = toUint16Array;\n/** @ignore */ const toUint32Array = (input) => toArrayBufferView(Uint32Array, input);\nexports.toUint32Array = toUint32Array;\n/** @ignore */ const toBigUint64Array = (input) => toArrayBufferView(compat_js_1.BigUint64Array, input);\nexports.toBigUint64Array = toBigUint64Array;\n/** @ignore */ const toFloat32Array = (input) => toArrayBufferView(Float32Array, input);\nexports.toFloat32Array = toFloat32Array;\n/** @ignore */ const toFloat64Array = (input) => toArrayBufferView(Float64Array, input);\nexports.toFloat64Array = toFloat64Array;\n/** @ignore */ const toUint8ClampedArray = (input) => toArrayBufferView(Uint8ClampedArray, input);\nexports.toUint8ClampedArray = toUint8ClampedArray;\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nfunction* toArrayBufferViewIterator(ArrayCtor, source) {\n    const wrap = function* (x) { yield x; };\n    const buffers = (typeof source === 'string') ? wrap(source)\n        : (ArrayBuffer.isView(source)) ? wrap(source)\n            : (source instanceof ArrayBuffer) ? wrap(source)\n                : (source instanceof SharedArrayBuf) ? wrap(source)\n                    : !(0, compat_js_1.isIterable)(source) ? wrap(source) : source;\n    yield* pump((function* (it) {\n        let r = null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n    return new ArrayCtor();\n}\nexports.toArrayBufferViewIterator = toArrayBufferViewIterator;\n/** @ignore */ const toInt8ArrayIterator = (input) => toArrayBufferViewIterator(Int8Array, input);\nexports.toInt8ArrayIterator = toInt8ArrayIterator;\n/** @ignore */ const toInt16ArrayIterator = (input) => toArrayBufferViewIterator(Int16Array, input);\nexports.toInt16ArrayIterator = toInt16ArrayIterator;\n/** @ignore */ const toInt32ArrayIterator = (input) => toArrayBufferViewIterator(Int32Array, input);\nexports.toInt32ArrayIterator = toInt32ArrayIterator;\n/** @ignore */ const toUint8ArrayIterator = (input) => toArrayBufferViewIterator(Uint8Array, input);\nexports.toUint8ArrayIterator = toUint8ArrayIterator;\n/** @ignore */ const toUint16ArrayIterator = (input) => toArrayBufferViewIterator(Uint16Array, input);\nexports.toUint16ArrayIterator = toUint16ArrayIterator;\n/** @ignore */ const toUint32ArrayIterator = (input) => toArrayBufferViewIterator(Uint32Array, input);\nexports.toUint32ArrayIterator = toUint32ArrayIterator;\n/** @ignore */ const toFloat32ArrayIterator = (input) => toArrayBufferViewIterator(Float32Array, input);\nexports.toFloat32ArrayIterator = toFloat32ArrayIterator;\n/** @ignore */ const toFloat64ArrayIterator = (input) => toArrayBufferViewIterator(Float64Array, input);\nexports.toFloat64ArrayIterator = toFloat64ArrayIterator;\n/** @ignore */ const toUint8ClampedArrayIterator = (input) => toArrayBufferViewIterator(Uint8ClampedArray, input);\nexports.toUint8ClampedArrayIterator = toUint8ClampedArrayIterator;\n/** @ignore */\nfunction toArrayBufferViewAsyncIterator(ArrayCtor, source) {\n    return tslib_1.__asyncGenerator(this, arguments, function* toArrayBufferViewAsyncIterator_1() {\n        // if a Promise, unwrap the Promise and iterate the resolved value\n        if ((0, compat_js_1.isPromise)(source)) {\n            return yield tslib_1.__await(yield tslib_1.__await(yield* tslib_1.__asyncDelegator(tslib_1.__asyncValues(toArrayBufferViewAsyncIterator(ArrayCtor, yield tslib_1.__await(source))))));\n        }\n        const wrap = function (x) { return tslib_1.__asyncGenerator(this, arguments, function* () { yield yield tslib_1.__await(yield tslib_1.__await(x)); }); };\n        const emit = function (source) {\n            return tslib_1.__asyncGenerator(this, arguments, function* () {\n                yield tslib_1.__await(yield* tslib_1.__asyncDelegator(tslib_1.__asyncValues(pump((function* (it) {\n                    let r = null;\n                    do {\n                        r = it.next(yield r === null || r === void 0 ? void 0 : r.value);\n                    } while (!r.done);\n                })(source[Symbol.iterator]())))));\n            });\n        };\n        const buffers = (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n            : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                    : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n                        : (0, compat_js_1.isIterable)(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n                            : !(0, compat_js_1.isAsyncIterable)(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                : source; // otherwise if AsyncIterable, use it\n        yield tslib_1.__await(// otherwise if AsyncIterable, use it\n        yield* tslib_1.__asyncDelegator(tslib_1.__asyncValues(pump((function (it) {\n            return tslib_1.__asyncGenerator(this, arguments, function* () {\n                let r = null;\n                do {\n                    r = yield tslib_1.__await(it.next(yield yield tslib_1.__await(toArrayBufferView(ArrayCtor, r))));\n                } while (!r.done);\n            });\n        })(buffers[Symbol.asyncIterator]())))));\n        return yield tslib_1.__await(new ArrayCtor());\n    });\n}\nexports.toArrayBufferViewAsyncIterator = toArrayBufferViewAsyncIterator;\n/** @ignore */ const toInt8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int8Array, input);\nexports.toInt8ArrayAsyncIterator = toInt8ArrayAsyncIterator;\n/** @ignore */ const toInt16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int16Array, input);\nexports.toInt16ArrayAsyncIterator = toInt16ArrayAsyncIterator;\n/** @ignore */ const toInt32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int32Array, input);\nexports.toInt32ArrayAsyncIterator = toInt32ArrayAsyncIterator;\n/** @ignore */ const toUint8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8Array, input);\nexports.toUint8ArrayAsyncIterator = toUint8ArrayAsyncIterator;\n/** @ignore */ const toUint16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint16Array, input);\nexports.toUint16ArrayAsyncIterator = toUint16ArrayAsyncIterator;\n/** @ignore */ const toUint32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint32Array, input);\nexports.toUint32ArrayAsyncIterator = toUint32ArrayAsyncIterator;\n/** @ignore */ const toFloat32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float32Array, input);\nexports.toFloat32ArrayAsyncIterator = toFloat32ArrayAsyncIterator;\n/** @ignore */ const toFloat64ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float64Array, input);\nexports.toFloat64ArrayAsyncIterator = toFloat64ArrayAsyncIterator;\n/** @ignore */ const toUint8ClampedArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\nexports.toUint8ClampedArrayAsyncIterator = toUint8ClampedArrayAsyncIterator;\n/** @ignore */\nfunction rebaseValueOffsets(offset, length, valueOffsets) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\nexports.rebaseValueOffsets = rebaseValueOffsets;\n/** @ignore */\nfunction compareArrayLike(a, b) {\n    let i = 0;\n    const n = a.length;\n    if (n !== b.length) {\n        return false;\n    }\n    if (n > 0) {\n        do {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        } while (++i < n);\n    }\n    return true;\n}\nexports.compareArrayLike = compareArrayLike;\n\n//# sourceMappingURL=buffer.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/util/buffer.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/util/chunk.js":
/*!*************************************************!*\
  !*** ./node_modules/apache-arrow/util/chunk.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.wrapChunkedIndexOf = exports.wrapChunkedCall2 = exports.wrapChunkedCall1 = exports.isChunkedValid = exports.binarySearch = exports.sliceChunks = exports.computeChunkOffsets = exports.computeChunkNullCounts = exports.ChunkedIterator = void 0;\n/** @ignore */\nclass ChunkedIterator {\n    constructor(numChunks = 0, getChunkIterator) {\n        this.numChunks = numChunks;\n        this.getChunkIterator = getChunkIterator;\n        this.chunkIndex = 0;\n        this.chunkIterator = this.getChunkIterator(0);\n    }\n    next() {\n        while (this.chunkIndex < this.numChunks) {\n            const next = this.chunkIterator.next();\n            if (!next.done) {\n                return next;\n            }\n            if (++this.chunkIndex < this.numChunks) {\n                this.chunkIterator = this.getChunkIterator(this.chunkIndex);\n            }\n        }\n        return { done: true, value: null };\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\nexports.ChunkedIterator = ChunkedIterator;\n/** @ignore */\nfunction computeChunkNullCounts(chunks) {\n    return chunks.reduce((nullCount, chunk) => nullCount + chunk.nullCount, 0);\n}\nexports.computeChunkNullCounts = computeChunkNullCounts;\n/** @ignore */\nfunction computeChunkOffsets(chunks) {\n    return chunks.reduce((offsets, chunk, index) => {\n        offsets[index + 1] = offsets[index] + chunk.length;\n        return offsets;\n    }, new Uint32Array(chunks.length + 1));\n}\nexports.computeChunkOffsets = computeChunkOffsets;\n/** @ignore */\nfunction sliceChunks(chunks, offsets, begin, end) {\n    const slices = [];\n    for (let i = -1, n = chunks.length; ++i < n;) {\n        const chunk = chunks[i];\n        const offset = offsets[i];\n        const { length } = chunk;\n        // Stop if the child is to the right of the slice boundary\n        if (offset >= end) {\n            break;\n        }\n        // Exclude children to the left of of the slice boundary\n        if (begin >= offset + length) {\n            continue;\n        }\n        // Include entire child if between both left and right boundaries\n        if (offset >= begin && (offset + length) <= end) {\n            slices.push(chunk);\n            continue;\n        }\n        // Include the child slice that overlaps one of the slice boundaries\n        const from = Math.max(0, begin - offset);\n        const to = Math.min(end - offset, length);\n        slices.push(chunk.slice(from, to - from));\n    }\n    if (slices.length === 0) {\n        slices.push(chunks[0].slice(0, 0));\n    }\n    return slices;\n}\nexports.sliceChunks = sliceChunks;\n/** @ignore */\nfunction binarySearch(chunks, offsets, idx, fn) {\n    let lhs = 0, mid = 0, rhs = offsets.length - 1;\n    do {\n        if (lhs >= rhs - 1) {\n            return (idx < offsets[rhs]) ? fn(chunks, lhs, idx - offsets[lhs]) : null;\n        }\n        mid = lhs + (Math.trunc((rhs - lhs) * .5));\n        idx < offsets[mid] ? (rhs = mid) : (lhs = mid);\n    } while (lhs < rhs);\n}\nexports.binarySearch = binarySearch;\n/** @ignore */\nfunction isChunkedValid(data, index) {\n    return data.getValid(index);\n}\nexports.isChunkedValid = isChunkedValid;\n/** @ignore */\nfunction wrapChunkedCall1(fn) {\n    function chunkedFn(chunks, i, j) { return fn(chunks[i], j); }\n    return function (index) {\n        const data = this.data;\n        return binarySearch(data, this._offsets, index, chunkedFn);\n    };\n}\nexports.wrapChunkedCall1 = wrapChunkedCall1;\n/** @ignore */\nfunction wrapChunkedCall2(fn) {\n    let _2;\n    function chunkedFn(chunks, i, j) { return fn(chunks[i], j, _2); }\n    return function (index, value) {\n        const data = this.data;\n        _2 = value;\n        const result = binarySearch(data, this._offsets, index, chunkedFn);\n        _2 = undefined;\n        return result;\n    };\n}\nexports.wrapChunkedCall2 = wrapChunkedCall2;\n/** @ignore */\nfunction wrapChunkedIndexOf(indexOf) {\n    let _1;\n    function chunkedIndexOf(data, chunkIndex, fromIndex) {\n        let begin = fromIndex, index = 0, total = 0;\n        for (let i = chunkIndex - 1, n = data.length; ++i < n;) {\n            const chunk = data[i];\n            if (~(index = indexOf(chunk, _1, begin))) {\n                return total + index;\n            }\n            begin = 0;\n            total += chunk.length;\n        }\n        return -1;\n    }\n    return function (element, offset) {\n        _1 = element;\n        const data = this.data;\n        const result = typeof offset !== 'number'\n            ? chunkedIndexOf(data, 0, 0)\n            : binarySearch(data, this._offsets, offset, chunkedIndexOf);\n        _1 = undefined;\n        return result;\n    };\n}\nexports.wrapChunkedIndexOf = wrapChunkedIndexOf;\n\n//# sourceMappingURL=chunk.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/util/chunk.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/util/compat.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/util/compat.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isFlatbuffersByteBuffer = exports.isReadableNodeStream = exports.isWritableNodeStream = exports.isReadableDOMStream = exports.isWritableDOMStream = exports.isFetchResponse = exports.isFSReadStream = exports.isFileHandle = exports.isUnderlyingSink = exports.isIteratorResult = exports.isArrayLike = exports.isArrowJSON = exports.isAsyncIterable = exports.isIterable = exports.isObservable = exports.isPromise = exports.isObject = exports.BigUint64ArrayAvailable = exports.BigUint64Array = exports.BigInt64ArrayAvailable = exports.BigInt64Array = exports.BigIntAvailable = exports.BigInt = void 0;\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [BigIntUnavailable, false];\n})();\nexports.BigInt = BigIntCtor;\nexports.BigIntAvailable = BigIntAvailable;\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [BigInt64ArrayUnavailable, false];\n})();\nexports.BigInt64Array = BigInt64ArrayCtor;\nexports.BigInt64ArrayAvailable = BigInt64ArrayAvailable;\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [BigUint64ArrayUnavailable, false];\n})();\nexports.BigUint64Array = BigUint64ArrayCtor;\nexports.BigUint64ArrayAvailable = BigUint64ArrayAvailable;\n/** @ignore */ const isNumber = (x) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x) => typeof x === 'function';\n/** @ignore */\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst isObject = (x) => x != null && Object(x) === x;\nexports.isObject = isObject;\n/** @ignore */\nconst isPromise = (x) => {\n    return (0, exports.isObject)(x) && isFunction(x.then);\n};\nexports.isPromise = isPromise;\n/** @ignore */\nconst isObservable = (x) => {\n    return (0, exports.isObject)(x) && isFunction(x.subscribe);\n};\nexports.isObservable = isObservable;\n/** @ignore */\nconst isIterable = (x) => {\n    return (0, exports.isObject)(x) && isFunction(x[Symbol.iterator]);\n};\nexports.isIterable = isIterable;\n/** @ignore */\nconst isAsyncIterable = (x) => {\n    return (0, exports.isObject)(x) && isFunction(x[Symbol.asyncIterator]);\n};\nexports.isAsyncIterable = isAsyncIterable;\n/** @ignore */\nconst isArrowJSON = (x) => {\n    return (0, exports.isObject)(x) && (0, exports.isObject)(x['schema']);\n};\nexports.isArrowJSON = isArrowJSON;\n/** @ignore */\nconst isArrayLike = (x) => {\n    return (0, exports.isObject)(x) && isNumber(x['length']);\n};\nexports.isArrayLike = isArrayLike;\n/** @ignore */\nconst isIteratorResult = (x) => {\n    return (0, exports.isObject)(x) && ('done' in x) && ('value' in x);\n};\nexports.isIteratorResult = isIteratorResult;\n/** @ignore */\nconst isUnderlyingSink = (x) => {\n    return (0, exports.isObject)(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\nexports.isUnderlyingSink = isUnderlyingSink;\n/** @ignore */\nconst isFileHandle = (x) => {\n    return (0, exports.isObject)(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\nexports.isFileHandle = isFileHandle;\n/** @ignore */\nconst isFSReadStream = (x) => {\n    return (0, exports.isReadableNodeStream)(x) && isNumber(x['bytesRead']);\n};\nexports.isFSReadStream = isFSReadStream;\n/** @ignore */\nconst isFetchResponse = (x) => {\n    return (0, exports.isObject)(x) && (0, exports.isReadableDOMStream)(x['body']);\n};\nexports.isFetchResponse = isFetchResponse;\nconst isReadableInterop = (x) => ('_getDOMStream' in x && '_getNodeStream' in x);\n/** @ignore */\nconst isWritableDOMStream = (x) => {\n    return (0, exports.isObject)(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !isReadableInterop(x);\n};\nexports.isWritableDOMStream = isWritableDOMStream;\n/** @ignore */\nconst isReadableDOMStream = (x) => {\n    return (0, exports.isObject)(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !isReadableInterop(x);\n};\nexports.isReadableDOMStream = isReadableDOMStream;\n/** @ignore */\nconst isWritableNodeStream = (x) => {\n    return (0, exports.isObject)(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !isReadableInterop(x);\n};\nexports.isWritableNodeStream = isWritableNodeStream;\n/** @ignore */\nconst isReadableNodeStream = (x) => {\n    return (0, exports.isObject)(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !isReadableInterop(x);\n};\nexports.isReadableNodeStream = isReadableNodeStream;\n/** @ignore */\nconst isFlatbuffersByteBuffer = (x) => {\n    return (0, exports.isObject)(x) &&\n        isFunction(x['clear']) &&\n        isFunction(x['bytes']) &&\n        isFunction(x['position']) &&\n        isFunction(x['setPosition']) &&\n        isFunction(x['capacity']) &&\n        isFunction(x['getBufferIdentifier']) &&\n        isFunction(x['createLong']);\n};\nexports.isFlatbuffersByteBuffer = isFlatbuffersByteBuffer;\n\n//# sourceMappingURL=compat.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/util/compat.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/util/int.js":
/*!***********************************************!*\
  !*** ./node_modules/apache-arrow/util/int.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Int128 = exports.Int64 = exports.Uint64 = exports.BaseInt64 = void 0;\n/** @ignore */\nconst carryBit16 = 1 << 16;\n/** @ignore */\nfunction intAsHex(value) {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [\n    1,\n    10,\n    100,\n    1000,\n    10000,\n    100000,\n    1000000,\n    10000000,\n    100000000\n];\n/** @ignore */\nclass BaseInt64 {\n    constructor(buffer) {\n        this.buffer = buffer;\n    }\n    high() { return this.buffer[1]; }\n    low() { return this.buffer[0]; }\n    _times(other) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n        let sum = product >>> 16;\n        product = L[2] * R[3];\n        sum += product;\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n        this.buffer[0] += sum << 16;\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n        return this;\n    }\n    _plus(other) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n            ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n    lessThan(other) {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n    equals(other) {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n    greaterThan(other) {\n        return other.lessThan(this);\n    }\n    hex() {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\nexports.BaseInt64 = BaseInt64;\n/** @ignore */\nclass Uint64 extends BaseInt64 {\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Uint64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        const length = str.length;\n        const out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([Number.parseInt(str.slice(posn, posn + group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        const rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        const rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\nexports.Uint64 = Uint64;\n/** @ignore */\nclass Int64 extends BaseInt64 {\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        return this;\n    }\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    lessThan(other) {\n        // force high bytes to be signed\n        // eslint-disable-next-line unicorn/prefer-math-trunc\n        const this_high = this.buffer[1] << 0;\n        // eslint-disable-next-line unicorn/prefer-math-trunc\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Int64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n        const out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([Number.parseInt(str.slice(posn, posn + group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        const rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        const rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\nexports.Int64 = Int64;\n/** @ignore */\nclass Int128 {\n    constructor(buffer) {\n        this.buffer = buffer;\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n    high() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n    low() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        if (this.buffer[1] == 0) {\n            ++this.buffer[2];\n        }\n        if (this.buffer[2] == 0) {\n            ++this.buffer[3];\n        }\n        return this;\n    }\n    times(other) {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3], 0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2], 0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1], 0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0], 0]));\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n        const sum = new Uint64(new Uint32Array([product.high(), 0]));\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n        this.buffer[1] = sum.low();\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n        this.buffer[2] = sum.high();\n        const high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n            .plus(Uint64.multiply(L1, R2))\n            .plus(Uint64.multiply(L2, R1))\n            .plus(Uint64.multiply(L3, R0)).low();\n        return this;\n    }\n    plus(other) {\n        const sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n        return this;\n    }\n    hex() {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        const rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        const rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(4)) {\n        return Int128.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(4)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(4)) {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n        const out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([Number.parseInt(str.slice(posn, posn + group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\nexports.Int128 = Int128;\n\n//# sourceMappingURL=int.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/util/int.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/util/math.js":
/*!************************************************!*\
  !*** ./node_modules/apache-arrow/util/math.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.float64ToUint16 = exports.uint16ToFloat64 = void 0;\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nfunction uint16ToFloat64(h) {\n    const expo = (h & 0x7C00) >> 10;\n    const sigf = (h & 0x03FF) / 1024;\n    const sign = Math.pow((-1), ((h & 0x8000) >> 15));\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? Number.NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (Math.pow(2, (expo - 15))) * (1 + sigf);\n}\nexports.uint16ToFloat64 = uint16ToFloat64;\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nfunction float64ToUint16(d) {\n    if (d !== d) {\n        return 0x7E00;\n    } // NaN\n    f64[0] = d;\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n    const sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7FF00000), sigf = 0x0000;\n    if (expo >= 0x40F00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        }\n        else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000FFFFF) >> 10;\n        }\n    }\n    else if (expo <= 0x3F000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000FFFFF);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    }\n    else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3F000000) >> 10;\n        sigf = ((u32[1] & 0x000FFFFF) + 0x200) >> 10;\n    }\n    return sign | expo | sigf & 0xFFFF;\n}\nexports.float64ToUint16 = float64ToUint16;\n\n//# sourceMappingURL=math.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/util/math.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/util/pretty.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/util/pretty.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.valueToString = void 0;\n/** @ignore */ const undf = void (0);\n/** @ignore */\nfunction valueToString(x) {\n    if (x === null) {\n        return 'null';\n    }\n    if (x === undf) {\n        return 'undefined';\n    }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    if (ArrayBuffer.isView(x)) {\n        if (x instanceof BigInt64Array || x instanceof BigUint64Array) {\n            return `[${[...x].map(x => valueToString(x))}]`;\n        }\n        return `[${x}]`;\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x, (_, y) => typeof y === 'bigint' ? `${y}` : y);\n}\nexports.valueToString = valueToString;\n\n//# sourceMappingURL=pretty.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/util/pretty.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/util/recordbatch.js":
/*!*******************************************************!*\
  !*** ./node_modules/apache-arrow/util/recordbatch.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.distributeVectorsIntoRecordBatches = void 0;\nconst data_js_1 = __webpack_require__(/*! ../data.js */ \"./node_modules/apache-arrow/data.js\");\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\nconst recordbatch_js_1 = __webpack_require__(/*! ../recordbatch.js */ \"./node_modules/apache-arrow/recordbatch.js\");\n/** @ignore */\nfunction distributeVectorsIntoRecordBatches(schema, vecs) {\n    return uniformlyDistributeChunksAcrossRecordBatches(schema, vecs.map((v) => v.data.concat()));\n}\nexports.distributeVectorsIntoRecordBatches = distributeVectorsIntoRecordBatches;\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches(schema, cols) {\n    const fields = [...schema.fields];\n    const batches = [];\n    const memo = { numBatches: cols.reduce((n, c) => Math.max(n, c.length), 0) };\n    let numBatches = 0, batchLength = 0;\n    let i = -1;\n    const numColumns = cols.length;\n    let child, children = [];\n    while (memo.numBatches-- > 0) {\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            children[i] = child = cols[i].shift();\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n        if (Number.isFinite(batchLength)) {\n            children = distributeChildren(fields, batchLength, children, cols, memo);\n            if (batchLength > 0) {\n                batches[numBatches++] = (0, data_js_1.makeData)({\n                    type: new type_js_1.Struct(fields),\n                    length: batchLength,\n                    nullCount: 0,\n                    children: children.slice()\n                });\n            }\n        }\n    }\n    return [\n        schema = schema.assign(fields),\n        batches.map((data) => new recordbatch_js_1.RecordBatch(schema, data))\n    ];\n}\n/** @ignore */\nfunction distributeChildren(fields, batchLength, children, columns, memo) {\n    var _a;\n    const nullBitmapSize = ((batchLength + 63) & ~63) >> 3;\n    for (let i = -1, n = columns.length; ++i < n;) {\n        const child = children[i];\n        const length = child === null || child === void 0 ? void 0 : child.length;\n        if (length >= batchLength) {\n            if (length === batchLength) {\n                children[i] = child;\n            }\n            else {\n                children[i] = child.slice(0, batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(child.slice(batchLength, length - batchLength)));\n            }\n        }\n        else {\n            const field = fields[i];\n            fields[i] = field.clone({ nullable: true });\n            children[i] = (_a = child === null || child === void 0 ? void 0 : child._changeLengthAndBackfillNullBitmap(batchLength)) !== null && _a !== void 0 ? _a : (0, data_js_1.makeData)({\n                type: field.type,\n                length: batchLength,\n                nullCount: batchLength,\n                nullBitmap: new Uint8Array(nullBitmapSize)\n            });\n        }\n    }\n    return children;\n}\n\n//# sourceMappingURL=recordbatch.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/util/recordbatch.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/util/utf8.js":
/*!************************************************!*\
  !*** ./node_modules/apache-arrow/util/utf8.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encodeUtf8 = exports.decodeUtf8 = void 0;\nconst decoder = new TextDecoder('utf-8');\n/** @ignore */\nconst decodeUtf8 = (buffer) => decoder.decode(buffer);\nexports.decodeUtf8 = decodeUtf8;\nconst encoder = new TextEncoder();\n/** @ignore */\nconst encodeUtf8 = (value) => encoder.encode(value);\nexports.encodeUtf8 = encodeUtf8;\n\n//# sourceMappingURL=utf8.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/util/utf8.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/util/vector.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/util/vector.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createElementComparator = exports.clampRange = exports.clampIndex = void 0;\nconst vector_js_1 = __webpack_require__(/*! ../vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst map_js_1 = __webpack_require__(/*! ../row/map.js */ \"./node_modules/apache-arrow/row/map.js\");\nconst struct_js_1 = __webpack_require__(/*! ../row/struct.js */ \"./node_modules/apache-arrow/row/struct.js\");\nconst buffer_js_1 = __webpack_require__(/*! ../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\n/** @ignore */\nfunction clampIndex(source, index, then) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\nexports.clampIndex = clampIndex;\n/** @ignore */\nlet tmp;\n/** @ignore */\nfunction clampRange(source, begin, end, then) {\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    const { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n    // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\nexports.clampRange = clampRange;\nconst isNaNFast = (value) => value !== value;\n/** @ignore */\nfunction createElementComparator(search) {\n    const typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return (value) => value === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value) => value ? (0, buffer_js_1.compareArrayLike)(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) {\n        return createMapComparator(search);\n    }\n    // Compare Array-likes\n    if (Array.isArray(search)) {\n        return createArrayLikeComparator(search);\n    }\n    // Compare Vectors\n    if (search instanceof vector_js_1.Vector) {\n        return createVectorComparator(search);\n    }\n    return createObjectComparator(search, true);\n    // Compare non-empty Objects\n    // return createObjectComparator(search, search instanceof Proxy);\n}\nexports.createElementComparator = createElementComparator;\n/** @ignore */\nfunction createArrayLikeComparator(lhs) {\n    const comparators = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createMapComparator(lhs) {\n    let i = -1;\n    const comparators = [];\n    for (const v of lhs.values())\n        comparators[++i] = createElementComparator(v);\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createVectorComparator(lhs) {\n    const comparators = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createObjectComparator(lhs, allowEmpty = false) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (!allowEmpty && keys.length === 0) {\n        return () => false;\n    }\n    const comparators = [];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\nfunction createSubElementsComparator(comparators, keys) {\n    return (rhs) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n                return compareObject(comparators, rhs, rhs.keys());\n            case map_js_1.MapRow:\n            case struct_js_1.StructRow:\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof vector_js_1.Vector ? compareVector(comparators, rhs) : false;\n    };\n}\nfunction compareArray(comparators, arr) {\n    const n = comparators.length;\n    if (arr.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareVector(comparators, vec) {\n    const n = comparators.length;\n    if (vec.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareObject(comparators, obj, keys) {\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n    let i = 0;\n    const n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done; ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n\n//# sourceMappingURL=vector.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/util/vector.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/vector.js":
/*!*********************************************!*\
  !*** ./node_modules/apache-arrow/vector.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeVector = exports.Vector = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst enum_js_1 = __webpack_require__(/*! ./enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst vector_js_1 = __webpack_require__(/*! ./util/vector.js */ \"./node_modules/apache-arrow/util/vector.js\");\nconst type_js_1 = __webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/type.js\");\nconst data_js_1 = __webpack_require__(/*! ./data.js */ \"./node_modules/apache-arrow/data.js\");\nconst chunk_js_1 = __webpack_require__(/*! ./util/chunk.js */ \"./node_modules/apache-arrow/util/chunk.js\");\nconst get_js_1 = __webpack_require__(/*! ./visitor/get.js */ \"./node_modules/apache-arrow/visitor/get.js\");\nconst set_js_1 = __webpack_require__(/*! ./visitor/set.js */ \"./node_modules/apache-arrow/visitor/set.js\");\nconst indexof_js_1 = __webpack_require__(/*! ./visitor/indexof.js */ \"./node_modules/apache-arrow/visitor/indexof.js\");\nconst iterator_js_1 = __webpack_require__(/*! ./visitor/iterator.js */ \"./node_modules/apache-arrow/visitor/iterator.js\");\nconst bytelength_js_1 = __webpack_require__(/*! ./visitor/bytelength.js */ \"./node_modules/apache-arrow/visitor/bytelength.js\");\nconst visitorsByTypeId = {};\nconst vectorPrototypesByTypeId = {};\n/**\n * Array-like data structure. Use the convenience method {@link makeVector} and {@link vectorFromArray} to create vectors.\n */\nclass Vector {\n    constructor(input) {\n        var _b, _c, _d;\n        const data = input[0] instanceof Vector\n            ? input.flatMap(x => x.data)\n            : input;\n        if (data.some((x) => !(x instanceof data_js_1.Data))) {\n            throw new TypeError('Vector constructor expects an Array of Data instances.');\n        }\n        const type = (_b = data[0]) === null || _b === void 0 ? void 0 : _b.type;\n        switch (data.length) {\n            case 0:\n                this._offsets = [0];\n                break;\n            case 1: {\n                // special case for unchunked vectors\n                const { get, set, indexOf, byteLength } = visitorsByTypeId[type.typeId];\n                const unchunkedData = data[0];\n                this.isValid = (index) => (0, chunk_js_1.isChunkedValid)(unchunkedData, index);\n                this.get = (index) => get(unchunkedData, index);\n                this.set = (index, value) => set(unchunkedData, index, value);\n                this.indexOf = (index) => indexOf(unchunkedData, index);\n                this.getByteLength = (index) => byteLength(unchunkedData, index);\n                this._offsets = [0, unchunkedData.length];\n                break;\n            }\n            default:\n                Object.setPrototypeOf(this, vectorPrototypesByTypeId[type.typeId]);\n                this._offsets = (0, chunk_js_1.computeChunkOffsets)(data);\n                break;\n        }\n        this.data = data;\n        this.type = type;\n        this.stride = (0, type_js_1.strideForType)(type);\n        this.numChildren = (_d = (_c = type.children) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0;\n        this.length = this._offsets[this._offsets.length - 1];\n    }\n    /**\n     * The aggregate size (in bytes) of this Vector's buffers and/or child Vectors.\n     */\n    get byteLength() {\n        if (this._byteLength === -1) {\n            this._byteLength = this.data.reduce((byteLength, data) => byteLength + data.byteLength, 0);\n        }\n        return this._byteLength;\n    }\n    /**\n     * The number of null elements in this Vector.\n     */\n    get nullCount() {\n        if (this._nullCount === -1) {\n            this._nullCount = (0, chunk_js_1.computeChunkNullCounts)(this.data);\n        }\n        return this._nullCount;\n    }\n    /**\n     * The Array or TypedAray constructor used for the JS representation\n     *  of the element's values in {@link Vector.prototype.toArray `toArray()`}.\n     */\n    get ArrayType() { return this.type.ArrayType; }\n    /**\n     * The name that should be printed when the Vector is logged in a message.\n     */\n    get [Symbol.toStringTag]() {\n        return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`;\n    }\n    /**\n     * The name of this Vector.\n     */\n    get VectorName() { return `${enum_js_1.Type[this.type.typeId]}Vector`; }\n    /**\n     * Check whether an element is null.\n     * @param index The index at which to read the validity bitmap.\n     */\n    // @ts-ignore\n    isValid(index) { return false; }\n    /**\n     * Get an element value by position.\n     * @param index The index of the element to read.\n     */\n    // @ts-ignore\n    get(index) { return null; }\n    /**\n     * Set an element value by position.\n     * @param index The index of the element to write.\n     * @param value The value to set.\n     */\n    // @ts-ignore\n    set(index, value) { return; }\n    /**\n     * Retrieve the index of the first occurrence of a value in an Vector.\n     * @param element The value to locate in the Vector.\n     * @param offset The index at which to begin the search. If offset is omitted, the search starts at index 0.\n     */\n    // @ts-ignore\n    indexOf(element, offset) { return -1; }\n    includes(element, offset) { return this.indexOf(element, offset) > 0; }\n    /**\n     * Get the size in bytes of an element by index.\n     * @param index The index at which to get the byteLength.\n     */\n    // @ts-ignore\n    getByteLength(index) { return 0; }\n    /**\n     * Iterator for the Vector's elements.\n     */\n    [Symbol.iterator]() {\n        return iterator_js_1.instance.visit(this);\n    }\n    /**\n     * Combines two or more Vectors of the same type.\n     * @param others Additional Vectors to add to the end of this Vector.\n     */\n    concat(...others) {\n        return new Vector(this.data.concat(others.flatMap((x) => x.data).flat(Number.POSITIVE_INFINITY)));\n    }\n    /**\n     * Return a zero-copy sub-section of this Vector.\n     * @param start The beginning of the specified portion of the Vector.\n     * @param end The end of the specified portion of the Vector. This is exclusive of the element at the index 'end'.\n     */\n    slice(begin, end) {\n        return new Vector((0, vector_js_1.clampRange)(this, begin, end, ({ data, _offsets }, begin, end) => (0, chunk_js_1.sliceChunks)(data, _offsets, begin, end)));\n    }\n    toJSON() { return [...this]; }\n    /**\n     * Return a JavaScript Array or TypedArray of the Vector's elements.\n     *\n     * @note If this Vector contains a single Data chunk and the Vector's type is a\n     *  primitive numeric type corresponding to one of the JavaScript TypedArrays, this\n     *  method returns a zero-copy slice of the underlying TypedArray values. If there's\n     *  more than one chunk, the resulting TypedArray will be a copy of the data from each\n     *  chunk's underlying TypedArray values.\n     *\n     * @returns An Array or TypedArray of the Vector's elements, based on the Vector's DataType.\n     */\n    toArray() {\n        const { type, data, length, stride, ArrayType } = this;\n        // Fast case, return subarray if possible\n        switch (type.typeId) {\n            case enum_js_1.Type.Int:\n            case enum_js_1.Type.Float:\n            case enum_js_1.Type.Decimal:\n            case enum_js_1.Type.Time:\n            case enum_js_1.Type.Timestamp:\n                switch (data.length) {\n                    case 0: return new ArrayType();\n                    case 1: return data[0].values.subarray(0, length * stride);\n                    default: return data.reduce((memo, { values }) => {\n                        memo.array.set(values, memo.offset);\n                        memo.offset += values.length;\n                        return memo;\n                    }, { array: new ArrayType(length * stride), offset: 0 }).array;\n                }\n        }\n        // Otherwise if not primitive, slow copy\n        return [...this];\n    }\n    /**\n     * Returns a string representation of the Vector.\n     *\n     * @returns A string representation of the Vector.\n     */\n    toString() {\n        return `[${[...this].join(',')}]`;\n    }\n    /**\n     * Returns a child Vector by name, or null if this Vector has no child with the given name.\n     * @param name The name of the child to retrieve.\n     */\n    getChild(name) {\n        var _b;\n        return this.getChildAt((_b = this.type.children) === null || _b === void 0 ? void 0 : _b.findIndex((f) => f.name === name));\n    }\n    /**\n     * Returns a child Vector by index, or null if this Vector has no child at the supplied index.\n     * @param index The index of the child to retrieve.\n     */\n    getChildAt(index) {\n        if (index > -1 && index < this.numChildren) {\n            return new Vector(this.data.map(({ children }) => children[index]));\n        }\n        return null;\n    }\n    get isMemoized() {\n        if (type_js_1.DataType.isDictionary(this.type)) {\n            return this.data[0].dictionary.isMemoized;\n        }\n        return false;\n    }\n    /**\n     * Adds memoization to the Vector's {@link get} method. For dictionary\n     * vectors, this method return a vector that memoizes only the dictionary\n     * values.\n     *\n     * Memoization is very useful when decoding a value is expensive such as\n     * Uft8. The memoization creates a cache of the size of the Vector and\n     * therfore increases memory usage.\n     *\n     * @returns A new vector that memoizes calls to {@link get}.\n     */\n    memoize() {\n        if (type_js_1.DataType.isDictionary(this.type)) {\n            const dictionary = new MemoizedVector(this.data[0].dictionary);\n            const newData = this.data.map((data) => {\n                const cloned = data.clone();\n                cloned.dictionary = dictionary;\n                return cloned;\n            });\n            return new Vector(newData);\n        }\n        return new MemoizedVector(this);\n    }\n    /**\n     * Returns a vector without memoization of the {@link get} method. If this\n     * vector is not memoized, this method returns this vector.\n     *\n     * @returns A a vector without memoization.\n     */\n    unmemoize() {\n        if (type_js_1.DataType.isDictionary(this.type) && this.isMemoized) {\n            const dictionary = this.data[0].dictionary.unmemoize();\n            const newData = this.data.map((data) => {\n                const newData = data.clone();\n                newData.dictionary = dictionary;\n                return newData;\n            });\n            return new Vector(newData);\n        }\n        return this;\n    }\n}\nexports.Vector = Vector;\n_a = Symbol.toStringTag;\n// Initialize this static property via an IIFE so bundlers don't tree-shake\n// out this logic, but also so we're still compliant with `\"sideEffects\": false`\nVector[_a] = ((proto) => {\n    proto.type = type_js_1.DataType.prototype;\n    proto.data = [];\n    proto.length = 0;\n    proto.stride = 1;\n    proto.numChildren = 0;\n    proto._nullCount = -1;\n    proto._byteLength = -1;\n    proto._offsets = new Uint32Array([0]);\n    proto[Symbol.isConcatSpreadable] = true;\n    const typeIds = Object.keys(enum_js_1.Type)\n        .map((T) => enum_js_1.Type[T])\n        .filter((T) => typeof T === 'number' && T !== enum_js_1.Type.NONE);\n    for (const typeId of typeIds) {\n        const get = get_js_1.instance.getVisitFnByTypeId(typeId);\n        const set = set_js_1.instance.getVisitFnByTypeId(typeId);\n        const indexOf = indexof_js_1.instance.getVisitFnByTypeId(typeId);\n        const byteLength = bytelength_js_1.instance.getVisitFnByTypeId(typeId);\n        visitorsByTypeId[typeId] = { get, set, indexOf, byteLength };\n        vectorPrototypesByTypeId[typeId] = Object.create(proto, {\n            ['isValid']: { value: (0, chunk_js_1.wrapChunkedCall1)(chunk_js_1.isChunkedValid) },\n            ['get']: { value: (0, chunk_js_1.wrapChunkedCall1)(get_js_1.instance.getVisitFnByTypeId(typeId)) },\n            ['set']: { value: (0, chunk_js_1.wrapChunkedCall2)(set_js_1.instance.getVisitFnByTypeId(typeId)) },\n            ['indexOf']: { value: (0, chunk_js_1.wrapChunkedIndexOf)(indexof_js_1.instance.getVisitFnByTypeId(typeId)) },\n            ['getByteLength']: { value: (0, chunk_js_1.wrapChunkedCall1)(bytelength_js_1.instance.getVisitFnByTypeId(typeId)) },\n        });\n    }\n    return 'Vector';\n})(Vector.prototype);\nclass MemoizedVector extends Vector {\n    constructor(vector) {\n        super(vector.data);\n        const get = this.get;\n        const set = this.set;\n        const slice = this.slice;\n        const cache = new Array(this.length);\n        Object.defineProperty(this, 'get', {\n            value(index) {\n                const cachedValue = cache[index];\n                if (cachedValue !== undefined) {\n                    return cachedValue;\n                }\n                const value = get.call(this, index);\n                cache[index] = value;\n                return value;\n            }\n        });\n        Object.defineProperty(this, 'set', {\n            value(index, value) {\n                set.call(this, index, value);\n                cache[index] = value;\n            }\n        });\n        Object.defineProperty(this, 'slice', {\n            value: (begin, end) => new MemoizedVector(slice.call(this, begin, end))\n        });\n        Object.defineProperty(this, 'isMemoized', { value: true });\n        Object.defineProperty(this, 'unmemoize', {\n            value: () => new Vector(this.data)\n        });\n        Object.defineProperty(this, 'memoize', {\n            value: () => this\n        });\n    }\n}\nconst dtypes = tslib_1.__importStar(__webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/type.js\"));\nfunction makeVector(init) {\n    if (init) {\n        if (init instanceof data_js_1.Data) {\n            return new Vector([init]);\n        }\n        if (init instanceof Vector) {\n            return new Vector(init.data);\n        }\n        if (init.type instanceof type_js_1.DataType) {\n            return new Vector([(0, data_js_1.makeData)(init)]);\n        }\n        if (Array.isArray(init)) {\n            return new Vector(init.flatMap(v => unwrapInputs(v)));\n        }\n        if (ArrayBuffer.isView(init)) {\n            if (init instanceof DataView) {\n                init = new Uint8Array(init.buffer);\n            }\n            const props = { offset: 0, length: init.length, nullCount: 0, data: init };\n            if (init instanceof Int8Array) {\n                return new Vector([(0, data_js_1.makeData)(Object.assign(Object.assign({}, props), { type: new dtypes.Int8 }))]);\n            }\n            if (init instanceof Int16Array) {\n                return new Vector([(0, data_js_1.makeData)(Object.assign(Object.assign({}, props), { type: new dtypes.Int16 }))]);\n            }\n            if (init instanceof Int32Array) {\n                return new Vector([(0, data_js_1.makeData)(Object.assign(Object.assign({}, props), { type: new dtypes.Int32 }))]);\n            }\n            if (init instanceof BigInt64Array) {\n                return new Vector([(0, data_js_1.makeData)(Object.assign(Object.assign({}, props), { type: new dtypes.Int64 }))]);\n            }\n            if (init instanceof Uint8Array || init instanceof Uint8ClampedArray) {\n                return new Vector([(0, data_js_1.makeData)(Object.assign(Object.assign({}, props), { type: new dtypes.Uint8 }))]);\n            }\n            if (init instanceof Uint16Array) {\n                return new Vector([(0, data_js_1.makeData)(Object.assign(Object.assign({}, props), { type: new dtypes.Uint16 }))]);\n            }\n            if (init instanceof Uint32Array) {\n                return new Vector([(0, data_js_1.makeData)(Object.assign(Object.assign({}, props), { type: new dtypes.Uint32 }))]);\n            }\n            if (init instanceof BigUint64Array) {\n                return new Vector([(0, data_js_1.makeData)(Object.assign(Object.assign({}, props), { type: new dtypes.Uint64 }))]);\n            }\n            if (init instanceof Float32Array) {\n                return new Vector([(0, data_js_1.makeData)(Object.assign(Object.assign({}, props), { type: new dtypes.Float32 }))]);\n            }\n            if (init instanceof Float64Array) {\n                return new Vector([(0, data_js_1.makeData)(Object.assign(Object.assign({}, props), { type: new dtypes.Float64 }))]);\n            }\n            throw new Error('Unrecognized input');\n        }\n    }\n    throw new Error('Unrecognized input');\n}\nexports.makeVector = makeVector;\nfunction unwrapInputs(x) {\n    return x instanceof data_js_1.Data ? [x] : (x instanceof Vector ? x.data : makeVector(x).data);\n}\n\n//# sourceMappingURL=vector.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/vector.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor.js":
/*!**********************************************!*\
  !*** ./node_modules/apache-arrow/visitor.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Visitor = void 0;\nconst enum_js_1 = __webpack_require__(/*! ./enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst type_js_1 = __webpack_require__(/*! ./type.js */ \"./node_modules/apache-arrow/type.js\");\nclass Visitor {\n    visitMany(nodes, ...args) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    visit(...args) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    getVisitFn(node, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    getVisitFnByTypeId(typeId, throwIfNotFound = true) {\n        return getVisitFnByTypeId(this, typeId, throwIfNotFound);\n    }\n    visitNull(_node, ..._args) { return null; }\n    visitBool(_node, ..._args) { return null; }\n    visitInt(_node, ..._args) { return null; }\n    visitFloat(_node, ..._args) { return null; }\n    visitUtf8(_node, ..._args) { return null; }\n    visitBinary(_node, ..._args) { return null; }\n    visitFixedSizeBinary(_node, ..._args) { return null; }\n    visitDate(_node, ..._args) { return null; }\n    visitTimestamp(_node, ..._args) { return null; }\n    visitTime(_node, ..._args) { return null; }\n    visitDecimal(_node, ..._args) { return null; }\n    visitList(_node, ..._args) { return null; }\n    visitStruct(_node, ..._args) { return null; }\n    visitUnion(_node, ..._args) { return null; }\n    visitDictionary(_node, ..._args) { return null; }\n    visitInterval(_node, ..._args) { return null; }\n    visitFixedSizeList(_node, ..._args) { return null; }\n    visitMap(_node, ..._args) { return null; }\n}\nexports.Visitor = Visitor;\n/** @ignore */\nfunction getVisitFn(visitor, node, throwIfNotFound = true) {\n    if (typeof node === 'number') {\n        return getVisitFnByTypeId(visitor, node, throwIfNotFound);\n    }\n    if (typeof node === 'string' && (node in enum_js_1.Type)) {\n        return getVisitFnByTypeId(visitor, enum_js_1.Type[node], throwIfNotFound);\n    }\n    if (node && (node instanceof type_js_1.DataType)) {\n        return getVisitFnByTypeId(visitor, inferDType(node), throwIfNotFound);\n    }\n    if ((node === null || node === void 0 ? void 0 : node.type) && (node.type instanceof type_js_1.DataType)) {\n        return getVisitFnByTypeId(visitor, inferDType(node.type), throwIfNotFound);\n    }\n    return getVisitFnByTypeId(visitor, enum_js_1.Type.NONE, throwIfNotFound);\n}\n/** @ignore */\nfunction getVisitFnByTypeId(visitor, dtype, throwIfNotFound = true) {\n    let fn = null;\n    switch (dtype) {\n        case enum_js_1.Type.Null:\n            fn = visitor.visitNull;\n            break;\n        case enum_js_1.Type.Bool:\n            fn = visitor.visitBool;\n            break;\n        case enum_js_1.Type.Int:\n            fn = visitor.visitInt;\n            break;\n        case enum_js_1.Type.Int8:\n            fn = visitor.visitInt8 || visitor.visitInt;\n            break;\n        case enum_js_1.Type.Int16:\n            fn = visitor.visitInt16 || visitor.visitInt;\n            break;\n        case enum_js_1.Type.Int32:\n            fn = visitor.visitInt32 || visitor.visitInt;\n            break;\n        case enum_js_1.Type.Int64:\n            fn = visitor.visitInt64 || visitor.visitInt;\n            break;\n        case enum_js_1.Type.Uint8:\n            fn = visitor.visitUint8 || visitor.visitInt;\n            break;\n        case enum_js_1.Type.Uint16:\n            fn = visitor.visitUint16 || visitor.visitInt;\n            break;\n        case enum_js_1.Type.Uint32:\n            fn = visitor.visitUint32 || visitor.visitInt;\n            break;\n        case enum_js_1.Type.Uint64:\n            fn = visitor.visitUint64 || visitor.visitInt;\n            break;\n        case enum_js_1.Type.Float:\n            fn = visitor.visitFloat;\n            break;\n        case enum_js_1.Type.Float16:\n            fn = visitor.visitFloat16 || visitor.visitFloat;\n            break;\n        case enum_js_1.Type.Float32:\n            fn = visitor.visitFloat32 || visitor.visitFloat;\n            break;\n        case enum_js_1.Type.Float64:\n            fn = visitor.visitFloat64 || visitor.visitFloat;\n            break;\n        case enum_js_1.Type.Utf8:\n            fn = visitor.visitUtf8;\n            break;\n        case enum_js_1.Type.Binary:\n            fn = visitor.visitBinary;\n            break;\n        case enum_js_1.Type.FixedSizeBinary:\n            fn = visitor.visitFixedSizeBinary;\n            break;\n        case enum_js_1.Type.Date:\n            fn = visitor.visitDate;\n            break;\n        case enum_js_1.Type.DateDay:\n            fn = visitor.visitDateDay || visitor.visitDate;\n            break;\n        case enum_js_1.Type.DateMillisecond:\n            fn = visitor.visitDateMillisecond || visitor.visitDate;\n            break;\n        case enum_js_1.Type.Timestamp:\n            fn = visitor.visitTimestamp;\n            break;\n        case enum_js_1.Type.TimestampSecond:\n            fn = visitor.visitTimestampSecond || visitor.visitTimestamp;\n            break;\n        case enum_js_1.Type.TimestampMillisecond:\n            fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp;\n            break;\n        case enum_js_1.Type.TimestampMicrosecond:\n            fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp;\n            break;\n        case enum_js_1.Type.TimestampNanosecond:\n            fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp;\n            break;\n        case enum_js_1.Type.Time:\n            fn = visitor.visitTime;\n            break;\n        case enum_js_1.Type.TimeSecond:\n            fn = visitor.visitTimeSecond || visitor.visitTime;\n            break;\n        case enum_js_1.Type.TimeMillisecond:\n            fn = visitor.visitTimeMillisecond || visitor.visitTime;\n            break;\n        case enum_js_1.Type.TimeMicrosecond:\n            fn = visitor.visitTimeMicrosecond || visitor.visitTime;\n            break;\n        case enum_js_1.Type.TimeNanosecond:\n            fn = visitor.visitTimeNanosecond || visitor.visitTime;\n            break;\n        case enum_js_1.Type.Decimal:\n            fn = visitor.visitDecimal;\n            break;\n        case enum_js_1.Type.List:\n            fn = visitor.visitList;\n            break;\n        case enum_js_1.Type.Struct:\n            fn = visitor.visitStruct;\n            break;\n        case enum_js_1.Type.Union:\n            fn = visitor.visitUnion;\n            break;\n        case enum_js_1.Type.DenseUnion:\n            fn = visitor.visitDenseUnion || visitor.visitUnion;\n            break;\n        case enum_js_1.Type.SparseUnion:\n            fn = visitor.visitSparseUnion || visitor.visitUnion;\n            break;\n        case enum_js_1.Type.Dictionary:\n            fn = visitor.visitDictionary;\n            break;\n        case enum_js_1.Type.Interval:\n            fn = visitor.visitInterval;\n            break;\n        case enum_js_1.Type.IntervalDayTime:\n            fn = visitor.visitIntervalDayTime || visitor.visitInterval;\n            break;\n        case enum_js_1.Type.IntervalYearMonth:\n            fn = visitor.visitIntervalYearMonth || visitor.visitInterval;\n            break;\n        case enum_js_1.Type.FixedSizeList:\n            fn = visitor.visitFixedSizeList;\n            break;\n        case enum_js_1.Type.Map:\n            fn = visitor.visitMap;\n            break;\n    }\n    if (typeof fn === 'function')\n        return fn;\n    if (!throwIfNotFound)\n        return () => null;\n    throw new Error(`Unrecognized type '${enum_js_1.Type[dtype]}'`);\n}\n/** @ignore */\nfunction inferDType(type) {\n    switch (type.typeId) {\n        case enum_js_1.Type.Null: return enum_js_1.Type.Null;\n        case enum_js_1.Type.Int: {\n            const { bitWidth, isSigned } = type;\n            switch (bitWidth) {\n                case 8: return isSigned ? enum_js_1.Type.Int8 : enum_js_1.Type.Uint8;\n                case 16: return isSigned ? enum_js_1.Type.Int16 : enum_js_1.Type.Uint16;\n                case 32: return isSigned ? enum_js_1.Type.Int32 : enum_js_1.Type.Uint32;\n                case 64: return isSigned ? enum_js_1.Type.Int64 : enum_js_1.Type.Uint64;\n            }\n            // @ts-ignore\n            return enum_js_1.Type.Int;\n        }\n        case enum_js_1.Type.Float:\n            switch (type.precision) {\n                case enum_js_1.Precision.HALF: return enum_js_1.Type.Float16;\n                case enum_js_1.Precision.SINGLE: return enum_js_1.Type.Float32;\n                case enum_js_1.Precision.DOUBLE: return enum_js_1.Type.Float64;\n            }\n            // @ts-ignore\n            return enum_js_1.Type.Float;\n        case enum_js_1.Type.Binary: return enum_js_1.Type.Binary;\n        case enum_js_1.Type.Utf8: return enum_js_1.Type.Utf8;\n        case enum_js_1.Type.Bool: return enum_js_1.Type.Bool;\n        case enum_js_1.Type.Decimal: return enum_js_1.Type.Decimal;\n        case enum_js_1.Type.Time:\n            switch (type.unit) {\n                case enum_js_1.TimeUnit.SECOND: return enum_js_1.Type.TimeSecond;\n                case enum_js_1.TimeUnit.MILLISECOND: return enum_js_1.Type.TimeMillisecond;\n                case enum_js_1.TimeUnit.MICROSECOND: return enum_js_1.Type.TimeMicrosecond;\n                case enum_js_1.TimeUnit.NANOSECOND: return enum_js_1.Type.TimeNanosecond;\n            }\n            // @ts-ignore\n            return enum_js_1.Type.Time;\n        case enum_js_1.Type.Timestamp:\n            switch (type.unit) {\n                case enum_js_1.TimeUnit.SECOND: return enum_js_1.Type.TimestampSecond;\n                case enum_js_1.TimeUnit.MILLISECOND: return enum_js_1.Type.TimestampMillisecond;\n                case enum_js_1.TimeUnit.MICROSECOND: return enum_js_1.Type.TimestampMicrosecond;\n                case enum_js_1.TimeUnit.NANOSECOND: return enum_js_1.Type.TimestampNanosecond;\n            }\n            // @ts-ignore\n            return enum_js_1.Type.Timestamp;\n        case enum_js_1.Type.Date:\n            switch (type.unit) {\n                case enum_js_1.DateUnit.DAY: return enum_js_1.Type.DateDay;\n                case enum_js_1.DateUnit.MILLISECOND: return enum_js_1.Type.DateMillisecond;\n            }\n            // @ts-ignore\n            return enum_js_1.Type.Date;\n        case enum_js_1.Type.Interval:\n            switch (type.unit) {\n                case enum_js_1.IntervalUnit.DAY_TIME: return enum_js_1.Type.IntervalDayTime;\n                case enum_js_1.IntervalUnit.YEAR_MONTH: return enum_js_1.Type.IntervalYearMonth;\n            }\n            // @ts-ignore\n            return enum_js_1.Type.Interval;\n        case enum_js_1.Type.Map: return enum_js_1.Type.Map;\n        case enum_js_1.Type.List: return enum_js_1.Type.List;\n        case enum_js_1.Type.Struct: return enum_js_1.Type.Struct;\n        case enum_js_1.Type.Union:\n            switch (type.mode) {\n                case enum_js_1.UnionMode.Dense: return enum_js_1.Type.DenseUnion;\n                case enum_js_1.UnionMode.Sparse: return enum_js_1.Type.SparseUnion;\n            }\n            // @ts-ignore\n            return enum_js_1.Type.Union;\n        case enum_js_1.Type.FixedSizeBinary: return enum_js_1.Type.FixedSizeBinary;\n        case enum_js_1.Type.FixedSizeList: return enum_js_1.Type.FixedSizeList;\n        case enum_js_1.Type.Dictionary: return enum_js_1.Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${enum_js_1.Type[type.typeId]}'`);\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nVisitor.prototype.visitInt8 = null;\nVisitor.prototype.visitInt16 = null;\nVisitor.prototype.visitInt32 = null;\nVisitor.prototype.visitInt64 = null;\nVisitor.prototype.visitUint8 = null;\nVisitor.prototype.visitUint16 = null;\nVisitor.prototype.visitUint32 = null;\nVisitor.prototype.visitUint64 = null;\nVisitor.prototype.visitFloat16 = null;\nVisitor.prototype.visitFloat32 = null;\nVisitor.prototype.visitFloat64 = null;\nVisitor.prototype.visitDateDay = null;\nVisitor.prototype.visitDateMillisecond = null;\nVisitor.prototype.visitTimestampSecond = null;\nVisitor.prototype.visitTimestampMillisecond = null;\nVisitor.prototype.visitTimestampMicrosecond = null;\nVisitor.prototype.visitTimestampNanosecond = null;\nVisitor.prototype.visitTimeSecond = null;\nVisitor.prototype.visitTimeMillisecond = null;\nVisitor.prototype.visitTimeMicrosecond = null;\nVisitor.prototype.visitTimeNanosecond = null;\nVisitor.prototype.visitDenseUnion = null;\nVisitor.prototype.visitSparseUnion = null;\nVisitor.prototype.visitIntervalDayTime = null;\nVisitor.prototype.visitIntervalYearMonth = null;\n\n//# sourceMappingURL=visitor.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor/builderctor.js":
/*!**********************************************************!*\
  !*** ./node_modules/apache-arrow/visitor/builderctor.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instance = exports.GetBuilderCtor = void 0;\nconst visitor_js_1 = __webpack_require__(/*! ../visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nconst binary_js_1 = __webpack_require__(/*! ../builder/binary.js */ \"./node_modules/apache-arrow/builder/binary.js\");\nconst bool_js_1 = __webpack_require__(/*! ../builder/bool.js */ \"./node_modules/apache-arrow/builder/bool.js\");\nconst date_js_1 = __webpack_require__(/*! ../builder/date.js */ \"./node_modules/apache-arrow/builder/date.js\");\nconst decimal_js_1 = __webpack_require__(/*! ../builder/decimal.js */ \"./node_modules/apache-arrow/builder/decimal.js\");\nconst dictionary_js_1 = __webpack_require__(/*! ../builder/dictionary.js */ \"./node_modules/apache-arrow/builder/dictionary.js\");\nconst fixedsizebinary_js_1 = __webpack_require__(/*! ../builder/fixedsizebinary.js */ \"./node_modules/apache-arrow/builder/fixedsizebinary.js\");\nconst fixedsizelist_js_1 = __webpack_require__(/*! ../builder/fixedsizelist.js */ \"./node_modules/apache-arrow/builder/fixedsizelist.js\");\nconst float_js_1 = __webpack_require__(/*! ../builder/float.js */ \"./node_modules/apache-arrow/builder/float.js\");\nconst interval_js_1 = __webpack_require__(/*! ../builder/interval.js */ \"./node_modules/apache-arrow/builder/interval.js\");\nconst int_js_1 = __webpack_require__(/*! ../builder/int.js */ \"./node_modules/apache-arrow/builder/int.js\");\nconst list_js_1 = __webpack_require__(/*! ../builder/list.js */ \"./node_modules/apache-arrow/builder/list.js\");\nconst map_js_1 = __webpack_require__(/*! ../builder/map.js */ \"./node_modules/apache-arrow/builder/map.js\");\nconst null_js_1 = __webpack_require__(/*! ../builder/null.js */ \"./node_modules/apache-arrow/builder/null.js\");\nconst struct_js_1 = __webpack_require__(/*! ../builder/struct.js */ \"./node_modules/apache-arrow/builder/struct.js\");\nconst timestamp_js_1 = __webpack_require__(/*! ../builder/timestamp.js */ \"./node_modules/apache-arrow/builder/timestamp.js\");\nconst time_js_1 = __webpack_require__(/*! ../builder/time.js */ \"./node_modules/apache-arrow/builder/time.js\");\nconst union_js_1 = __webpack_require__(/*! ../builder/union.js */ \"./node_modules/apache-arrow/builder/union.js\");\nconst utf8_js_1 = __webpack_require__(/*! ../builder/utf8.js */ \"./node_modules/apache-arrow/builder/utf8.js\");\n/** @ignore */\nclass GetBuilderCtor extends visitor_js_1.Visitor {\n    visitNull() { return null_js_1.NullBuilder; }\n    visitBool() { return bool_js_1.BoolBuilder; }\n    visitInt() { return int_js_1.IntBuilder; }\n    visitInt8() { return int_js_1.Int8Builder; }\n    visitInt16() { return int_js_1.Int16Builder; }\n    visitInt32() { return int_js_1.Int32Builder; }\n    visitInt64() { return int_js_1.Int64Builder; }\n    visitUint8() { return int_js_1.Uint8Builder; }\n    visitUint16() { return int_js_1.Uint16Builder; }\n    visitUint32() { return int_js_1.Uint32Builder; }\n    visitUint64() { return int_js_1.Uint64Builder; }\n    visitFloat() { return float_js_1.FloatBuilder; }\n    visitFloat16() { return float_js_1.Float16Builder; }\n    visitFloat32() { return float_js_1.Float32Builder; }\n    visitFloat64() { return float_js_1.Float64Builder; }\n    visitUtf8() { return utf8_js_1.Utf8Builder; }\n    visitBinary() { return binary_js_1.BinaryBuilder; }\n    visitFixedSizeBinary() { return fixedsizebinary_js_1.FixedSizeBinaryBuilder; }\n    visitDate() { return date_js_1.DateBuilder; }\n    visitDateDay() { return date_js_1.DateDayBuilder; }\n    visitDateMillisecond() { return date_js_1.DateMillisecondBuilder; }\n    visitTimestamp() { return timestamp_js_1.TimestampBuilder; }\n    visitTimestampSecond() { return timestamp_js_1.TimestampSecondBuilder; }\n    visitTimestampMillisecond() { return timestamp_js_1.TimestampMillisecondBuilder; }\n    visitTimestampMicrosecond() { return timestamp_js_1.TimestampMicrosecondBuilder; }\n    visitTimestampNanosecond() { return timestamp_js_1.TimestampNanosecondBuilder; }\n    visitTime() { return time_js_1.TimeBuilder; }\n    visitTimeSecond() { return time_js_1.TimeSecondBuilder; }\n    visitTimeMillisecond() { return time_js_1.TimeMillisecondBuilder; }\n    visitTimeMicrosecond() { return time_js_1.TimeMicrosecondBuilder; }\n    visitTimeNanosecond() { return time_js_1.TimeNanosecondBuilder; }\n    visitDecimal() { return decimal_js_1.DecimalBuilder; }\n    visitList() { return list_js_1.ListBuilder; }\n    visitStruct() { return struct_js_1.StructBuilder; }\n    visitUnion() { return union_js_1.UnionBuilder; }\n    visitDenseUnion() { return union_js_1.DenseUnionBuilder; }\n    visitSparseUnion() { return union_js_1.SparseUnionBuilder; }\n    visitDictionary() { return dictionary_js_1.DictionaryBuilder; }\n    visitInterval() { return interval_js_1.IntervalBuilder; }\n    visitIntervalDayTime() { return interval_js_1.IntervalDayTimeBuilder; }\n    visitIntervalYearMonth() { return interval_js_1.IntervalYearMonthBuilder; }\n    visitFixedSizeList() { return fixedsizelist_js_1.FixedSizeListBuilder; }\n    visitMap() { return map_js_1.MapBuilder; }\n}\nexports.GetBuilderCtor = GetBuilderCtor;\n/** @ignore */\nexports.instance = new GetBuilderCtor();\n\n//# sourceMappingURL=builderctor.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor/builderctor.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor/bytelength.js":
/*!*********************************************************!*\
  !*** ./node_modules/apache-arrow/visitor/bytelength.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n/* istanbul ignore file */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instance = exports.GetByteLengthVisitor = void 0;\nconst visitor_js_1 = __webpack_require__(/*! ../visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nconst enum_js_1 = __webpack_require__(/*! ../enum.js */ \"./node_modules/apache-arrow/enum.js\");\n/** @ignore */ const sum = (x, y) => x + y;\n/** @ignore */\nclass GetByteLengthVisitor extends visitor_js_1.Visitor {\n    visitNull(____, _) {\n        return 0;\n    }\n    visitInt(data, _) {\n        return data.type.bitWidth / 8;\n    }\n    visitFloat(data, _) {\n        return data.type.ArrayType.BYTES_PER_ELEMENT;\n    }\n    visitBool(____, _) {\n        return 1 / 8;\n    }\n    visitDecimal(data, _) {\n        return data.type.bitWidth / 8;\n    }\n    visitDate(data, _) {\n        return (data.type.unit + 1) * 4;\n    }\n    visitTime(data, _) {\n        return data.type.bitWidth / 8;\n    }\n    visitTimestamp(data, _) {\n        return data.type.unit === enum_js_1.TimeUnit.SECOND ? 4 : 8;\n    }\n    visitInterval(data, _) {\n        return (data.type.unit + 1) * 4;\n    }\n    visitStruct(data, i) {\n        return data.children.reduce((total, child) => total + exports.instance.visit(child, i), 0);\n    }\n    visitFixedSizeBinary(data, _) {\n        return data.type.byteWidth;\n    }\n    visitMap(data, i) {\n        // 4 + 4 for the indices\n        return 8 + data.children.reduce((total, child) => total + exports.instance.visit(child, i), 0);\n    }\n    visitDictionary(data, i) {\n        var _a;\n        return (data.type.indices.bitWidth / 8) + (((_a = data.dictionary) === null || _a === void 0 ? void 0 : _a.getByteLength(data.values[i])) || 0);\n    }\n}\nexports.GetByteLengthVisitor = GetByteLengthVisitor;\n/** @ignore */\nconst getUtf8ByteLength = ({ valueOffsets }, index) => {\n    // 4 + 4 for the indices, `end - start` for the data bytes\n    return 8 + (valueOffsets[index + 1] - valueOffsets[index]);\n};\n/** @ignore */\nconst getBinaryByteLength = ({ valueOffsets }, index) => {\n    // 4 + 4 for the indices, `end - start` for the data bytes\n    return 8 + (valueOffsets[index + 1] - valueOffsets[index]);\n};\n/** @ignore */\nconst getListByteLength = ({ valueOffsets, stride, children }, index) => {\n    const child = children[0];\n    const { [index * stride]: start } = valueOffsets;\n    const { [index * stride + 1]: end } = valueOffsets;\n    const visit = exports.instance.getVisitFn(child.type);\n    const slice = child.slice(start, end - start);\n    let size = 8; // 4 + 4 for the indices\n    for (let idx = -1, len = end - start; ++idx < len;) {\n        size += visit(slice, idx);\n    }\n    return size;\n};\n/** @ignore */\nconst getFixedSizeListByteLength = ({ stride, children }, index) => {\n    const child = children[0];\n    const slice = child.slice(index * stride, stride);\n    const visit = exports.instance.getVisitFn(child.type);\n    let size = 0;\n    for (let idx = -1, len = slice.length; ++idx < len;) {\n        size += visit(slice, idx);\n    }\n    return size;\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getUnionByteLength = (data, index) => {\n    return data.type.mode === enum_js_1.UnionMode.Dense ?\n        getDenseUnionByteLength(data, index) :\n        getSparseUnionByteLength(data, index);\n};\n/** @ignore */\nconst getDenseUnionByteLength = ({ type, children, typeIds, valueOffsets }, index) => {\n    const childIndex = type.typeIdToChildIndex[typeIds[index]];\n    // 4 for the typeId, 4 for the valueOffsets, then the child at the offset\n    return 8 + exports.instance.visit(children[childIndex], valueOffsets[index]);\n};\n/** @ignore */\nconst getSparseUnionByteLength = ({ children }, index) => {\n    // 4 for the typeId, then once each for the children at this index\n    return 4 + exports.instance.visitMany(children, children.map(() => index)).reduce(sum, 0);\n};\nGetByteLengthVisitor.prototype.visitUtf8 = getUtf8ByteLength;\nGetByteLengthVisitor.prototype.visitBinary = getBinaryByteLength;\nGetByteLengthVisitor.prototype.visitList = getListByteLength;\nGetByteLengthVisitor.prototype.visitFixedSizeList = getFixedSizeListByteLength;\nGetByteLengthVisitor.prototype.visitUnion = getUnionByteLength;\nGetByteLengthVisitor.prototype.visitDenseUnion = getDenseUnionByteLength;\nGetByteLengthVisitor.prototype.visitSparseUnion = getSparseUnionByteLength;\n/** @ignore */\nexports.instance = new GetByteLengthVisitor();\n\n//# sourceMappingURL=bytelength.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor/bytelength.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor/get.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/visitor/get.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instance = exports.GetVisitor = void 0;\nconst bn_js_1 = __webpack_require__(/*! ../util/bn.js */ \"./node_modules/apache-arrow/util/bn.js\");\nconst vector_js_1 = __webpack_require__(/*! ../vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst visitor_js_1 = __webpack_require__(/*! ../visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nconst map_js_1 = __webpack_require__(/*! ../row/map.js */ \"./node_modules/apache-arrow/row/map.js\");\nconst struct_js_1 = __webpack_require__(/*! ../row/struct.js */ \"./node_modules/apache-arrow/row/struct.js\");\nconst utf8_js_1 = __webpack_require__(/*! ../util/utf8.js */ \"./node_modules/apache-arrow/util/utf8.js\");\nconst math_js_1 = __webpack_require__(/*! ../util/math.js */ \"./node_modules/apache-arrow/util/math.js\");\nconst enum_js_1 = __webpack_require__(/*! ../enum.js */ \"./node_modules/apache-arrow/enum.js\");\n/** @ignore */\nclass GetVisitor extends visitor_js_1.Visitor {\n}\nexports.GetVisitor = GetVisitor;\n/** @ignore */\nfunction wrapGet(fn) {\n    return (data, _1) => data.getValid(_1) ? fn(data, _1) : null;\n}\n/** @ignore */ const epochDaysToMs = (data, index) => 86400000 * data[index];\n/** @ignore */ const epochMillisecondsLongToMs = (data, index) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */ const epochMicrosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */ const epochNanosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n/** @ignore */ const epochMillisecondsToDate = (epochMs) => new Date(epochMs);\n/** @ignore */ const epochDaysToDate = (data, index) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */ const epochMillisecondsLongToDate = (data, index) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n/** @ignore */\nconst getNull = (_data, _index) => null;\n/** @ignore */\nconst getVariableWidthBytes = (values, valueOffsets, index) => {\n    if (index + 1 >= valueOffsets.length) {\n        return null;\n    }\n    const x = valueOffsets[index];\n    const y = valueOffsets[index + 1];\n    return values.subarray(x, y);\n};\n/** @ignore */\nconst getBool = ({ offset, values }, index) => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n/** @ignore */\nconst getDateDay = ({ values }, index) => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = ({ values }, index) => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric = ({ stride, values }, index) => values[stride * index];\n/** @ignore */\nconst getFloat16 = ({ stride, values }, index) => (0, math_js_1.uint16ToFloat64)(values[stride * index]);\n/** @ignore */\nconst getBigInts = ({ values }, index) => values[index];\n/** @ignore */\nconst getFixedSizeBinary = ({ stride, values }, index) => values.subarray(stride * index, stride * (index + 1));\n/** @ignore */\nconst getBinary = ({ values, valueOffsets }, index) => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = ({ values, valueOffsets }, index) => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? (0, utf8_js_1.decodeUtf8)(bytes) : null;\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = ({ values }, index) => values[index];\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = ({ type, values }, index) => (type.precision !== enum_js_1.Precision.HALF ? values[index] : (0, math_js_1.uint16ToFloat64)(values[index]));\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = (data, index) => (data.type.unit === enum_js_1.DateUnit.DAY\n    ? getDateDay(data, index)\n    : getDateMillisecond(data, index));\n/** @ignore */\nconst getTimestampSecond = ({ values }, index) => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = ({ values }, index) => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = ({ values }, index) => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond = ({ values }, index) => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp = (data, index) => {\n    switch (data.type.unit) {\n        case enum_js_1.TimeUnit.SECOND: return getTimestampSecond(data, index);\n        case enum_js_1.TimeUnit.MILLISECOND: return getTimestampMillisecond(data, index);\n        case enum_js_1.TimeUnit.MICROSECOND: return getTimestampMicrosecond(data, index);\n        case enum_js_1.TimeUnit.NANOSECOND: return getTimestampNanosecond(data, index);\n    }\n};\n/** @ignore */\nconst getTimeSecond = ({ values }, index) => values[index];\n/** @ignore */\nconst getTimeMillisecond = ({ values }, index) => values[index];\n/** @ignore */\nconst getTimeMicrosecond = ({ values }, index) => values[index];\n/** @ignore */\nconst getTimeNanosecond = ({ values }, index) => values[index];\n/* istanbul ignore next */\n/** @ignore */\nconst getTime = (data, index) => {\n    switch (data.type.unit) {\n        case enum_js_1.TimeUnit.SECOND: return getTimeSecond(data, index);\n        case enum_js_1.TimeUnit.MILLISECOND: return getTimeMillisecond(data, index);\n        case enum_js_1.TimeUnit.MICROSECOND: return getTimeMicrosecond(data, index);\n        case enum_js_1.TimeUnit.NANOSECOND: return getTimeNanosecond(data, index);\n    }\n};\n/** @ignore */\nconst getDecimal = ({ values, stride }, index) => bn_js_1.BN.decimal(values.subarray(stride * index, stride * (index + 1)));\n/** @ignore */\nconst getList = (data, index) => {\n    const { valueOffsets, stride, children } = data;\n    const { [index * stride]: begin, [index * stride + 1]: end } = valueOffsets;\n    const child = children[0];\n    const slice = child.slice(begin, end - begin);\n    return new vector_js_1.Vector([slice]);\n};\n/** @ignore */\nconst getMap = (data, index) => {\n    const { valueOffsets, children } = data;\n    const { [index]: begin, [index + 1]: end } = valueOffsets;\n    const child = children[0];\n    return new map_js_1.MapRow(child.slice(begin, end - begin));\n};\n/** @ignore */\nconst getStruct = (data, index) => {\n    return new struct_js_1.StructRow(data, index);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = (data, index) => {\n    return data.type.mode === enum_js_1.UnionMode.Dense ?\n        getDenseUnion(data, index) :\n        getSparseUnion(data, index);\n};\n/** @ignore */\nconst getDenseUnion = (data, index) => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    return exports.instance.visit(child, data.valueOffsets[index]);\n};\n/** @ignore */\nconst getSparseUnion = (data, index) => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    return exports.instance.visit(child, index);\n};\n/** @ignore */\nconst getDictionary = (data, index) => {\n    var _a;\n    return (_a = data.dictionary) === null || _a === void 0 ? void 0 : _a.get(data.values[index]);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = (data, index) => (data.type.unit === enum_js_1.IntervalUnit.DAY_TIME)\n    ? getIntervalDayTime(data, index)\n    : getIntervalYearMonth(data, index);\n/** @ignore */\nconst getIntervalDayTime = ({ values }, index) => values.subarray(2 * index, 2 * (index + 1));\n/** @ignore */\nconst getIntervalYearMonth = ({ values }, index) => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = Math.trunc(interval / 12); /* years */\n    int32s[1] = Math.trunc(interval % 12); /* months */\n    return int32s;\n};\n/** @ignore */\nconst getFixedSizeList = (data, index) => {\n    const { stride, children } = data;\n    const child = children[0];\n    const slice = child.slice(index * stride, stride);\n    return new vector_js_1.Vector([slice]);\n};\nGetVisitor.prototype.visitNull = wrapGet(getNull);\nGetVisitor.prototype.visitBool = wrapGet(getBool);\nGetVisitor.prototype.visitInt = wrapGet(getInt);\nGetVisitor.prototype.visitInt8 = wrapGet(getNumeric);\nGetVisitor.prototype.visitInt16 = wrapGet(getNumeric);\nGetVisitor.prototype.visitInt32 = wrapGet(getNumeric);\nGetVisitor.prototype.visitInt64 = wrapGet(getBigInts);\nGetVisitor.prototype.visitUint8 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUint16 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUint32 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUint64 = wrapGet(getBigInts);\nGetVisitor.prototype.visitFloat = wrapGet(getFloat);\nGetVisitor.prototype.visitFloat16 = wrapGet(getFloat16);\nGetVisitor.prototype.visitFloat32 = wrapGet(getNumeric);\nGetVisitor.prototype.visitFloat64 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUtf8 = wrapGet(getUtf8);\nGetVisitor.prototype.visitBinary = wrapGet(getBinary);\nGetVisitor.prototype.visitFixedSizeBinary = wrapGet(getFixedSizeBinary);\nGetVisitor.prototype.visitDate = wrapGet(getDate);\nGetVisitor.prototype.visitDateDay = wrapGet(getDateDay);\nGetVisitor.prototype.visitDateMillisecond = wrapGet(getDateMillisecond);\nGetVisitor.prototype.visitTimestamp = wrapGet(getTimestamp);\nGetVisitor.prototype.visitTimestampSecond = wrapGet(getTimestampSecond);\nGetVisitor.prototype.visitTimestampMillisecond = wrapGet(getTimestampMillisecond);\nGetVisitor.prototype.visitTimestampMicrosecond = wrapGet(getTimestampMicrosecond);\nGetVisitor.prototype.visitTimestampNanosecond = wrapGet(getTimestampNanosecond);\nGetVisitor.prototype.visitTime = wrapGet(getTime);\nGetVisitor.prototype.visitTimeSecond = wrapGet(getTimeSecond);\nGetVisitor.prototype.visitTimeMillisecond = wrapGet(getTimeMillisecond);\nGetVisitor.prototype.visitTimeMicrosecond = wrapGet(getTimeMicrosecond);\nGetVisitor.prototype.visitTimeNanosecond = wrapGet(getTimeNanosecond);\nGetVisitor.prototype.visitDecimal = wrapGet(getDecimal);\nGetVisitor.prototype.visitList = wrapGet(getList);\nGetVisitor.prototype.visitStruct = wrapGet(getStruct);\nGetVisitor.prototype.visitUnion = wrapGet(getUnion);\nGetVisitor.prototype.visitDenseUnion = wrapGet(getDenseUnion);\nGetVisitor.prototype.visitSparseUnion = wrapGet(getSparseUnion);\nGetVisitor.prototype.visitDictionary = wrapGet(getDictionary);\nGetVisitor.prototype.visitInterval = wrapGet(getInterval);\nGetVisitor.prototype.visitIntervalDayTime = wrapGet(getIntervalDayTime);\nGetVisitor.prototype.visitIntervalYearMonth = wrapGet(getIntervalYearMonth);\nGetVisitor.prototype.visitFixedSizeList = wrapGet(getFixedSizeList);\nGetVisitor.prototype.visitMap = wrapGet(getMap);\n/** @ignore */\nexports.instance = new GetVisitor();\n\n//# sourceMappingURL=get.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor/get.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor/indexof.js":
/*!******************************************************!*\
  !*** ./node_modules/apache-arrow/visitor/indexof.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instance = exports.IndexOfVisitor = void 0;\nconst visitor_js_1 = __webpack_require__(/*! ../visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nconst get_js_1 = __webpack_require__(/*! ./get.js */ \"./node_modules/apache-arrow/visitor/get.js\");\nconst bit_js_1 = __webpack_require__(/*! ../util/bit.js */ \"./node_modules/apache-arrow/util/bit.js\");\nconst vector_js_1 = __webpack_require__(/*! ../util/vector.js */ \"./node_modules/apache-arrow/util/vector.js\");\n/** @ignore */\nclass IndexOfVisitor extends visitor_js_1.Visitor {\n}\nexports.IndexOfVisitor = IndexOfVisitor;\n/** @ignore */\nfunction nullIndexOf(data, searchElement) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && data.length > 0 ? 0 : -1;\n}\n/** @ignore */\nfunction indexOfNull(data, fromIndex) {\n    const { nullBitmap } = data;\n    if (!nullBitmap || data.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of new bit_js_1.BitIterator(nullBitmap, data.offset + (fromIndex || 0), data.length, nullBitmap, bit_js_1.getBool)) {\n        if (!isValid) {\n            return i;\n        }\n        ++i;\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfValue(data, searchElement, fromIndex) {\n    if (searchElement === undefined) {\n        return -1;\n    }\n    if (searchElement === null) {\n        return indexOfNull(data, fromIndex);\n    }\n    const get = get_js_1.instance.getVisitFn(data);\n    const compare = (0, vector_js_1.createElementComparator)(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = data.length; ++i < n;) {\n        if (compare(get(data, i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfUnion(data, searchElement, fromIndex) {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const get = get_js_1.instance.getVisitFn(data);\n    const compare = (0, vector_js_1.createElementComparator)(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = data.length; ++i < n;) {\n        if (compare(get(data, i))) {\n            return i;\n        }\n    }\n    return -1;\n}\nIndexOfVisitor.prototype.visitNull = nullIndexOf;\nIndexOfVisitor.prototype.visitBool = indexOfValue;\nIndexOfVisitor.prototype.visitInt = indexOfValue;\nIndexOfVisitor.prototype.visitInt8 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16 = indexOfValue;\nIndexOfVisitor.prototype.visitInt32 = indexOfValue;\nIndexOfVisitor.prototype.visitInt64 = indexOfValue;\nIndexOfVisitor.prototype.visitUint8 = indexOfValue;\nIndexOfVisitor.prototype.visitUint16 = indexOfValue;\nIndexOfVisitor.prototype.visitUint32 = indexOfValue;\nIndexOfVisitor.prototype.visitUint64 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64 = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary = indexOfValue;\nIndexOfVisitor.prototype.visitDate = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTime = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal = indexOfValue;\nIndexOfVisitor.prototype.visitList = indexOfValue;\nIndexOfVisitor.prototype.visitStruct = indexOfValue;\nIndexOfVisitor.prototype.visitUnion = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary = indexOfValue;\nIndexOfVisitor.prototype.visitInterval = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList = indexOfValue;\nIndexOfVisitor.prototype.visitMap = indexOfValue;\n/** @ignore */\nexports.instance = new IndexOfVisitor();\n\n//# sourceMappingURL=indexof.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor/indexof.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor/iterator.js":
/*!*******************************************************!*\
  !*** ./node_modules/apache-arrow/visitor/iterator.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instance = exports.IteratorVisitor = void 0;\nconst visitor_js_1 = __webpack_require__(/*! ../visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nconst enum_js_1 = __webpack_require__(/*! ../enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\nconst chunk_js_1 = __webpack_require__(/*! ../util/chunk.js */ \"./node_modules/apache-arrow/util/chunk.js\");\n/** @ignore */\nclass IteratorVisitor extends visitor_js_1.Visitor {\n}\nexports.IteratorVisitor = IteratorVisitor;\n/** @ignore */\nfunction vectorIterator(vector) {\n    const { type } = vector;\n    // Fast case, defer to native iterators if possible\n    if (vector.nullCount === 0 && vector.stride === 1 && ((type.typeId === enum_js_1.Type.Timestamp) ||\n        (type instanceof type_js_1.Int && type.bitWidth !== 64) ||\n        (type instanceof type_js_1.Time && type.bitWidth !== 64) ||\n        (type instanceof type_js_1.Float && type.precision !== enum_js_1.Precision.HALF))) {\n        return new chunk_js_1.ChunkedIterator(vector.data.length, (chunkIndex) => {\n            const data = vector.data[chunkIndex];\n            return data.values.subarray(0, data.length)[Symbol.iterator]();\n        });\n    }\n    // Otherwise, iterate manually\n    let offset = 0;\n    return new chunk_js_1.ChunkedIterator(vector.data.length, (chunkIndex) => {\n        const data = vector.data[chunkIndex];\n        const length = data.length;\n        const inner = vector.slice(offset, offset + length);\n        offset += length;\n        return new VectorIterator(inner);\n    });\n}\n/** @ignore */\nclass VectorIterator {\n    constructor(vector) {\n        this.vector = vector;\n        this.index = 0;\n    }\n    next() {\n        if (this.index < this.vector.length) {\n            return {\n                value: this.vector.get(this.index++)\n            };\n        }\n        return { done: true, value: null };\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\nIteratorVisitor.prototype.visitNull = vectorIterator;\nIteratorVisitor.prototype.visitBool = vectorIterator;\nIteratorVisitor.prototype.visitInt = vectorIterator;\nIteratorVisitor.prototype.visitInt8 = vectorIterator;\nIteratorVisitor.prototype.visitInt16 = vectorIterator;\nIteratorVisitor.prototype.visitInt32 = vectorIterator;\nIteratorVisitor.prototype.visitInt64 = vectorIterator;\nIteratorVisitor.prototype.visitUint8 = vectorIterator;\nIteratorVisitor.prototype.visitUint16 = vectorIterator;\nIteratorVisitor.prototype.visitUint32 = vectorIterator;\nIteratorVisitor.prototype.visitUint64 = vectorIterator;\nIteratorVisitor.prototype.visitFloat = vectorIterator;\nIteratorVisitor.prototype.visitFloat16 = vectorIterator;\nIteratorVisitor.prototype.visitFloat32 = vectorIterator;\nIteratorVisitor.prototype.visitFloat64 = vectorIterator;\nIteratorVisitor.prototype.visitUtf8 = vectorIterator;\nIteratorVisitor.prototype.visitBinary = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary = vectorIterator;\nIteratorVisitor.prototype.visitDate = vectorIterator;\nIteratorVisitor.prototype.visitDateDay = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitTime = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitDecimal = vectorIterator;\nIteratorVisitor.prototype.visitList = vectorIterator;\nIteratorVisitor.prototype.visitStruct = vectorIterator;\nIteratorVisitor.prototype.visitUnion = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion = vectorIterator;\nIteratorVisitor.prototype.visitDictionary = vectorIterator;\nIteratorVisitor.prototype.visitInterval = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList = vectorIterator;\nIteratorVisitor.prototype.visitMap = vectorIterator;\n/** @ignore */\nexports.instance = new IteratorVisitor();\n\n//# sourceMappingURL=iterator.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor/iterator.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor/jsontypeassembler.js":
/*!****************************************************************!*\
  !*** ./node_modules/apache-arrow/visitor/jsontypeassembler.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JSONTypeAssembler = void 0;\nconst visitor_js_1 = __webpack_require__(/*! ../visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nconst type_js_1 = __webpack_require__(/*! ../fb/type.js */ \"./node_modules/apache-arrow/fb/type.js\");\nconst enum_js_1 = __webpack_require__(/*! ../enum.js */ \"./node_modules/apache-arrow/enum.js\");\n/** @ignore */\nclass JSONTypeAssembler extends visitor_js_1.Visitor {\n    visit(node) {\n        return node == null ? undefined : super.visit(node);\n    }\n    visitNull({ typeId }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase() };\n    }\n    visitInt({ typeId, bitWidth, isSigned }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase(), 'bitWidth': bitWidth, 'isSigned': isSigned };\n    }\n    visitFloat({ typeId, precision }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase(), 'precision': enum_js_1.Precision[precision] };\n    }\n    visitBinary({ typeId }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase() };\n    }\n    visitBool({ typeId }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase() };\n    }\n    visitUtf8({ typeId }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase() };\n    }\n    visitDecimal({ typeId, scale, precision, bitWidth }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase(), 'scale': scale, 'precision': precision, 'bitWidth': bitWidth };\n    }\n    visitDate({ typeId, unit }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase(), 'unit': enum_js_1.DateUnit[unit] };\n    }\n    visitTime({ typeId, unit, bitWidth }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase(), 'unit': enum_js_1.TimeUnit[unit], bitWidth };\n    }\n    visitTimestamp({ typeId, timezone, unit }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase(), 'unit': enum_js_1.TimeUnit[unit], timezone };\n    }\n    visitInterval({ typeId, unit }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase(), 'unit': enum_js_1.IntervalUnit[unit] };\n    }\n    visitList({ typeId }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase() };\n    }\n    visitStruct({ typeId }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase() };\n    }\n    visitUnion({ typeId, mode, typeIds }) {\n        return {\n            'name': type_js_1.Type[typeId].toLowerCase(),\n            'mode': enum_js_1.UnionMode[mode],\n            'typeIds': [...typeIds]\n        };\n    }\n    visitDictionary(node) {\n        return this.visit(node.dictionary);\n    }\n    visitFixedSizeBinary({ typeId, byteWidth }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase(), 'byteWidth': byteWidth };\n    }\n    visitFixedSizeList({ typeId, listSize }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase(), 'listSize': listSize };\n    }\n    visitMap({ typeId, keysSorted }) {\n        return { 'name': type_js_1.Type[typeId].toLowerCase(), 'keysSorted': keysSorted };\n    }\n}\nexports.JSONTypeAssembler = JSONTypeAssembler;\n\n//# sourceMappingURL=jsontypeassembler.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor/jsontypeassembler.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor/jsonvectorassembler.js":
/*!******************************************************************!*\
  !*** ./node_modules/apache-arrow/visitor/jsonvectorassembler.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JSONVectorAssembler = void 0;\nconst bn_js_1 = __webpack_require__(/*! ../util/bn.js */ \"./node_modules/apache-arrow/util/bn.js\");\nconst vector_js_1 = __webpack_require__(/*! ../vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst visitor_js_1 = __webpack_require__(/*! ../visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nconst enum_js_1 = __webpack_require__(/*! ../enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst enum_js_2 = __webpack_require__(/*! ../enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst bit_js_1 = __webpack_require__(/*! ../util/bit.js */ \"./node_modules/apache-arrow/util/bit.js\");\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\n/** @ignore */\nclass JSONVectorAssembler extends visitor_js_1.Visitor {\n    /** @nocollapse */\n    static assemble(...batches) {\n        const assemlber = new JSONVectorAssembler();\n        return batches.map(({ schema, data }) => {\n            return assemlber.visitMany(schema.fields, data.children);\n        });\n    }\n    visit({ name }, data) {\n        const { length } = data;\n        const { offset, nullCount, nullBitmap } = data;\n        const type = type_js_1.DataType.isDictionary(data.type) ? data.type.indices : data.type;\n        const buffers = Object.assign([], data.buffers, { [enum_js_1.BufferType.VALIDITY]: undefined });\n        return Object.assign({ 'name': name, 'count': length, 'VALIDITY': type_js_1.DataType.isNull(type) ? undefined\n                : nullCount <= 0 ? Array.from({ length }, () => 1)\n                    : [...new bit_js_1.BitIterator(nullBitmap, offset, length, null, bit_js_1.getBit)] }, super.visit(data.clone(type, offset, length, 0, buffers)));\n    }\n    visitNull() { return {}; }\n    visitBool({ values, offset, length }) {\n        return { 'DATA': [...new bit_js_1.BitIterator(values, offset, length, null, bit_js_1.getBool)] };\n    }\n    visitInt(data) {\n        return {\n            'DATA': data.type.bitWidth < 64\n                ? [...data.values]\n                : [...bigNumsToStrings(data.values, 2)]\n        };\n    }\n    visitFloat(data) {\n        return { 'DATA': [...data.values] };\n    }\n    visitUtf8(data) {\n        return { 'DATA': [...new vector_js_1.Vector([data])], 'OFFSET': [...data.valueOffsets] };\n    }\n    visitBinary(data) {\n        return { 'DATA': [...binaryToString(new vector_js_1.Vector([data]))], OFFSET: [...data.valueOffsets] };\n    }\n    visitFixedSizeBinary(data) {\n        return { 'DATA': [...binaryToString(new vector_js_1.Vector([data]))] };\n    }\n    visitDate(data) {\n        return {\n            'DATA': data.type.unit === enum_js_2.DateUnit.DAY\n                ? [...data.values]\n                : [...bigNumsToStrings(data.values, 2)]\n        };\n    }\n    visitTimestamp(data) {\n        return { 'DATA': [...bigNumsToStrings(data.values, 2)] };\n    }\n    visitTime(data) {\n        return {\n            'DATA': data.type.unit < enum_js_2.TimeUnit.MICROSECOND\n                ? [...data.values]\n                : [...bigNumsToStrings(data.values, 2)]\n        };\n    }\n    visitDecimal(data) {\n        return { 'DATA': [...bigNumsToStrings(data.values, 4)] };\n    }\n    visitList(data) {\n        return {\n            'OFFSET': [...data.valueOffsets],\n            'children': this.visitMany(data.type.children, data.children)\n        };\n    }\n    visitStruct(data) {\n        return {\n            'children': this.visitMany(data.type.children, data.children)\n        };\n    }\n    visitUnion(data) {\n        return {\n            'TYPE': [...data.typeIds],\n            'OFFSET': data.type.mode === enum_js_2.UnionMode.Dense ? [...data.valueOffsets] : undefined,\n            'children': this.visitMany(data.type.children, data.children)\n        };\n    }\n    visitInterval(data) {\n        return { 'DATA': [...data.values] };\n    }\n    visitFixedSizeList(data) {\n        return {\n            'children': this.visitMany(data.type.children, data.children)\n        };\n    }\n    visitMap(data) {\n        return {\n            'OFFSET': [...data.valueOffsets],\n            'children': this.visitMany(data.type.children, data.children)\n        };\n    }\n}\nexports.JSONVectorAssembler = JSONVectorAssembler;\n/** @ignore */\nfunction* binaryToString(vector) {\n    for (const octets of vector) {\n        yield octets.reduce((str, byte) => {\n            return `${str}${('0' + (byte & 0xFF).toString(16)).slice(-2)}`;\n        }, '').toUpperCase();\n    }\n}\n/** @ignore */\nfunction* bigNumsToStrings(values, stride) {\n    const u32s = new Uint32Array(values.buffer);\n    for (let i = -1, n = u32s.length / stride; ++i < n;) {\n        yield `${bn_js_1.BN.new(u32s.subarray((i + 0) * stride, (i + 1) * stride), false)}`;\n    }\n}\n\n//# sourceMappingURL=jsonvectorassembler.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor/jsonvectorassembler.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor/set.js":
/*!**************************************************!*\
  !*** ./node_modules/apache-arrow/visitor/set.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instance = exports.setIntervalYearMonth = exports.setIntervalDayTime = exports.setIntervalValue = exports.setDecimal = exports.setTime = exports.setTimeNanosecond = exports.setTimeMicrosecond = exports.setTimeMillisecond = exports.setTimeSecond = exports.setTimestamp = exports.setTimestampNanosecond = exports.setTimestampMicrosecond = exports.setTimestampMillisecond = exports.setTimestampSecond = exports.setDate = exports.setFixedSizeBinary = exports.setDateMillisecond = exports.setDateDay = exports.setAnyFloat = exports.setFloat16 = exports.setFloat = exports.setInt = exports.setVariableWidthBytes = exports.setEpochMsToNanosecondsLong = exports.setEpochMsToMicrosecondsLong = exports.setEpochMsToMillisecondsLong = exports.setEpochMsToDays = exports.SetVisitor = void 0;\nconst vector_js_1 = __webpack_require__(/*! ../vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst visitor_js_1 = __webpack_require__(/*! ../visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nconst utf8_js_1 = __webpack_require__(/*! ../util/utf8.js */ \"./node_modules/apache-arrow/util/utf8.js\");\nconst math_js_1 = __webpack_require__(/*! ../util/math.js */ \"./node_modules/apache-arrow/util/math.js\");\nconst enum_js_1 = __webpack_require__(/*! ../enum.js */ \"./node_modules/apache-arrow/enum.js\");\n/** @ignore */\nclass SetVisitor extends visitor_js_1.Visitor {\n}\nexports.SetVisitor = SetVisitor;\n/** @ignore */\nfunction wrapSet(fn) {\n    return (data, _1, _2) => {\n        if (data.setValid(_1, _2 != null)) {\n            return fn(data, _1, _2);\n        }\n    };\n}\n/** @ignore */\nconst setEpochMsToDays = (data, index, epochMs) => { data[index] = Math.trunc(epochMs / 86400000); };\nexports.setEpochMsToDays = setEpochMsToDays;\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data, index, epochMs) => {\n    data[index] = Math.trunc(epochMs % 4294967296);\n    data[index + 1] = Math.trunc(epochMs / 4294967296);\n};\nexports.setEpochMsToMillisecondsLong = setEpochMsToMillisecondsLong;\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data, index, epochMs) => {\n    data[index] = Math.trunc((epochMs * 1000) % 4294967296);\n    data[index + 1] = Math.trunc((epochMs * 1000) / 4294967296);\n};\nexports.setEpochMsToMicrosecondsLong = setEpochMsToMicrosecondsLong;\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data, index, epochMs) => {\n    data[index] = Math.trunc((epochMs * 1000000) % 4294967296);\n    data[index + 1] = Math.trunc((epochMs * 1000000) / 4294967296);\n};\nexports.setEpochMsToNanosecondsLong = setEpochMsToNanosecondsLong;\n/** @ignore */\nconst setVariableWidthBytes = (values, valueOffsets, index, value) => {\n    if (index + 1 < valueOffsets.length) {\n        const { [index]: x, [index + 1]: y } = valueOffsets;\n        values.set(value.subarray(0, y - x), x);\n    }\n};\nexports.setVariableWidthBytes = setVariableWidthBytes;\n/** @ignore */\nconst setBool = ({ offset, values }, index, val) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |= (1 << (idx % 8))) // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n};\n/** @ignore */\nconst setInt = ({ values }, index, value) => { values[index] = value; };\nexports.setInt = setInt;\n/** @ignore */\nconst setFloat = ({ values }, index, value) => { values[index] = value; };\nexports.setFloat = setFloat;\n/** @ignore */\nconst setFloat16 = ({ values }, index, value) => { values[index] = (0, math_js_1.float64ToUint16)(value); };\nexports.setFloat16 = setFloat16;\n/* istanbul ignore next */\n/** @ignore */\nconst setAnyFloat = (data, index, value) => {\n    switch (data.type.precision) {\n        case enum_js_1.Precision.HALF:\n            return (0, exports.setFloat16)(data, index, value);\n        case enum_js_1.Precision.SINGLE:\n        case enum_js_1.Precision.DOUBLE:\n            return (0, exports.setFloat)(data, index, value);\n    }\n};\nexports.setAnyFloat = setAnyFloat;\n/** @ignore */\nconst setDateDay = ({ values }, index, value) => { (0, exports.setEpochMsToDays)(values, index, value.valueOf()); };\nexports.setDateDay = setDateDay;\n/** @ignore */\nconst setDateMillisecond = ({ values }, index, value) => { (0, exports.setEpochMsToMillisecondsLong)(values, index * 2, value.valueOf()); };\nexports.setDateMillisecond = setDateMillisecond;\n/** @ignore */\nconst setFixedSizeBinary = ({ stride, values }, index, value) => { values.set(value.subarray(0, stride), stride * index); };\nexports.setFixedSizeBinary = setFixedSizeBinary;\n/** @ignore */\nconst setBinary = ({ values, valueOffsets }, index, value) => (0, exports.setVariableWidthBytes)(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = ({ values, valueOffsets }, index, value) => {\n    (0, exports.setVariableWidthBytes)(values, valueOffsets, index, (0, utf8_js_1.encodeUtf8)(value));\n};\n/* istanbul ignore next */\nconst setDate = (data, index, value) => {\n    data.type.unit === enum_js_1.DateUnit.DAY\n        ? (0, exports.setDateDay)(data, index, value)\n        : (0, exports.setDateMillisecond)(data, index, value);\n};\nexports.setDate = setDate;\n/** @ignore */\nconst setTimestampSecond = ({ values }, index, value) => (0, exports.setEpochMsToMillisecondsLong)(values, index * 2, value / 1000);\nexports.setTimestampSecond = setTimestampSecond;\n/** @ignore */\nconst setTimestampMillisecond = ({ values }, index, value) => (0, exports.setEpochMsToMillisecondsLong)(values, index * 2, value);\nexports.setTimestampMillisecond = setTimestampMillisecond;\n/** @ignore */\nconst setTimestampMicrosecond = ({ values }, index, value) => (0, exports.setEpochMsToMicrosecondsLong)(values, index * 2, value);\nexports.setTimestampMicrosecond = setTimestampMicrosecond;\n/** @ignore */\nconst setTimestampNanosecond = ({ values }, index, value) => (0, exports.setEpochMsToNanosecondsLong)(values, index * 2, value);\nexports.setTimestampNanosecond = setTimestampNanosecond;\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp = (data, index, value) => {\n    switch (data.type.unit) {\n        case enum_js_1.TimeUnit.SECOND: return (0, exports.setTimestampSecond)(data, index, value);\n        case enum_js_1.TimeUnit.MILLISECOND: return (0, exports.setTimestampMillisecond)(data, index, value);\n        case enum_js_1.TimeUnit.MICROSECOND: return (0, exports.setTimestampMicrosecond)(data, index, value);\n        case enum_js_1.TimeUnit.NANOSECOND: return (0, exports.setTimestampNanosecond)(data, index, value);\n    }\n};\nexports.setTimestamp = setTimestamp;\n/** @ignore */\nconst setTimeSecond = ({ values }, index, value) => { values[index] = value; };\nexports.setTimeSecond = setTimeSecond;\n/** @ignore */\nconst setTimeMillisecond = ({ values }, index, value) => { values[index] = value; };\nexports.setTimeMillisecond = setTimeMillisecond;\n/** @ignore */\nconst setTimeMicrosecond = ({ values }, index, value) => { values[index] = value; };\nexports.setTimeMicrosecond = setTimeMicrosecond;\n/** @ignore */\nconst setTimeNanosecond = ({ values }, index, value) => { values[index] = value; };\nexports.setTimeNanosecond = setTimeNanosecond;\n/* istanbul ignore next */\n/** @ignore */\nconst setTime = (data, index, value) => {\n    switch (data.type.unit) {\n        case enum_js_1.TimeUnit.SECOND: return (0, exports.setTimeSecond)(data, index, value);\n        case enum_js_1.TimeUnit.MILLISECOND: return (0, exports.setTimeMillisecond)(data, index, value);\n        case enum_js_1.TimeUnit.MICROSECOND: return (0, exports.setTimeMicrosecond)(data, index, value);\n        case enum_js_1.TimeUnit.NANOSECOND: return (0, exports.setTimeNanosecond)(data, index, value);\n    }\n};\nexports.setTime = setTime;\n/** @ignore */\nconst setDecimal = ({ values, stride }, index, value) => { values.set(value.subarray(0, stride), stride * index); };\nexports.setDecimal = setDecimal;\n/** @ignore */\nconst setList = (data, index, value) => {\n    const values = data.children[0];\n    const valueOffsets = data.valueOffsets;\n    const set = exports.instance.getVisitFn(values);\n    if (Array.isArray(value)) {\n        for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n            set(values, itr++, value[++idx]);\n        }\n    }\n    else {\n        for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n            set(values, itr++, value.get(++idx));\n        }\n    }\n};\n/** @ignore */\nconst setMap = (data, index, value) => {\n    const values = data.children[0];\n    const { valueOffsets } = data;\n    const set = exports.instance.getVisitFn(values);\n    let { [index]: idx, [index + 1]: end } = valueOffsets;\n    const entries = value instanceof Map ? value.entries() : Object.entries(value);\n    for (const val of entries) {\n        set(values, idx, val);\n        if (++idx >= end)\n            break;\n    }\n};\n/** @ignore */ const _setStructArrayValue = (o, v) => (set, c, _, i) => c && set(c, o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o, v) => (set, c, _, i) => c && set(c, o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o, v) => (set, c, f, _) => c && set(c, o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o, v) => (set, c, f, _) => c && set(c, o, v[f.name]);\n/** @ignore */\nconst setStruct = (data, index, value) => {\n    const childSetters = data.type.children.map((f) => exports.instance.getVisitFn(f.type));\n    const set = value instanceof Map ? _setStructMapValue(index, value) :\n        value instanceof vector_js_1.Vector ? _setStructVectorValue(index, value) :\n            Array.isArray(value) ? _setStructArrayValue(index, value) :\n                _setStructObjectValue(index, value);\n    // eslint-disable-next-line unicorn/no-array-for-each\n    data.type.children.forEach((f, i) => set(childSetters[i], data.children[i], f, i));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = (data, index, value) => {\n    data.type.mode === enum_js_1.UnionMode.Dense ?\n        setDenseUnion(data, index, value) :\n        setSparseUnion(data, index, value);\n};\n/** @ignore */\nconst setDenseUnion = (data, index, value) => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    exports.instance.visit(child, data.valueOffsets[index], value);\n};\n/** @ignore */\nconst setSparseUnion = (data, index, value) => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    exports.instance.visit(child, index, value);\n};\n/** @ignore */\nconst setDictionary = (data, index, value) => {\n    var _a;\n    (_a = data.dictionary) === null || _a === void 0 ? void 0 : _a.set(data.values[index], value);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = (data, index, value) => {\n    (data.type.unit === enum_js_1.IntervalUnit.DAY_TIME)\n        ? (0, exports.setIntervalDayTime)(data, index, value)\n        : (0, exports.setIntervalYearMonth)(data, index, value);\n};\nexports.setIntervalValue = setIntervalValue;\n/** @ignore */\nconst setIntervalDayTime = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\nexports.setIntervalDayTime = setIntervalDayTime;\n/** @ignore */\nconst setIntervalYearMonth = ({ values }, index, value) => { values[index] = (value[0] * 12) + (value[1] % 12); };\nexports.setIntervalYearMonth = setIntervalYearMonth;\n/** @ignore */\nconst setFixedSizeList = (data, index, value) => {\n    const { stride } = data;\n    const child = data.children[0];\n    const set = exports.instance.getVisitFn(child);\n    if (Array.isArray(value)) {\n        for (let idx = -1, offset = index * stride; ++idx < stride;) {\n            set(child, offset + idx, value[idx]);\n        }\n    }\n    else {\n        for (let idx = -1, offset = index * stride; ++idx < stride;) {\n            set(child, offset + idx, value.get(idx));\n        }\n    }\n};\nSetVisitor.prototype.visitBool = wrapSet(setBool);\nSetVisitor.prototype.visitInt = wrapSet(exports.setInt);\nSetVisitor.prototype.visitInt8 = wrapSet(exports.setInt);\nSetVisitor.prototype.visitInt16 = wrapSet(exports.setInt);\nSetVisitor.prototype.visitInt32 = wrapSet(exports.setInt);\nSetVisitor.prototype.visitInt64 = wrapSet(exports.setInt);\nSetVisitor.prototype.visitUint8 = wrapSet(exports.setInt);\nSetVisitor.prototype.visitUint16 = wrapSet(exports.setInt);\nSetVisitor.prototype.visitUint32 = wrapSet(exports.setInt);\nSetVisitor.prototype.visitUint64 = wrapSet(exports.setInt);\nSetVisitor.prototype.visitFloat = wrapSet(exports.setAnyFloat);\nSetVisitor.prototype.visitFloat16 = wrapSet(exports.setFloat16);\nSetVisitor.prototype.visitFloat32 = wrapSet(exports.setFloat);\nSetVisitor.prototype.visitFloat64 = wrapSet(exports.setFloat);\nSetVisitor.prototype.visitUtf8 = wrapSet(setUtf8);\nSetVisitor.prototype.visitBinary = wrapSet(setBinary);\nSetVisitor.prototype.visitFixedSizeBinary = wrapSet(exports.setFixedSizeBinary);\nSetVisitor.prototype.visitDate = wrapSet(exports.setDate);\nSetVisitor.prototype.visitDateDay = wrapSet(exports.setDateDay);\nSetVisitor.prototype.visitDateMillisecond = wrapSet(exports.setDateMillisecond);\nSetVisitor.prototype.visitTimestamp = wrapSet(exports.setTimestamp);\nSetVisitor.prototype.visitTimestampSecond = wrapSet(exports.setTimestampSecond);\nSetVisitor.prototype.visitTimestampMillisecond = wrapSet(exports.setTimestampMillisecond);\nSetVisitor.prototype.visitTimestampMicrosecond = wrapSet(exports.setTimestampMicrosecond);\nSetVisitor.prototype.visitTimestampNanosecond = wrapSet(exports.setTimestampNanosecond);\nSetVisitor.prototype.visitTime = wrapSet(exports.setTime);\nSetVisitor.prototype.visitTimeSecond = wrapSet(exports.setTimeSecond);\nSetVisitor.prototype.visitTimeMillisecond = wrapSet(exports.setTimeMillisecond);\nSetVisitor.prototype.visitTimeMicrosecond = wrapSet(exports.setTimeMicrosecond);\nSetVisitor.prototype.visitTimeNanosecond = wrapSet(exports.setTimeNanosecond);\nSetVisitor.prototype.visitDecimal = wrapSet(exports.setDecimal);\nSetVisitor.prototype.visitList = wrapSet(setList);\nSetVisitor.prototype.visitStruct = wrapSet(setStruct);\nSetVisitor.prototype.visitUnion = wrapSet(setUnion);\nSetVisitor.prototype.visitDenseUnion = wrapSet(setDenseUnion);\nSetVisitor.prototype.visitSparseUnion = wrapSet(setSparseUnion);\nSetVisitor.prototype.visitDictionary = wrapSet(setDictionary);\nSetVisitor.prototype.visitInterval = wrapSet(exports.setIntervalValue);\nSetVisitor.prototype.visitIntervalDayTime = wrapSet(exports.setIntervalDayTime);\nSetVisitor.prototype.visitIntervalYearMonth = wrapSet(exports.setIntervalYearMonth);\nSetVisitor.prototype.visitFixedSizeList = wrapSet(setFixedSizeList);\nSetVisitor.prototype.visitMap = wrapSet(setMap);\n/** @ignore */\nexports.instance = new SetVisitor();\n\n//# sourceMappingURL=set.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor/set.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor/typeassembler.js":
/*!************************************************************!*\
  !*** ./node_modules/apache-arrow/visitor/typeassembler.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instance = exports.TypeAssembler = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst flatbuffers = tslib_1.__importStar(__webpack_require__(/*! flatbuffers */ \"./node_modules/flatbuffers/mjs/flatbuffers.js\"));\nvar Long = flatbuffers.Long;\nconst visitor_js_1 = __webpack_require__(/*! ../visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nconst null_js_1 = __webpack_require__(/*! ../fb/null.js */ \"./node_modules/apache-arrow/fb/null.js\");\nconst int_js_1 = __webpack_require__(/*! ../fb/int.js */ \"./node_modules/apache-arrow/fb/int.js\");\nconst floating_point_js_1 = __webpack_require__(/*! ../fb/floating-point.js */ \"./node_modules/apache-arrow/fb/floating-point.js\");\nconst binary_js_1 = __webpack_require__(/*! ../fb/binary.js */ \"./node_modules/apache-arrow/fb/binary.js\");\nconst bool_js_1 = __webpack_require__(/*! ../fb/bool.js */ \"./node_modules/apache-arrow/fb/bool.js\");\nconst utf8_js_1 = __webpack_require__(/*! ../fb/utf8.js */ \"./node_modules/apache-arrow/fb/utf8.js\");\nconst decimal_js_1 = __webpack_require__(/*! ../fb/decimal.js */ \"./node_modules/apache-arrow/fb/decimal.js\");\nconst date_js_1 = __webpack_require__(/*! ../fb/date.js */ \"./node_modules/apache-arrow/fb/date.js\");\nconst time_js_1 = __webpack_require__(/*! ../fb/time.js */ \"./node_modules/apache-arrow/fb/time.js\");\nconst timestamp_js_1 = __webpack_require__(/*! ../fb/timestamp.js */ \"./node_modules/apache-arrow/fb/timestamp.js\");\nconst interval_js_1 = __webpack_require__(/*! ../fb/interval.js */ \"./node_modules/apache-arrow/fb/interval.js\");\nconst list_js_1 = __webpack_require__(/*! ../fb/list.js */ \"./node_modules/apache-arrow/fb/list.js\");\nconst struct__js_1 = __webpack_require__(/*! ../fb/struct_.js */ \"./node_modules/apache-arrow/fb/struct_.js\");\nconst union_js_1 = __webpack_require__(/*! ../fb/union.js */ \"./node_modules/apache-arrow/fb/union.js\");\nconst dictionary_encoding_js_1 = __webpack_require__(/*! ../fb/dictionary-encoding.js */ \"./node_modules/apache-arrow/fb/dictionary-encoding.js\");\nconst fixed_size_binary_js_1 = __webpack_require__(/*! ../fb/fixed-size-binary.js */ \"./node_modules/apache-arrow/fb/fixed-size-binary.js\");\nconst fixed_size_list_js_1 = __webpack_require__(/*! ../fb/fixed-size-list.js */ \"./node_modules/apache-arrow/fb/fixed-size-list.js\");\nconst map_js_1 = __webpack_require__(/*! ../fb/map.js */ \"./node_modules/apache-arrow/fb/map.js\");\n/** @ignore */\nclass TypeAssembler extends visitor_js_1.Visitor {\n    visit(node, builder) {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    visitNull(_node, b) {\n        null_js_1.Null.startNull(b);\n        return null_js_1.Null.endNull(b);\n    }\n    visitInt(node, b) {\n        int_js_1.Int.startInt(b);\n        int_js_1.Int.addBitWidth(b, node.bitWidth);\n        int_js_1.Int.addIsSigned(b, node.isSigned);\n        return int_js_1.Int.endInt(b);\n    }\n    visitFloat(node, b) {\n        floating_point_js_1.FloatingPoint.startFloatingPoint(b);\n        floating_point_js_1.FloatingPoint.addPrecision(b, node.precision);\n        return floating_point_js_1.FloatingPoint.endFloatingPoint(b);\n    }\n    visitBinary(_node, b) {\n        binary_js_1.Binary.startBinary(b);\n        return binary_js_1.Binary.endBinary(b);\n    }\n    visitBool(_node, b) {\n        bool_js_1.Bool.startBool(b);\n        return bool_js_1.Bool.endBool(b);\n    }\n    visitUtf8(_node, b) {\n        utf8_js_1.Utf8.startUtf8(b);\n        return utf8_js_1.Utf8.endUtf8(b);\n    }\n    visitDecimal(node, b) {\n        decimal_js_1.Decimal.startDecimal(b);\n        decimal_js_1.Decimal.addScale(b, node.scale);\n        decimal_js_1.Decimal.addPrecision(b, node.precision);\n        decimal_js_1.Decimal.addBitWidth(b, node.bitWidth);\n        return decimal_js_1.Decimal.endDecimal(b);\n    }\n    visitDate(node, b) {\n        date_js_1.Date.startDate(b);\n        date_js_1.Date.addUnit(b, node.unit);\n        return date_js_1.Date.endDate(b);\n    }\n    visitTime(node, b) {\n        time_js_1.Time.startTime(b);\n        time_js_1.Time.addUnit(b, node.unit);\n        time_js_1.Time.addBitWidth(b, node.bitWidth);\n        return time_js_1.Time.endTime(b);\n    }\n    visitTimestamp(node, b) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        timestamp_js_1.Timestamp.startTimestamp(b);\n        timestamp_js_1.Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            timestamp_js_1.Timestamp.addTimezone(b, timezone);\n        }\n        return timestamp_js_1.Timestamp.endTimestamp(b);\n    }\n    visitInterval(node, b) {\n        interval_js_1.Interval.startInterval(b);\n        interval_js_1.Interval.addUnit(b, node.unit);\n        return interval_js_1.Interval.endInterval(b);\n    }\n    visitList(_node, b) {\n        list_js_1.List.startList(b);\n        return list_js_1.List.endList(b);\n    }\n    visitStruct(_node, b) {\n        struct__js_1.Struct_.startStruct_(b);\n        return struct__js_1.Struct_.endStruct_(b);\n    }\n    visitUnion(node, b) {\n        union_js_1.Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = union_js_1.Union.createTypeIdsVector(b, node.typeIds);\n        union_js_1.Union.startUnion(b);\n        union_js_1.Union.addMode(b, node.mode);\n        union_js_1.Union.addTypeIds(b, typeIds);\n        return union_js_1.Union.endUnion(b);\n    }\n    visitDictionary(node, b) {\n        const indexType = this.visit(node.indices, b);\n        dictionary_encoding_js_1.DictionaryEncoding.startDictionaryEncoding(b);\n        dictionary_encoding_js_1.DictionaryEncoding.addId(b, new Long(node.id, 0));\n        dictionary_encoding_js_1.DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            dictionary_encoding_js_1.DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return dictionary_encoding_js_1.DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    visitFixedSizeBinary(node, b) {\n        fixed_size_binary_js_1.FixedSizeBinary.startFixedSizeBinary(b);\n        fixed_size_binary_js_1.FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return fixed_size_binary_js_1.FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    visitFixedSizeList(node, b) {\n        fixed_size_list_js_1.FixedSizeList.startFixedSizeList(b);\n        fixed_size_list_js_1.FixedSizeList.addListSize(b, node.listSize);\n        return fixed_size_list_js_1.FixedSizeList.endFixedSizeList(b);\n    }\n    visitMap(node, b) {\n        map_js_1.Map.startMap(b);\n        map_js_1.Map.addKeysSorted(b, node.keysSorted);\n        return map_js_1.Map.endMap(b);\n    }\n}\nexports.TypeAssembler = TypeAssembler;\n/** @ignore */\nexports.instance = new TypeAssembler();\n\n//# sourceMappingURL=typeassembler.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor/typeassembler.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor/typecomparator.js":
/*!*************************************************************!*\
  !*** ./node_modules/apache-arrow/visitor/typecomparator.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.compareTypes = exports.compareFields = exports.compareSchemas = exports.instance = exports.TypeComparator = void 0;\nconst visitor_js_1 = __webpack_require__(/*! ../visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\n/** @ignore */\nclass TypeComparator extends visitor_js_1.Visitor {\n    compareSchemas(schema, other) {\n        return (schema === other) || (other instanceof schema.constructor &&\n            this.compareManyFields(schema.fields, other.fields));\n    }\n    compareManyFields(fields, others) {\n        return (fields === others) || (Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => this.compareFields(f, others[i])));\n    }\n    compareFields(field, other) {\n        return (field === other) || (other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            this.visit(field.type, other.type));\n    }\n}\nexports.TypeComparator = TypeComparator;\nfunction compareConstructor(type, other) {\n    return other instanceof type.constructor;\n}\nfunction compareAny(type, other) {\n    return (type === other) || compareConstructor(type, other);\n}\nfunction compareInt(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned);\n}\nfunction compareFloat(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.precision === other.precision);\n}\nfunction compareFixedSizeBinary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth);\n}\nfunction compareDate(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareTimestamp(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone);\n}\nfunction compareTime(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth);\n}\nfunction compareList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        exports.instance.compareManyFields(type.children, other.children));\n}\nfunction compareStruct(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        exports.instance.compareManyFields(type.children, other.children));\n}\nfunction compareUnion(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        exports.instance.compareManyFields(type.children, other.children));\n}\nfunction compareDictionary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        exports.instance.visit(type.indices, other.indices) &&\n        exports.instance.visit(type.dictionary, other.dictionary));\n}\nfunction compareInterval(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareFixedSizeList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        exports.instance.compareManyFields(type.children, other.children));\n}\nfunction compareMap(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        exports.instance.compareManyFields(type.children, other.children));\n}\nTypeComparator.prototype.visitNull = compareAny;\nTypeComparator.prototype.visitBool = compareAny;\nTypeComparator.prototype.visitInt = compareInt;\nTypeComparator.prototype.visitInt8 = compareInt;\nTypeComparator.prototype.visitInt16 = compareInt;\nTypeComparator.prototype.visitInt32 = compareInt;\nTypeComparator.prototype.visitInt64 = compareInt;\nTypeComparator.prototype.visitUint8 = compareInt;\nTypeComparator.prototype.visitUint16 = compareInt;\nTypeComparator.prototype.visitUint32 = compareInt;\nTypeComparator.prototype.visitUint64 = compareInt;\nTypeComparator.prototype.visitFloat = compareFloat;\nTypeComparator.prototype.visitFloat16 = compareFloat;\nTypeComparator.prototype.visitFloat32 = compareFloat;\nTypeComparator.prototype.visitFloat64 = compareFloat;\nTypeComparator.prototype.visitUtf8 = compareAny;\nTypeComparator.prototype.visitBinary = compareAny;\nTypeComparator.prototype.visitFixedSizeBinary = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate = compareDate;\nTypeComparator.prototype.visitDateDay = compareDate;\nTypeComparator.prototype.visitDateMillisecond = compareDate;\nTypeComparator.prototype.visitTimestamp = compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond = compareTimestamp;\nTypeComparator.prototype.visitTime = compareTime;\nTypeComparator.prototype.visitTimeSecond = compareTime;\nTypeComparator.prototype.visitTimeMillisecond = compareTime;\nTypeComparator.prototype.visitTimeMicrosecond = compareTime;\nTypeComparator.prototype.visitTimeNanosecond = compareTime;\nTypeComparator.prototype.visitDecimal = compareAny;\nTypeComparator.prototype.visitList = compareList;\nTypeComparator.prototype.visitStruct = compareStruct;\nTypeComparator.prototype.visitUnion = compareUnion;\nTypeComparator.prototype.visitDenseUnion = compareUnion;\nTypeComparator.prototype.visitSparseUnion = compareUnion;\nTypeComparator.prototype.visitDictionary = compareDictionary;\nTypeComparator.prototype.visitInterval = compareInterval;\nTypeComparator.prototype.visitIntervalDayTime = compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth = compareInterval;\nTypeComparator.prototype.visitFixedSizeList = compareFixedSizeList;\nTypeComparator.prototype.visitMap = compareMap;\n/** @ignore */\nexports.instance = new TypeComparator();\nfunction compareSchemas(schema, other) {\n    return exports.instance.compareSchemas(schema, other);\n}\nexports.compareSchemas = compareSchemas;\nfunction compareFields(field, other) {\n    return exports.instance.compareFields(field, other);\n}\nexports.compareFields = compareFields;\nfunction compareTypes(type, other) {\n    return exports.instance.visit(type, other);\n}\nexports.compareTypes = compareTypes;\n\n//# sourceMappingURL=typecomparator.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor/typecomparator.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor/vectorassembler.js":
/*!**************************************************************!*\
  !*** ./node_modules/apache-arrow/visitor/vectorassembler.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VectorAssembler = void 0;\nconst vector_js_1 = __webpack_require__(/*! ../vector.js */ \"./node_modules/apache-arrow/vector.js\");\nconst visitor_js_1 = __webpack_require__(/*! ../visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nconst enum_js_1 = __webpack_require__(/*! ../enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst recordbatch_js_1 = __webpack_require__(/*! ../recordbatch.js */ \"./node_modules/apache-arrow/recordbatch.js\");\nconst buffer_js_1 = __webpack_require__(/*! ../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\nconst bit_js_1 = __webpack_require__(/*! ../util/bit.js */ \"./node_modules/apache-arrow/util/bit.js\");\nconst message_js_1 = __webpack_require__(/*! ../ipc/metadata/message.js */ \"./node_modules/apache-arrow/ipc/metadata/message.js\");\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\n/** @ignore */\nclass VectorAssembler extends visitor_js_1.Visitor {\n    constructor() {\n        super();\n        this._byteLength = 0;\n        this._nodes = [];\n        this._buffers = [];\n        this._bufferRegions = [];\n    }\n    /** @nocollapse */\n    static assemble(...args) {\n        const unwrap = (nodes) => nodes.flatMap((node) => Array.isArray(node) ? unwrap(node) :\n            (node instanceof recordbatch_js_1.RecordBatch) ? node.data.children : node.data);\n        const assembler = new VectorAssembler();\n        assembler.visitMany(unwrap(args));\n        return assembler;\n    }\n    visit(data) {\n        if (data instanceof vector_js_1.Vector) {\n            this.visitMany(data.data);\n            return this;\n        }\n        const { type } = data;\n        if (!type_js_1.DataType.isDictionary(type)) {\n            const { length, nullCount } = data;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!type_js_1.DataType.isNull(type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : (0, bit_js_1.truncateBitmap)(data.offset, length, data.nullBitmap));\n            }\n            this.nodes.push(new message_js_1.FieldNode(length, nullCount));\n        }\n        return super.visit(data);\n    }\n    visitNull(_null) {\n        return this;\n    }\n    visitDictionary(data) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(data.clone(data.type.indices));\n    }\n    get nodes() { return this._nodes; }\n    get buffers() { return this._buffers; }\n    get byteLength() { return this._byteLength; }\n    get bufferRegions() { return this._bufferRegions; }\n}\nexports.VectorAssembler = VectorAssembler;\n/** @ignore */\nfunction addBuffer(values) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new message_js_1.BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n/** @ignore */\nfunction assembleUnion(data) {\n    const { type, length, typeIds, valueOffsets } = data;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === enum_js_1.UnionMode.Sparse) {\n        return assembleNestedVector.call(this, data);\n    }\n    else if (type.mode === enum_js_1.UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (data.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, data);\n        }\n        else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = (0, buffer_js_1.rebaseValueOffsets)(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = data.children[childIndex]) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n/** @ignore */\nfunction assembleBoolVector(data) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values;\n    if (data.nullCount >= data.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    }\n    else if ((values = data.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, (0, bit_js_1.truncateBitmap)(data.offset, data.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, (0, bit_js_1.packBools)(data.values));\n}\n/** @ignore */\nfunction assembleFlatVector(data) {\n    return addBuffer.call(this, data.values.subarray(0, data.length * data.stride));\n}\n/** @ignore */\nfunction assembleFlatListVector(data) {\n    const { length, values, valueOffsets } = data;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, (0, buffer_js_1.rebaseValueOffsets)(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n/** @ignore */\nfunction assembleListVector(data) {\n    const { length, valueOffsets } = data;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, (0, buffer_js_1.rebaseValueOffsets)(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(data.children[0]);\n}\n/** @ignore */\nfunction assembleNestedVector(data) {\n    return this.visitMany(data.type.children.map((_, i) => data.children[i]).filter(Boolean))[0];\n}\nVectorAssembler.prototype.visitBool = assembleBoolVector;\nVectorAssembler.prototype.visitInt = assembleFlatVector;\nVectorAssembler.prototype.visitFloat = assembleFlatVector;\nVectorAssembler.prototype.visitUtf8 = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary = assembleFlatVector;\nVectorAssembler.prototype.visitDate = assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp = assembleFlatVector;\nVectorAssembler.prototype.visitTime = assembleFlatVector;\nVectorAssembler.prototype.visitDecimal = assembleFlatVector;\nVectorAssembler.prototype.visitList = assembleListVector;\nVectorAssembler.prototype.visitStruct = assembleNestedVector;\nVectorAssembler.prototype.visitUnion = assembleUnion;\nVectorAssembler.prototype.visitInterval = assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList = assembleListVector;\nVectorAssembler.prototype.visitMap = assembleListVector;\n\n//# sourceMappingURL=vectorassembler.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor/vectorassembler.js?");

/***/ }),

/***/ "./node_modules/apache-arrow/visitor/vectorloader.js":
/*!***********************************************************!*\
  !*** ./node_modules/apache-arrow/visitor/vectorloader.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JSONVectorLoader = exports.VectorLoader = void 0;\nconst data_js_1 = __webpack_require__(/*! ../data.js */ \"./node_modules/apache-arrow/data.js\");\nconst schema_js_1 = __webpack_require__(/*! ../schema.js */ \"./node_modules/apache-arrow/schema.js\");\nconst type_js_1 = __webpack_require__(/*! ../type.js */ \"./node_modules/apache-arrow/type.js\");\nconst visitor_js_1 = __webpack_require__(/*! ../visitor.js */ \"./node_modules/apache-arrow/visitor.js\");\nconst bit_js_1 = __webpack_require__(/*! ../util/bit.js */ \"./node_modules/apache-arrow/util/bit.js\");\nconst utf8_js_1 = __webpack_require__(/*! ../util/utf8.js */ \"./node_modules/apache-arrow/util/utf8.js\");\nconst int_js_1 = __webpack_require__(/*! ../util/int.js */ \"./node_modules/apache-arrow/util/int.js\");\nconst enum_js_1 = __webpack_require__(/*! ../enum.js */ \"./node_modules/apache-arrow/enum.js\");\nconst buffer_js_1 = __webpack_require__(/*! ../util/buffer.js */ \"./node_modules/apache-arrow/util/buffer.js\");\n/** @ignore */\nclass VectorLoader extends visitor_js_1.Visitor {\n    constructor(bytes, nodes, buffers, dictionaries) {\n        super();\n        this.nodesIndex = -1;\n        this.buffersIndex = -1;\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n    visit(node) {\n        return super.visit(node instanceof schema_js_1.Field ? node.type : node);\n    }\n    visitNull(type, { length } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length });\n    }\n    visitBool(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitInt(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitFloat(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitUtf8(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), data: this.readData(type) });\n    }\n    visitBinary(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), data: this.readData(type) });\n    }\n    visitFixedSizeBinary(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitDate(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitTimestamp(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitTime(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitDecimal(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitList(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), 'child': this.visit(type.children[0]) });\n    }\n    visitStruct(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), children: this.visitMany(type.children) });\n    }\n    visitUnion(type) {\n        return type.mode === enum_js_1.UnionMode.Sparse ? this.visitSparseUnion(type) : this.visitDenseUnion(type);\n    }\n    visitDenseUnion(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), typeIds: this.readTypeIds(type), valueOffsets: this.readOffsets(type), children: this.visitMany(type.children) });\n    }\n    visitSparseUnion(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), typeIds: this.readTypeIds(type), children: this.visitMany(type.children) });\n    }\n    visitDictionary(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type.indices), dictionary: this.readDictionary(type) });\n    }\n    visitInterval(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    visitFixedSizeList(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), 'child': this.visit(type.children[0]) });\n    }\n    visitMap(type, { length, nullCount } = this.nextFieldNode()) {\n        return (0, data_js_1.makeData)({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), 'child': this.visit(type.children[0]) });\n    }\n    nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    readNullBitmap(type, nullCount, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    readOffsets(type, buffer) { return this.readData(type, buffer); }\n    readTypeIds(type, buffer) { return this.readData(type, buffer); }\n    readData(_type, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    readDictionary(type) {\n        return this.dictionaries.get(type.id);\n    }\n}\nexports.VectorLoader = VectorLoader;\n/** @ignore */\nclass JSONVectorLoader extends VectorLoader {\n    constructor(sources, nodes, buffers, dictionaries) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    readNullBitmap(_type, nullCount, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : (0, bit_js_1.packBools)(this.sources[offset]);\n    }\n    readOffsets(_type, { offset } = this.nextBufferRange()) {\n        return (0, buffer_js_1.toArrayBufferView)(Uint8Array, (0, buffer_js_1.toArrayBufferView)(Int32Array, this.sources[offset]));\n    }\n    readTypeIds(type, { offset } = this.nextBufferRange()) {\n        return (0, buffer_js_1.toArrayBufferView)(Uint8Array, (0, buffer_js_1.toArrayBufferView)(type.ArrayType, this.sources[offset]));\n    }\n    readData(type, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (type_js_1.DataType.isTimestamp(type)) {\n            return (0, buffer_js_1.toArrayBufferView)(Uint8Array, int_js_1.Int64.convertArray(sources[offset]));\n        }\n        else if ((type_js_1.DataType.isInt(type) || type_js_1.DataType.isTime(type)) && type.bitWidth === 64) {\n            return (0, buffer_js_1.toArrayBufferView)(Uint8Array, int_js_1.Int64.convertArray(sources[offset]));\n        }\n        else if (type_js_1.DataType.isDate(type) && type.unit === enum_js_1.DateUnit.MILLISECOND) {\n            return (0, buffer_js_1.toArrayBufferView)(Uint8Array, int_js_1.Int64.convertArray(sources[offset]));\n        }\n        else if (type_js_1.DataType.isDecimal(type)) {\n            return (0, buffer_js_1.toArrayBufferView)(Uint8Array, int_js_1.Int128.convertArray(sources[offset]));\n        }\n        else if (type_js_1.DataType.isBinary(type) || type_js_1.DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset]);\n        }\n        else if (type_js_1.DataType.isBool(type)) {\n            return (0, bit_js_1.packBools)(sources[offset]);\n        }\n        else if (type_js_1.DataType.isUtf8(type)) {\n            return (0, utf8_js_1.encodeUtf8)(sources[offset].join(''));\n        }\n        return (0, buffer_js_1.toArrayBufferView)(Uint8Array, (0, buffer_js_1.toArrayBufferView)(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\nexports.JSONVectorLoader = JSONVectorLoader;\n/** @ignore */\nfunction binaryDataFromJSON(values) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = Number.parseInt(joined.slice(i, i + 2), 16);\n    }\n    return data;\n}\n\n//# sourceMappingURL=vectorloader.js.map\n\n\n//# sourceURL=webpack://assets/./node_modules/apache-arrow/visitor/vectorloader.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./assets/index.js");
/******/ 	
/******/ })()
;